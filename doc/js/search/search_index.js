var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/NgcCompliance.html",[0,0.183,1,1.697]],["body/interfaces/NgcCompliance.html",[0,0.341,1,2.569,2,0.384,3,0.445,4,0.325,5,2.569,6,2.251,7,0.445,8,3.093,9,2.886,10,3.814,11,3.603,12,2.56,13,2.974,14,3.603,15,3.603,16,0.325,17,1.271,18,3.603,19,3.603,20,3.603,21,2.306,22,0.325,23,2.296,24,1.342,25,0.835,26,3.603,27,0.402,28,0.038,29,1.798,30,0.728,31,2.003,32,2.003,33,2.003,34,2.003,35,1.798,36,1.798,37,2.003,38,0.993,39,1.798,40,2.08,41,2.569,42,1.882,43,1.798,44,2.251,45,1.798,46,2.003,47,2.003,48,2.003,49,1.622,50,2.003,51,2.003,52,1.468,53,0.51,54,0.898,55,1.207,56,1.207,57,1.039,58,1.152,59,1.152,60,0.028,61,0.028]],["title/classes/NgcContentOptions.html",[16,0.275,62,2.168]],["body/classes/NgcContentOptions.html",[2,0.295,3,0.342,4,0.25,7,0.342,16,0.35,17,1.269,22,0.35,23,1.744,24,1.375,25,1.038,27,0.207,28,0.039,30,1.224,38,1.333,39,1.382,49,1.247,53,0.795,54,0.69,57,1.186,58,1.206,59,1.206,60,0.024,61,0.024,62,2.752,63,5.799,64,1.382,65,1.968,66,1.382,67,0.783,68,1.97,69,3.021,70,4.837,71,3.021,72,3.748,73,3.993,74,0.805,75,2.559,76,2.837,77,2.287,78,3.874,79,2.77,80,3.198,81,2.77,82,2.287,83,4.354,84,2.287,85,3.874,86,2.77,87,3.198,88,3.198,89,2.77,90,3.198,91,3.198,92,3.198,93,1.968,94,2.77,95,3.874,96,3.198,97,2.752]],["title/interfaces/NgcCookieConsent.html",[0,0.183,98,1.697]],["body/interfaces/NgcCookieConsent.html",[0,0.295,2,0.182,3,0.414,4,0.154,7,0.211,16,0.154,17,0.425,22,0.154,24,0.752,25,0.487,27,0.284,28,0.039,30,0.345,38,0.47,42,0.695,52,1.363,53,0.751,54,1.192,55,1.778,56,1.649,57,0.606,58,0.672,59,0.672,60,0.017,61,0.017,66,2.066,67,0.676,68,0.695,74,0.474,98,2.114,99,1.066,100,1.506,101,2.076,102,2.197,103,2.375,104,1.506,105,2.75,106,2.697,107,1.706,108,2.566,109,1.685,110,2.386,111,2.114,112,1.947,113,2.737,114,3.428,115,1.706,116,1.066,117,0.851,118,2.301,119,1.066,120,1.706,121,3.022,122,1.947,123,1.363,124,0.695,125,2.951,126,3.051,127,1.066,128,1.066,129,0.768,130,1.066,131,1.066,132,0.768,133,1.066,134,1.066,135,0.768,136,1.066,137,1.214,138,1.066,139,1.066,140,1.066,141,1.685,142,1.86,143,1.685,144,1.685,145,1.685,146,1.685,147,1.685,148,1.685,149,1.685,150,1.685,151,0.949,152,1.066,153,1.5,154,0.63,155,0.851,156,1.066,157,0.768,158,1.066,159,1.066,160,1.066,161,0.949,162,1.066,163,1.066,164,1.346,165,2.859,166,2.587,167,1.066,168,1.066,169,1.066,170,1.066,171,1.066,172,1.066,173,1.066,174,1.066,175,2.448,176,2.75,177,1.066,178,1.066,179,1.669,180,0.695,181,1.066,182,1.066,183,1.066,184,0.768,185,0.949,186,1.066,187,1.066,188,1.066,189,2.301,190,1.066,191,1.066,192,1.066,193,1.066,194,1.066,195,1.066,196,1.066,197,1.066,198,1.066,199,1.066,200,1.066,201,1.066,202,1.066,203,1.066,204,1.066,205,1.066,206,1.066,207,1.066,208,1.685,209,1.066,210,1.066,211,1.066,212,1.685,213,1.066,214,1.066,215,1.066,216,1.066,217,1.066,218,0.63,219,1.506,220,1.066,221,1.066,222,0.851,223,1.066,224,1.066,225,1.066,226,1.066,227,1.685,228,0.768,229,1.066,230,1.066,231,1.066,232,1.066,233,1.066,234,1.066,235,1.066,236,1.066,237,1.86,238,1.066,239,1.066,240,1.066,241,1.066,242,1.669,243,1.506,244,1.066,245,1.066,246,1.066,247,1.363,248,1.066,249,1.066,250,0.949,251,0.851,252,0.851,253,1.066,254,1.066,255,1.066,256,1.066,257,1.066,258,1.066,259,1.066,260,1.066,261,1.066,262,1.066,263,1.066,264,1.066,265,1.066,266,1.066,267,1.066,268,1.066,269,1.066,270,1.066,271,1.066,272,1.066,273,1.066,274,1.066,275,1.066]],["title/modules/NgcCookieConsentModule.html",[276,1.373,277,1.906]],["body/modules/NgcCookieConsentModule.html",[2,0.418,3,0.485,4,0.354,7,0.485,16,0.354,25,0.709,27,0.293,28,0.039,30,0.793,43,2.434,60,0.03,61,0.03,74,0.556,104,1.767,108,2.434,110,2.848,116,2.452,117,1.959,118,2.434,122,2.261,124,1.599,137,2.195,157,2.195,164,2.434,218,1.801,276,2.388,277,3.315,278,3.926,279,4.878,280,3.926,281,4.878,282,3.926,283,5.306,284,4.38,285,4.878,286,3.24,287,3.926,288,3.926]],["title/interfaces/NgcCookieConsentPopup.html",[0,0.183,113,1.697]],["body/interfaces/NgcCookieConsentPopup.html",[0,0.288,2,0.169,3,0.395,4,0.143,7,0.196,16,0.143,17,0.396,22,0.143,24,0.718,25,0.928,27,0.273,28,0.039,30,0.645,38,0.438,42,0.647,52,1.3,53,0.738,54,1.162,55,1.689,56,1.611,57,0.573,58,0.635,59,0.635,60,0.016,61,0.016,66,1.995,67,0.321,68,1.3,74,0.452,98,1.775,99,0.992,100,1.436,101,1.921,102,2.13,103,0.992,104,1.436,105,2.666,108,2.805,109,0.992,110,2.13,111,1.417,112,1.826,113,2.803,114,3.489,116,1.994,117,1.593,118,2.13,121,3.106,122,1.898,123,1.3,124,0.647,125,2.9,126,3.007,127,0.992,128,0.992,129,0.715,130,0.992,131,0.992,132,0.715,133,0.992,134,0.992,135,0.715,136,0.992,137,1.147,138,0.992,139,1.592,140,1.592,141,2.497,142,2.373,143,1.994,144,2.497,145,2.497,146,2.497,147,2.497,148,1.994,149,2.497,150,2.497,151,0.884,152,0.992,153,1.417,154,0.587,155,0.793,156,0.992,157,0.715,158,0.992,159,0.992,160,0.992,161,0.884,162,0.992,163,0.992,164,1.272,165,2.803,166,2.497,167,0.992,168,0.992,169,0.992,170,0.992,171,0.992,172,0.992,173,0.992,174,0.992,175,2.373,176,2.666,177,0.992,178,0.992,179,1.593,180,0.647,181,0.992,182,0.992,183,0.992,184,0.715,185,0.884,186,0.992,187,0.992,188,0.992,189,2.237,190,0.992,191,0.992,192,0.992,193,0.992,194,0.992,195,0.992,196,0.992,197,0.992,198,0.992,199,0.992,200,0.992,201,0.992,202,0.992,203,0.992,204,0.992,205,0.992,206,0.992,207,0.992,208,1.592,209,0.992,210,0.992,211,0.992,212,1.592,213,0.992,214,0.992,215,0.992,216,0.992,217,0.992,218,0.587,219,1.436,220,0.992,221,0.992,222,0.793,223,0.992,224,0.992,225,0.992,226,0.992,227,1.592,228,0.715,229,0.992,230,0.992,231,0.992,232,0.992,233,0.992,234,0.992,235,0.992,236,0.992,237,1.775,238,0.992,239,0.992,240,0.992,241,0.992,242,1.593,243,1.436,244,0.992,245,0.992,246,0.992,247,1.3,248,0.992,249,0.992,250,0.884,251,0.793,252,0.793,253,0.992,254,0.992,255,0.992,256,0.992,257,0.992,258,0.992,259,0.992,260,0.992,261,0.992,262,0.992,263,0.992,264,0.992,265,0.992,266,0.992,267,0.992,268,0.992,269,0.992,270,0.992,271,0.992,272,0.992,273,0.992,274,0.992,275,0.992,289,2.549,290,2.104,291,1.589,292,1.589,293,1.312,294,1.589,295,1.589,296,1.589,297,1.589,298,1.589,299,1.589,300,1.589,301,1.589,302,1.589,303,1.589,304,1.312]],["title/injectables/NgcCookieConsentService.html",[123,1.243,157,1.373]],["body/injectables/NgcCookieConsentService.html",[0,0.243,2,0.134,3,0.335,4,0.113,7,0.26,16,0.113,17,0.524,22,0.113,24,0.793,25,1.031,27,0.237,28,0.039,30,0.713,38,0.346,42,0.512,52,0.857,53,0.778,54,1.259,55,1.638,56,1.358,57,0.473,58,0.524,59,0.524,60,0.013,61,0.013,66,2.12,67,0.548,68,1.291,74,0.756,98,1.962,99,0.785,100,0.947,101,1.988,102,1.904,103,0.785,104,1.427,105,2.384,108,2.742,109,0.785,110,2.439,111,1.169,112,1.799,113,2.665,114,3.362,116,2.204,117,1.761,118,2.391,121,2.993,122,1.731,123,1.291,124,0.512,125,3.073,126,3.193,127,0.785,128,0.785,129,0.566,130,0.785,131,0.785,132,0.566,133,0.785,134,0.785,135,0.566,136,0.785,137,1.588,138,0.785,139,0.785,140,0.785,141,2.204,142,2.253,143,1.694,144,2.204,145,2.204,146,2.204,147,2.204,148,1.694,149,2.204,150,2.204,151,0.699,152,0.785,153,1.169,154,0.777,155,1.049,156,1.314,157,0.947,158,0.785,159,0.785,160,0.785,161,0.699,162,0.785,163,0.785,164,1.049,165,3.183,166,2.758,167,0.785,168,1.98,169,1.98,170,1.98,171,1.98,172,1.98,173,1.98,174,1.98,175,2.665,176,2.993,177,1.98,178,1.98,179,2.12,180,0.857,181,1.98,182,1.314,183,1.98,184,0.947,185,1.169,186,1.98,187,1.314,188,0.785,189,2.022,190,0.785,191,0.785,192,0.785,193,0.785,194,0.785,195,0.785,196,0.785,197,0.785,198,0.785,199,0.785,200,0.785,201,0.785,202,0.785,203,0.785,204,0.785,205,0.785,206,0.785,207,0.785,208,1.314,209,0.785,210,0.785,211,1.314,212,1.314,213,0.785,214,0.785,215,0.785,216,0.785,217,0.785,218,0.777,219,1.718,220,0.785,221,1.314,222,0.627,223,0.785,224,0.785,225,0.785,226,0.785,227,1.314,228,0.566,229,0.785,230,0.785,231,0.785,232,0.785,233,0.785,234,0.785,235,0.785,236,0.785,237,1.508,238,0.785,239,0.785,240,0.785,241,0.785,242,1.353,243,1.221,244,0.785,245,1.694,246,0.785,247,1.554,248,1.98,249,0.785,250,1.169,251,1.049,252,1.049,253,1.98,254,0.785,255,1.314,256,0.785,257,0.785,258,0.785,259,0.785,260,0.785,261,0.785,262,0.785,263,0.785,264,0.785,265,0.785,266,0.785,267,0.785,268,0.785,269,0.785,270,0.785,271,0.785,272,0.785,273,0.785,274,0.785,275,0.785,290,1.736,293,1.037,304,1.037,305,2.103,306,1.257,307,2.103,308,1.257,309,1.257,310,1.257,311,1.257,312,1.257,313,1.257,314,1.257,315,1.257,316,1.257,317,1.257,318,1.257,319,1.257,320,1.257,321,1.257,322,1.257,323,1.257,324,1.257,325,1.257,326,1.257,327,1.257,328,1.257,329,1.257,330,1.257,331,1.257,332,1.257,333,1.257,334,1.257,335,1.257,336,1.257,337,1.257]],["title/interfaces/NgcCookieConsentStatus.html",[0,0.183,56,1.023]],["body/interfaces/NgcCookieConsentStatus.html",[0,0.347,1,2.012,2,0.385,3,0.447,4,0.327,5,2.012,6,2.26,7,0.447,8,2.012,9,2.26,17,1.155,21,1.806,22,0.327,23,2.085,24,1.319,25,0.654,27,0.403,28,0.038,29,1.806,30,1.171,31,2.012,32,2.012,33,2.012,34,2.012,35,1.806,36,1.806,37,2.012,38,0.997,39,1.806,40,2.085,41,2.576,42,1.887,43,1.806,44,2.26,45,1.806,46,2.012,47,2.012,48,2.012,49,1.629,50,2.012,51,2.012,52,1.887,53,0.656,54,1.155,55,1.553,56,1.553,57,1.252,58,1.389,59,1.389,60,0.029,61,0.029,67,0.936]],["title/classes/NgcCookieOptions.html",[16,0.275,338,2.168]],["body/classes/NgcCookieOptions.html",[2,0.343,3,0.398,4,0.291,7,0.398,16,0.387,22,0.291,24,1.267,25,0.97,27,0.241,28,0.038,30,1.183,53,0.836,60,0.026,61,0.026,64,1.607,67,0.867,74,0.729,75,2.576,76,2.678,96,2.658,117,2.811,228,1.932,338,3.05,339,5.519,340,2.288,341,3.22,342,3.22,343,4.725,344,2.658,345,2.658,346,5.151,347,5.366,348,5.519,349,3.22,350,3.544,351,4.829,352,3.22,353,4.829,354,3.22,355,3.22,356,3.544,357,2.658,358,3.22,359,2.658,360,3.22,361,2.658,362,4.293,363,3.544,364,2.288,365,3.22,366,3.22,367,3.22,368,4.293,369,3.22,370,2.658,371,3.22,372,2.288,373,2.658,374,2.658,375,3.22,376,2.288,377,3.22]],["title/classes/NgcHTMLElements.html",[16,0.275,378,2.519]],["body/classes/NgcHTMLElements.html",[2,0.331,3,0.384,4,0.28,7,0.384,12,2.207,16,0.378,22,0.378,23,1.886,24,1.374,25,1.04,27,0.232,28,0.039,30,1.219,38,1.564,49,1.398,57,1.228,58,1.361,59,1.361,60,0.026,61,0.026,67,0.847,68,2.225,69,3.171,71,3.546,74,0.804,75,2.555,76,2.833,97,2.977,378,3.459,379,5.815,380,3.106,381,4.191,382,3.106,383,4.19,384,3.106,385,3.106,386,4.19,387,3.106,388,3.106,389,3.106,390,3.106]],["title/interfaces/NgcHasCookieConsent.html",[0,0.183,153,1.697]],["body/interfaces/NgcHasCookieConsent.html",[0,0.298,2,0.189,3,0.424,4,0.16,7,0.219,16,0.16,17,0.442,22,0.16,24,0.772,27,0.29,28,0.039,38,0.489,42,1.134,52,1.134,53,0.758,54,1.208,55,1.709,56,1.501,57,0.626,58,0.694,59,0.694,60,0.017,61,0.017,66,2.234,67,0.785,68,0.723,74,0.251,98,2.347,99,1.109,100,1.253,101,2.295,102,2.234,103,1.109,104,0.799,105,2.144,108,2.487,109,1.109,110,2.234,111,1.548,112,1.907,113,2.695,114,3.386,118,2.234,121,2.978,122,1.974,123,1.398,124,0.723,125,2.978,126,3.075,127,1.109,128,1.109,129,0.799,130,1.109,131,1.109,132,0.799,133,1.109,134,1.109,135,0.799,136,1.109,137,1.253,138,1.109,139,1.109,140,1.109,141,1.738,142,1.909,143,1.738,144,1.738,145,1.738,146,1.738,147,1.738,148,1.738,149,1.738,150,1.738,151,1.548,152,1.738,153,1.909,154,0.656,155,0.886,156,1.109,157,0.799,158,1.109,159,1.109,160,1.109,161,0.987,162,1.109,163,1.109,164,1.389,165,2.89,166,2.637,167,1.109,168,1.109,169,1.109,170,1.109,171,1.109,172,1.109,173,1.109,174,1.109,175,2.49,176,2.797,177,1.109,178,1.109,179,1.713,180,0.723,181,1.109,182,1.109,183,1.109,184,0.799,185,0.987,186,1.109,187,1.109,188,1.109,189,2.336,190,1.109,191,1.109,192,1.109,193,1.109,194,1.109,195,1.109,196,1.109,197,1.109,198,1.109,199,1.109,200,1.109,201,1.109,202,1.109,203,1.109,204,1.109,205,1.109,206,1.109,207,1.109,208,1.738,209,1.109,210,1.109,211,1.109,212,1.738,213,1.109,214,1.109,215,1.109,216,1.109,217,1.109,218,0.656,219,1.545,220,1.109,221,1.109,222,0.886,223,1.109,224,1.109,225,1.109,226,1.109,227,1.738,228,0.799,229,1.109,230,1.109,231,1.109,232,1.109,233,1.109,234,1.109,235,1.109,236,1.109,237,1.909,238,1.109,239,1.109,240,1.109,241,1.109,242,1.713,243,1.545,244,1.109,245,1.109,246,1.109,247,1.398,248,1.109,249,1.109,250,0.987,251,0.886,252,0.886,253,1.109,254,1.109,255,1.109,256,1.109,257,1.109,258,1.109,259,1.109,260,1.109,261,1.109,262,1.109,263,1.109,264,1.109,265,1.109,266,1.109,267,1.109,268,1.109,269,1.109,270,1.109,271,1.109,272,1.109,273,1.109,274,1.109,275,1.109]],["title/interfaces/NgcInitializeEvent.html",[0,0.183,135,1.373]],["body/interfaces/NgcInitializeEvent.html",[0,0.306,2,0.452,3,0.525,4,0.383,7,0.525,22,0.383,27,0.317,28,0.038,53,0.778,54,1.369,55,1.987,57,1.235,58,1.369,59,1.369,60,0.032,61,0.032,67,1.034,74,0.601,135,2.303,179,2.119,391,4.246,392,2.361,393,2.652]],["title/classes/NgcLawOptions.html",[16,0.275,394,2.519]],["body/classes/NgcLawOptions.html",[2,0.432,3,0.502,4,0.366,7,0.502,16,0.449,22,0.366,24,1.211,25,0.9,27,0.303,28,0.037,48,2.257,53,0.575,60,0.031,61,0.031,64,2.026,67,1.006,74,0.575,75,2.241,76,2.026,93,2.884,112,1.654,154,1.499,184,2.241,242,2.802,243,2.528,247,1.654,356,3.351,364,2.884,372,3.827,394,4.111,395,5.387,396,4.06,397,5.616,398,4.06,399,3.11,400,4.06,401,2.884,402,3.351,403,4.06,404,4.06,405,4.06]],["title/interfaces/NgcLayouts.html",[0,0.183,51,1.697]],["body/interfaces/NgcLayouts.html",[0,0.34,1,1.995,2,0.382,3,0.443,4,0.324,5,2.562,6,2.241,7,0.443,8,2.562,9,2.878,17,1.269,21,2.299,22,0.324,23,2.291,24,1.341,25,0.833,27,0.401,28,0.039,29,1.79,30,0.725,31,1.995,32,1.995,33,1.995,34,1.995,35,1.79,36,1.79,37,1.995,38,0.989,39,1.79,40,2.418,41,2.987,42,2.188,43,2.299,44,2.878,45,2.299,46,2.562,47,2.562,48,2.562,49,2.074,50,2.562,51,2.562,52,1.461,53,0.508,54,0.894,55,1.202,56,1.202,57,1.036,58,1.149,59,1.149,60,0.028,61,0.028,406,3.587]],["title/classes/NgcLocationOptions.html",[16,0.275,407,2.519]],["body/classes/NgcLocationOptions.html",[2,0.287,3,0.332,4,0.243,7,0.332,16,0.342,17,1.338,22,0.243,23,1.708,25,1.007,27,0.201,28,0.038,30,0.888,45,1.893,46,2.11,53,0.537,60,0.023,61,0.023,64,1.342,67,0.888,74,0.622,75,2.417,76,1.893,77,2.22,100,1.211,102,1.342,112,1.945,142,2.11,154,2.284,161,2.11,180,1.545,184,2.149,189,2.383,218,0.993,219,2.149,228,1.979,243,2.352,276,1.708,340,2.696,350,3.132,364,3.392,372,1.911,376,2.696,399,3.264,402,2.22,407,3.132,408,4.775,409,2.22,410,2.69,411,2.22,412,2.69,413,2.22,414,2.22,415,1.911,416,2.69,417,2.69,418,4.396,419,5.225,420,5.225,421,2.69,422,3.794,423,3.794,424,4.775,425,3.794,426,3.794,427,3.794,428,4.775,429,4.775,430,4.775,431,2.69,432,3.794,433,3.794,434,3.794,435,4.775,436,3.794,437,3.794,438,4.775,439,3.132,440,3.794,441,3.794,442,3.794,443,2.11,444,4.775,445,3.794,446,3.132,447,3.132,448,3.132,449,3.132,450,3.794,451,3.794,452,3.794,453,3.794,454,3.794,455,3.794]],["title/interfaces/NgcNoCookieLawEvent.html",[0,0.183,132,1.373]],["body/interfaces/NgcNoCookieLawEvent.html",[0,0.305,2,0.449,3,0.521,4,0.38,7,0.521,22,0.38,24,1.331,27,0.315,28,0.038,53,0.721,60,0.031,61,0.031,67,1.029,74,0.721,132,2.293,184,1.897,242,2.838,243,2.737,392,2.343,393,2.632,399,3.182,456,4.214,457,4.214,458,4.214]],["title/interfaces/NgcPalette.html",[0,0.183,35,1.523]],["body/interfaces/NgcPalette.html",[0,0.337,1,1.912,2,0.366,3,0.425,4,0.31,5,1.912,6,2.148,7,0.425,8,1.912,9,2.148,17,1.243,21,1.716,22,0.31,23,2.018,24,1.373,25,0.81,27,0.395,28,0.039,29,2.237,30,1.197,31,2.493,32,2.493,33,2.493,34,2.493,35,2.237,36,2.638,37,2.939,38,1.457,39,2.638,40,2.018,41,2.493,42,1.826,43,1.716,44,2.148,45,1.716,46,1.912,47,1.912,48,1.912,49,1.548,50,1.912,51,1.912,52,1.401,53,0.487,54,0.857,55,1.153,56,1.153,57,1.008,58,1.118,59,1.118,60,0.028,61,0.028,67,0.906,74,0.749]],["title/classes/NgcPaletteOptions.html",[16,0.275,459,2.519]],["body/classes/NgcPaletteOptions.html",[0,0.205,2,0.364,3,0.423,4,0.309,7,0.423,16,0.403,17,1.113,21,2.632,22,0.309,25,0.989,27,0.255,28,0.039,29,2.228,30,1.172,31,2.483,32,2.483,33,2.483,34,2.483,35,2.952,36,2.8,37,2.933,38,1.231,39,2.8,60,0.027,61,0.027,64,1.706,67,0.902,74,0.704,75,2.239,76,2.482,82,2.822,84,2.822,93,2.429,112,2.148,122,1.392,459,3.686,460,5.274,461,5.274,462,4.466,463,5.798,464,5.274,465,5.274,466,3.418]],["title/interfaces/NgcStatusChangeEvent.html",[0,0.183,129,1.373]],["body/interfaces/NgcStatusChangeEvent.html",[0,0.294,2,0.423,3,0.491,4,0.359,7,0.491,22,0.359,27,0.297,28,0.038,53,0.755,54,1.225,55,2.019,57,1.199,58,1.33,59,1.33,60,0.03,61,0.03,67,0.993,74,0.696,121,2.966,129,2.212,151,2.732,180,1.618,189,2.781,237,3.099,374,4.056,392,2.209,393,2.481,467,3.972,468,3.972,469,4.914,470,4.914]],["title/injectables/WindowService.html",[123,1.243,137,1.373]],["body/injectables/WindowService.html",[2,0.439,3,0.509,4,0.372,7,0.509,16,0.372,22,0.372,25,0.744,27,0.308,28,0.038,60,0.031,61,0.031,66,2.888,97,3.57,102,2.705,108,2.705,119,2.573,122,1.678,123,2.208,124,1.678,137,2.262,154,1.856,155,2.507,250,2.291,471,3.401,472,5.025,473,5.422,474,4.12,475,4.12,476,4.148,477,3.401,478,4.12,479,4.12]],["title/changelog.html",[247,1.043,480,1.819,481,2.56]],["body/changelog.html",[27,0.224,28,0.029,30,0.827,40,1.35,50,1.668,53,0.58,54,0.748,56,1.005,57,0.92,60,0.025,61,0.025,62,2.131,65,2.131,68,2.394,71,1.874,72,2.908,73,2.476,74,0.66,101,1.35,104,1.35,111,2.276,154,1.108,179,2.042,180,1.222,219,1.35,222,2.324,251,2.324,252,1.497,338,2.131,361,2.476,415,3.841,447,2.476,482,3,483,4.131,484,4.093,485,4.093,486,5.238,487,5.632,488,3,489,3,490,3,491,4.093,492,3,493,3,494,3,495,3,496,3,497,4.093,498,3,499,3,500,3,501,3,502,3,503,3,504,3,505,3,506,4.093,507,5.533,508,3,509,2.476,510,2.908,511,3,512,3,513,3,514,3,515,3,516,3,517,4.093,518,3,519,3,520,4.093,521,3,522,4.131,523,2.476,524,3,525,4.093,526,4.131,527,3,528,3,529,3,530,3,531,3,532,5.004,533,4.093,534,4.093,535,2.131,536,3,537,3,538,4.093,539,4.093,540,3,541,3,542,4.093,543,3.845,544,3,545,3,546,3,547,3,548,3,549,3,550,3,551,3,552,3,553,3,554,4.324,555,3,556,3,557,3,558,3.378,559,3,560,3,561,3,562,3,563,3,564,4.093,565,3,566,3,567,4.093,568,3,569,2.476,570,3,571,2.476,572,3,573,2.476,574,3,575,3,576,2.476,577,3,578,3,579,3,580,3,581,3,582,3,583,3,584,3]],["title/dependencies.html",[443,2.037,576,2.113]],["body/dependencies.html",[28,0.037,60,0.034,61,0.034,101,2.128,124,1.926,286,3.903,443,2.629,585,5.452,586,3.903]],["title/miscellaneous/functions.html",[119,2.288,587,1.599]],["body/miscellaneous/functions.html",[22,0.429,28,0.034,60,0.034,61,0.034,119,2.97,471,3.925,476,4.754,587,2.97,588,4.755]],["title/index.html",[22,0.231,247,1.043,480,1.819]],["body/index.html",[4,0.311,10,1.189,12,1.673,13,2.846,16,0.343,17,1.303,21,1.175,25,0.425,27,0.284,28,0.039,29,1.175,30,0.291,36,1.72,38,0.823,40,2.248,41,0.801,43,1.72,45,1.49,47,1.309,49,1.711,53,0.792,54,1.158,57,0.529,58,0.359,59,0.359,60,0.014,61,0.014,64,0.719,65,2.45,69,0.9,71,2.986,72,2.45,74,0.333,75,1.552,80,1.189,83,2.464,87,1.189,88,1.943,90,1.189,91,1.189,92,1.189,100,1.06,101,2.407,104,0.648,110,1.175,112,0.959,117,0.719,118,1.49,122,2.155,124,0.959,126,1.309,129,0.648,132,0.648,135,0.648,154,0.532,155,1.175,157,1.344,164,1.175,165,2.394,175,1.309,180,0.587,185,1.309,218,0.532,219,1.344,222,2.148,228,1.06,251,1.72,252,2.319,276,2.021,277,2.548,284,2.464,340,1.023,343,2.846,345,2.464,357,1.189,359,1.189,363,1.189,373,1.189,376,1.673,381,1.189,392,2.114,393,0.9,399,0.9,401,1.023,409,1.189,411,1.189,414,1.189,415,1.023,443,1.309,446,1.189,448,1.943,449,1.189,477,2.464,483,1.189,509,4.123,510,2.45,526,1.189,535,1.023,543,1.189,554,1.189,558,2.464,569,1.189,571,1.189,573,2.464,586,1.189,589,5.291,590,1.44,591,1.189,592,1.44,593,2.354,594,1.44,595,1.44,596,1.189,597,1.44,598,1.44,599,4.305,600,1.943,601,2.986,602,2.354,603,1.44,604,2.354,605,1.44,606,1.44,607,2.986,608,2.986,609,2.354,610,1.44,611,1.44,612,1.44,613,2.354,614,1.44,615,3.448,616,1.44,617,1.44,618,1.44,619,1.44,620,1.44,621,2.354,622,2.354,623,2.354,624,1.44,625,1.44,626,1.44,627,1.44,628,2.354,629,2.354,630,1.44,631,1.44,632,1.44,633,2.354,634,1.44,635,1.44,636,1.44,637,1.44,638,1.44,639,1.44,640,2.986,641,1.189,642,1.44,643,1.44,644,1.44,645,1.189,646,1.44,647,2.986,648,2.354,649,2.354,650,1.44,651,3.801,652,1.44,653,2.354,654,2.354,655,1.943,656,1.943,657,1.943,658,1.471,659,2.464,660,4.491,661,2.354,662,1.943,663,2.354,664,2.354,665,1.44,666,1.44,667,1.44,668,1.44,669,4.08,670,1.44,671,4.305,672,2.354,673,2.986,674,2.354,675,4.491,676,1.44,677,2.354,678,2.354,679,2.354,680,2.354,681,2.354,682,1.44,683,2.354,684,1.44,685,1.44,686,1.44,687,1.44,688,1.44,689,1.44,690,1.44,691,2.354,692,2.354,693,2.354,694,1.44,695,1.44,696,4.08,697,1.44,698,1.44,699,1.44,700,1.44,701,1.44,702,1.44,703,1.44,704,1.44,705,1.44,706,1.44,707,1.44,708,1.44,709,1.44,710,1.44,711,1.44,712,1.44,713,1.44,714,1.44,715,1.44,716,1.44,717,1.189,718,1.44,719,1.44,720,2.354,721,1.44,722,2.354,723,1.189,724,1.44,725,1.44,726,1.44,727,1.44,728,2.354,729,1.44,730,1.44,731,1.44,732,1.44,733,1.44,734,1.44,735,1.44,736,1.44,737,1.44,738,2.354,739,1.44,740,1.44,741,1.44,742,1.44,743,1.44,744,1.44,745,1.44,746,1.44,747,1.44,748,1.44,749,1.44,750,1.44,751,2.354,752,2.354,753,1.44,754,1.44,755,1.44,756,1.44,757,1.44,758,1.44,759,1.44,760,1.44,761,1.44,762,1.44,763,1.44,764,1.44,765,1.44,766,1.44,767,1.44,768,1.44,769,1.44,770,1.44,771,1.44,772,1.44,773,1.44,774,1.44,775,1.44,776,2.354,777,1.44,778,2.354,779,1.44,780,1.44,781,2.354,782,1.44,783,1.44,784,1.44,785,2.354,786,2.354,787,2.354,788,1.44,789,1.44,790,1.44,791,1.44,792,1.44,793,1.44,794,1.44,795,1.44,796,1.44,797,1.44,798,1.44,799,1.44,800,1.44,801,1.44,802,2.121,803,1.189,804,1.189,805,1.189,806,1.189,807,1.44,808,1.943]],["title/license.html",[247,1.043,480,1.819,802,1.819]],["body/license.html",[4,0.345,17,1.195,28,0.03,60,0.03,61,0.03,125,2.123,218,1.41,344,3.151,392,2.123,401,2.712,413,3.151,439,4.325,522,3.151,591,3.151,600,3.151,645,3.957,658,2.385,717,3.151,723,3.151,802,2.712,803,4.325,804,3.151,805,3.151,806,3.151,808,3.957,809,4.793,810,3.818,811,3.818,812,3.818,813,4.793,814,3.818,815,5.496,816,5.982,817,3.818,818,4.793,819,3.818,820,5.24,821,4.793,822,3.151,823,3.818,824,3.818,825,3.818,826,3.818,827,3.818,828,3.818,829,3.818,830,3.818,831,3.818,832,3.818,833,4.793,834,3.818,835,3.818,836,4.793,837,3.818,838,3.818,839,3.818,840,3.818,841,3.818,842,3.818,843,3.818,844,3.818,845,3.818,846,3.818,847,3.818,848,3.818,849,3.818,850,3.818,851,3.818,852,3.818,853,3.818,854,3.818]],["title/modules.html",[276,1.864]],["body/modules.html",[28,0.034,60,0.034,61,0.034,276,2.159,277,2.996,855,4.796,856,4.796,857,4.796]],["title/overview.html",[858,3.418]],["body/overview.html",[0,0.275,16,0.415,27,0.344,28,0.033,60,0.033,61,0.033,123,1.873,218,1.698,276,2.415,370,3.795,443,2.557,523,3.795,535,3.267,596,3.795,658,2.872,659,3.795,662,3.795,858,3.795,859,4.597,860,5.365,861,4.597]],["title/miscellaneous/typealiases.html",[587,1.599,862,3.664]],["body/miscellaneous/typealiases.html",[2,0.508,5,2.108,8,2.108,22,0.342,24,0.853,28,0.038,40,1.707,53,0.8,60,0.029,61,0.029,68,1.544,69,2.368,74,0.829,100,2.351,510,4.014,587,2.368,641,4.312,655,3.13,656,3.13,657,4.525,658,2.981,822,3.94,863,3.792,864,5.223,865,5.65,866,5.768,867,5.223,868,5.223,869,5.223,870,5.223,871,5.65,872,3.792,873,5.223,874,4.773,875,3.792,876,3.792]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["000",{"_index":653,"title":{},"body":{"index.html":{}}}],["000000",{"_index":464,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["02",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["02496e8",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["02ada28",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":370,"title":{},"body":{"classes/NgcCookieOptions.html":{},"overview.html":{}}}],["1.0.0",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["1.4.7",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":523,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["2.2.1",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["2.2.2",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":522,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":483,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["22",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["27ebb55",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["2ab9341",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["2d960c8",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":596,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.1.0",{"_index":586,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["365",{"_index":351,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["37371b6",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["4b32ce0",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["4fb02eb",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["5000",{"_index":444,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["5000m",{"_index":453,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["53",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["5f8a340",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":535,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["6cd260f",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["971b65e",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["9835145",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["_blank",{"_index":95,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["_window",{"_index":476,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["a0849f2",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":600,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":472,"title":{},"body":{"injectables/WindowService.html":{}}}],["acknowledg",{"_index":789,"title":{},"body":{"index.html":{}}}],["action",{"_index":591,"title":{},"body":{"index.html":{},"license.html":{}}}],["ad",{"_index":161,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{}}}],["add",{"_index":415,"title":{},"body":{"classes/NgcLocationOptions.html":{},"changelog.html":{},"index.html":{}}}],["addit",{"_index":32,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["adjust",{"_index":617,"title":{},"body":{"index.html":{}}}],["alias",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":57,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{}}}],["amd",{"_index":631,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":828,"title":{},"body":{"license.html":{}}}],["anglar",{"_index":725,"title":{},"body":{"index.html":{}}}],["angular",{"_index":222,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":286,"title":{},"body":{"modules/NgcCookieConsentModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":124,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{},"dependencies.html":{},"index.html":{}}}],["answer",{"_index":452,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["api",{"_index":156,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["app",{"_index":558,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":679,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":681,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":660,"title":{},"body":{"index.html":{}}}],["appear",{"_index":771,"title":{},"body":{"index.html":{}}}],["applic",{"_index":185,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["appmodul",{"_index":663,"title":{},"body":{"index.html":{}}}],["aris",{"_index":853,"title":{},"body":{"license.html":{}}}],["array",{"_index":424,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["asset",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":817,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":433,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["attribut",{"_index":34,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["author",{"_index":844,"title":{},"body":{"license.html":{}}}],["avail",{"_index":856,"title":{},"body":{"modules.html":{}}}],["background",{"_index":36,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["bad",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["bar",{"_index":510,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["basic",{"_index":100,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["befor",{"_index":470,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["belong",{"_index":362,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["below",{"_index":779,"title":{},"body":{"index.html":{}}}],["best",{"_index":91,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["better",{"_index":773,"title":{},"body":{"index.html":{}}}],["between",{"_index":45,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["block",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":121,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["bootstrap",{"_index":662,"title":{},"body":{"index.html":{},"overview.html":{}}}],["border",{"_index":37,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["bottom",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["break",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":857,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":250,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["browserlang",{"_index":738,"title":{},"body":{"index.html":{}}}],["bug",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":605,"title":{},"body":{"index.html":{}}}],["built",{"_index":41,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["bundl",{"_index":620,"title":{},"body":{"index.html":{}}}],["button",{"_index":21,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["c",{"_index":804,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":50,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"changelog.html":{}}}],["callback",{"_index":111,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{}}}],["can't",{"_index":445,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["cc",{"_index":15,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["ccservic",{"_index":692,"title":{},"body":{"index.html":{}}}],["chang",{"_index":180,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{}}}],["change.ev",{"_index":131,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["change.event.t",{"_index":468,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["changelog",{"_index":481,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":812,"title":{},"body":{"license.html":{}}}],["checkpopupinstanti",{"_index":305,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["checkpopupinstantiated(method",{"_index":211,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["choic",{"_index":360,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["chosen",{"_index":469,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["chosenbefor",{"_index":237,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["claim",{"_index":847,"title":{},"body":{"license.html":{}}}],["class",{"_index":16,"title":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{}},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"injectables/WindowService.html":{},"index.html":{},"overview.html":{}}}],["classic",{"_index":876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["clear",{"_index":255,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["clearstatu",{"_index":141,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["cli",{"_index":573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cli.json",{"_index":611,"title":{},"body":{"index.html":{}}}],["close",{"_index":68,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["close(showrevok",{"_index":143,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["code",{"_index":399,"title":{},"body":{"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"index.html":{}}}],["colour",{"_index":31,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["commit",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":466,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["commonmodul",{"_index":285,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["compil",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":731,"title":{},"body":{"index.html":{}}}],["complianc",{"_index":8,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"miscellaneous/typealiases.html":{}}}],["compon",{"_index":669,"title":{},"body":{"index.html":{}}}],["condit",{"_index":832,"title":{},"body":{"license.html":{}}}],["config",{"_index":118,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["configur",{"_index":219,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":854,"title":{},"body":{"license.html":{}}}],["consent",{"_index":54,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{}}}],["const",{"_index":647,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":306,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["constructor(priv",{"_index":691,"title":{},"body":{"index.html":{}}}],["constructor(windowservic",{"_index":187,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["contain",{"_index":11,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["content",{"_index":65,"title":{},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{},"index.html":{}}}],["contract",{"_index":851,"title":{},"body":{"license.html":{}}}],["cooki",{"_index":53,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cookie.allow",{"_index":746,"title":{},"body":{"index.html":{}}}],["cookie.deni",{"_index":747,"title":{},"body":{"index.html":{}}}],["cookie.dismiss",{"_index":745,"title":{},"body":{"index.html":{}}}],["cookie.domainopt",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["cookie.link",{"_index":748,"title":{},"body":{"index.html":{}}}],["cookie.messag",{"_index":744,"title":{},"body":{"index.html":{}}}],["cookie.polici",{"_index":749,"title":{},"body":{"index.html":{}}}],["cookieconfig:ngccookieconsentconfig",{"_index":648,"title":{},"body":{"index.html":{}}}],["cookiecons",{"_index":101,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["cookieconsent';th",{"_index":634,"title":{},"body":{"index.html":{}}}],["cookieconsent.j",{"_index":163,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["cookieconsent.popup",{"_index":139,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["cookieconsent.umd.j",{"_index":627,"title":{},"body":{"index.html":{}}}],["cookieconsent/bundles/ngx",{"_index":626,"title":{},"body":{"index.html":{}}}],["cookieconsent_statu",{"_index":353,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["cookieconsentnow",{"_index":603,"title":{},"body":{"index.html":{}}}],["cookiepolicyhref",{"_index":791,"title":{},"body":{"index.html":{}}}],["cookiepolicylink",{"_index":785,"title":{},"body":{"index.html":{}}}],["coooki",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["copi",{"_index":815,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":803,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":341,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["countri",{"_index":243,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{}}}],["countrycod",{"_index":242,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{}}}],["creat",{"_index":373,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["credit",{"_index":799,"title":{},"body":{"index.html":{}}}],["css",{"_index":18,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["current",{"_index":166,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["custom",{"_index":509,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customlayout",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["d3a7b3d",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["d674b93",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":848,"title":{},"body":{"license.html":{}}}],["data['cookie.allow",{"_index":760,"title":{},"body":{"index.html":{}}}],["data['cookie.deni",{"_index":762,"title":{},"body":{"index.html":{}}}],["data['cookie.dismiss",{"_index":758,"title":{},"body":{"index.html":{}}}],["data['cookie.head",{"_index":754,"title":{},"body":{"index.html":{}}}],["data['cookie.link",{"_index":764,"title":{},"body":{"index.html":{}}}],["data['cookie.messag",{"_index":756,"title":{},"body":{"index.html":{}}}],["data['cookie.polici",{"_index":766,"title":{},"body":{"index.html":{}}}],["date",{"_index":367,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["day",{"_index":369,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["deal",{"_index":818,"title":{},"body":{"license.html":{}}}],["declar",{"_index":659,"title":{},"body":{"index.html":{},"overview.html":{}}}],["declin",{"_index":80,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["default",{"_index":75,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["defin",{"_index":25,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["demo",{"_index":554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deni",{"_index":58,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["depend",{"_index":443,"title":{"dependencies.html":{}},"body":{"classes/NgcLocationOptions.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["descript",{"_index":7,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{}}}],["destroy",{"_index":144,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["differ",{"_index":639,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":409,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["dismiss",{"_index":59,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["display",{"_index":720,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":826,"title":{},"body":{"license.html":{}}}],["doc",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":717,"title":{},"body":{"index.html":{},"license.html":{}}}],["domain",{"_index":343,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["don't",{"_index":451,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["due",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["e.g",{"_index":728,"title":{},"body":{"index.html":{}}}],["e1bf9bf",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":9,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["easili",{"_index":721,"title":{},"body":{"index.html":{}}}],["edgeless",{"_index":656,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["edit",{"_index":610,"title":{},"body":{"index.html":{}}}],["element",{"_index":49,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["elements.t",{"_index":380,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:11",{"_index":390,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:13",{"_index":385,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:15",{"_index":382,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:17",{"_index":384,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:19",{"_index":388,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:21",{"_index":383,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:7",{"_index":387,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:9",{"_index":389,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["en",{"_index":741,"title":{},"body":{"index.html":{}}}],["en.json",{"_index":729,"title":{},"body":{"index.html":{}}}],["enabl",{"_index":402,"title":{},"body":{"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["encourag",{"_index":410,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["end",{"_index":642,"title":{},"body":{"index.html":{}}}],["ensur",{"_index":90,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["error",{"_index":447,"title":{},"body":{"classes/NgcLocationOptions.html":{},"changelog.html":{}}}],["error(`cooki",{"_index":215,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["event",{"_index":392,"title":{},"body":{"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{},"license.html":{}}}],["event/initialize.ev",{"_index":136,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["event/no",{"_index":133,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["event/statu",{"_index":130,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["exact",{"_index":637,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":782,"title":{},"body":{"index.html":{}}}],["execut",{"_index":417,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["experi",{"_index":92,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["expir",{"_index":366,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["expiri",{"_index":371,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["expiryday",{"_index":346,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":838,"title":{},"body":{"license.html":{}}}],["f1d600",{"_index":654,"title":{},"body":{"index.html":{}}}],["f8e71c",{"_index":463,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["fadein",{"_index":145,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["fadeout",{"_index":146,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["fail",{"_index":435,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["fals",{"_index":356,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{}}}],["fashion",{"_index":426,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["featur",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["fedcbd9",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":775,"title":{},"body":{"index.html":{}}}],["fff",{"_index":465,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"index.html":{},"license.html":{}}}],["fire",{"_index":393,"title":{},"body":{"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["first",{"_index":434,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["fit",{"_index":841,"title":{},"body":{"license.html":{}}}],["fix",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":374,"title":{},"body":{"classes/NgcCookieOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["follow",{"_index":723,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":630,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":280,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["forroot(config",{"_index":281,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["fr",{"_index":736,"title":{},"body":{"index.html":{}}}],["fr.json",{"_index":730,"title":{},"body":{"index.html":{}}}],["free",{"_index":413,"title":{},"body":{"classes/NgcLocationOptions.html":{},"license.html":{}}}],["freegeoip",{"_index":428,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["fulli",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":119,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":831,"title":{},"body":{"license.html":{}}}],["get",{"_index":247,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{}}}],["get(['cookie.head",{"_index":743,"title":{},"body":{"index.html":{}}}],["getconfig",{"_index":248,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["getnativewindow",{"_index":474,"title":{},"body":{"injectables/WindowService.html":{}}}],["getstatu",{"_index":105,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["gettransit",{"_index":253,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["github",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":458,"title":{},"body":{"interfaces/NgcNoCookieLawEvent.html":{}}}],["global",{"_index":477,"title":{},"body":{"injectables/WindowService.html":{},"index.html":{}}}],["go",{"_index":422,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["grant",{"_index":811,"title":{},"body":{"license.html":{}}}],["graph",{"_index":855,"title":{},"body":{"modules.html":{}}}],["group",{"_index":20,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["guid",{"_index":365,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["handler",{"_index":412,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["happi",{"_index":770,"title":{},"body":{"index.html":{}}}],["hard",{"_index":400,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["hasansw",{"_index":149,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["hascons",{"_index":150,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["hastransit",{"_index":103,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["header",{"_index":69,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcHTMLElements.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["header}}&nbsp",{"_index":386,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["here",{"_index":672,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":810,"title":{},"body":{"license.html":{}}}],["higher",{"_index":597,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":461,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["hoc",{"_index":425,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["holder",{"_index":845,"title":{},"body":{"license.html":{}}}],["hook",{"_index":229,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["href",{"_index":70,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["html",{"_index":12,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcHTMLElements.html":{},"index.html":{}}}],["http",{"_index":377,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["https://cookie.com",{"_index":792,"title":{},"body":{"index.html":{}}}],["https://cookiesandyou.com",{"_index":85,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["https://goo.gl/s2hy2a",{"_index":652,"title":{},"body":{"index.html":{}}}],["https://privacy.com",{"_index":795,"title":{},"body":{"index.html":{}}}],["https://tinesoft.github.io/ngx",{"_index":592,"title":{},"body":{"index.html":{}}}],["https://tos.com",{"_index":798,"title":{},"body":{"index.html":{}}}],["i.",{"_index":670,"title":{},"body":{"index.html":{}}}],["i18n",{"_index":719,"title":{},"body":{"index.html":{}}}],["ignor",{"_index":403,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["implement",{"_index":411,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["impli",{"_index":839,"title":{},"body":{"license.html":{}}}],["import",{"_index":122,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcPaletteOptions.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["includ",{"_index":820,"title":{},"body":{"license.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["index.html",{"_index":632,"title":{},"body":{"index.html":{}}}],["indic",{"_index":151,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"miscellaneous/typealiases.html":{}}}],["init",{"_index":245,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["init(config",{"_index":221,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["initi",{"_index":179,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"changelog.html":{}}}],["initialis",{"_index":106,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["initialise(config",{"_index":109,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["initializesourc",{"_index":171,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["initializesubscript",{"_index":687,"title":{},"body":{"index.html":{}}}],["inject",{"_index":123,"title":{"injectables/NgcCookieConsentService.html":{},"injectables/WindowService.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{},"overview.html":{}}}],["insit",{"_index":801,"title":{},"body":{"index.html":{}}}],["inspir",{"_index":783,"title":{},"body":{"index.html":{}}}],["instal",{"_index":599,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":167,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["instanti",{"_index":216,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["interact",{"_index":155,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"overview.html":{}}}],["interfaces.t",{"_index":6,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["interfaces.ts:30",{"_index":406,"title":{},"body":{"interfaces/NgcLayouts.html":{}}}],["interfaces.ts:7",{"_index":26,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["invok",{"_index":217,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["involv",{"_index":722,"title":{},"body":{"index.html":{}}}],["ipinfo",{"_index":429,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["isopen",{"_index":147,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["isssu",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":726,"title":{},"body":{"index.html":{}}}],["keep",{"_index":357,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["key",{"_index":23,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{}}}],["kind",{"_index":837,"title":{},"body":{"license.html":{}}}],["kondo",{"_index":806,"title":{},"body":{"index.html":{},"license.html":{}}}],["later",{"_index":684,"title":{},"body":{"index.html":{}}}],["latest",{"_index":595,"title":{},"body":{"index.html":{}}}],["law",{"_index":184,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{}}}],["law.ev",{"_index":134,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["law.event.t",{"_index":457,"title":{},"body":{"interfaces/NgcNoCookieLawEvent.html":{}}}],["layout",{"_index":40,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["leak",{"_index":710,"title":{},"body":{"index.html":{}}}],["learn",{"_index":87,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["left",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["legend",{"_index":859,"title":{},"body":{"overview.html":{}}}],["letter",{"_index":442,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["level",{"_index":10,"title":{},"body":{"interfaces/NgcCompliance.html":{},"index.html":{}}}],["liabil",{"_index":849,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":846,"title":{},"body":{"license.html":{}}}],["librari",{"_index":164,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["licens",{"_index":802,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":821,"title":{},"body":{"license.html":{}}}],["link",{"_index":38,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["lint",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":608,"title":{},"body":{"index.html":{}}}],["load",{"_index":629,"title":{},"body":{"index.html":{}}}],["loader",{"_index":623,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":649,"title":{},"body":{"index.html":{}}}],["locat",{"_index":364,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["look",{"_index":624,"title":{},"body":{"index.html":{}}}],["magic",{"_index":158,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["main",{"_index":43,"title":{},"body":{"interfaces/NgcCompliance.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["make",{"_index":569,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maker",{"_index":159,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["mandatori",{"_index":571,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":621,"title":{},"body":{"index.html":{}}}],["marker",{"_index":42,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["match",{"_index":61,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["maxmind",{"_index":430,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["memori",{"_index":709,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":840,"title":{},"body":{"license.html":{}}}],["merg",{"_index":824,"title":{},"body":{"license.html":{}}}],["messag",{"_index":71,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcHTMLElements.html":{},"changelog.html":{},"index.html":{}}}],["messagelink",{"_index":381,"title":{},"body":{"classes/NgcHTMLElements.html":{},"index.html":{}}}],["messagelink}}{{compli",{"_index":784,"title":{},"body":{"index.html":{}}}],["meta",{"_index":628,"title":{},"body":{"index.html":{}}}],["method",{"_index":104,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["millisecond",{"_index":455,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["minimum",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["miscellan",{"_index":587,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":808,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["model/common",{"_index":128,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["modif",{"_index":440,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["modifi",{"_index":823,"title":{},"body":{"license.html":{}}}],["modul",{"_index":276,"title":{"modules/NgcCookieConsentModule.html":{},"modules.html":{}},"body":{"modules/NgcCookieConsentModule.html":{},"classes/NgcLocationOptions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":283,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["more",{"_index":88,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["move",{"_index":436,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["name",{"_index":117,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"index.html":{}}}],["nativ",{"_index":478,"title":{},"body":{"injectables/WindowService.html":{}}}],["nativewindow",{"_index":473,"title":{},"body":{"injectables/WindowService.html":{}}}],["need",{"_index":13,"title":{},"body":{"interfaces/NgcCompliance.html":{},"index.html":{}}}],["never",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":189,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["next",{"_index":438,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["ng6",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["ngccomplianc",{"_index":1,"title":{"interfaces/NgcCompliance.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["ngccontentopt",{"_index":62,"title":{"classes/NgcContentOptions.html":{}},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{}}}],["ngccookiecompli",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookiecons",{"_index":98,"title":{"interfaces/NgcCookieConsent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["ngccookieconsentconfig",{"_index":110,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["ngccookieconsentconfig.cont",{"_index":778,"title":{},"body":{"index.html":{}}}],["ngccookieconsentconfig.el",{"_index":780,"title":{},"body":{"index.html":{}}}],["ngccookieconsentconfig.layout",{"_index":776,"title":{},"body":{"index.html":{}}}],["ngccookieconsentmodul",{"_index":277,"title":{"modules/NgcCookieConsentModule.html":{}},"body":{"modules/NgcCookieConsentModule.html":{},"index.html":{},"modules.html":{}}}],["ngccookieconsentmodule.forroot",{"_index":646,"title":{},"body":{"index.html":{}}}],["ngccookieconsentmodule.forroot(cookieconfig",{"_index":661,"title":{},"body":{"index.html":{}}}],["ngccookieconsentpopup",{"_index":113,"title":{"interfaces/NgcCookieConsentPopup.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["ngccookieconsentservic",{"_index":157,"title":{"injectables/NgcCookieConsentService.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["ngccookieconsentstatu",{"_index":56,"title":{"interfaces/NgcCookieConsentStatus.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"changelog.html":{}}}],["ngccookiecontentservic",{"_index":668,"title":{},"body":{"index.html":{}}}],["ngccookielayout",{"_index":867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookieopt",{"_index":338,"title":{"classes/NgcCookieOptions.html":{}},"body":{"classes/NgcCookieOptions.html":{},"changelog.html":{}}}],["ngccookieposit",{"_index":868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookiethem",{"_index":869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookietyp",{"_index":870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngchascookiecons",{"_index":153,"title":{"interfaces/NgcHasCookieConsent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["ngchtmlelement",{"_index":378,"title":{"classes/NgcHTMLElements.html":{}},"body":{"classes/NgcHTMLElements.html":{}}}],["ngcinitializeev",{"_index":135,"title":{"interfaces/NgcInitializeEvent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"index.html":{}}}],["ngclawopt",{"_index":394,"title":{"classes/NgcLawOptions.html":{}},"body":{"classes/NgcLawOptions.html":{}}}],["ngclayout",{"_index":51,"title":{"interfaces/NgcLayouts.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["ngclocationopt",{"_index":407,"title":{"classes/NgcLocationOptions.html":{}},"body":{"classes/NgcLocationOptions.html":{}}}],["ngcnocookielawev",{"_index":132,"title":{"interfaces/NgcNoCookieLawEvent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"index.html":{}}}],["ngcpalett",{"_index":35,"title":{"interfaces/NgcPalette.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["ngcpaletteopt",{"_index":459,"title":{"classes/NgcPaletteOptions.html":{}},"body":{"classes/NgcPaletteOptions.html":{}}}],["ngcstatuschangeev",{"_index":129,"title":{"interfaces/NgcStatusChangeEvent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["ngmodul",{"_index":284,"title":{},"body":{"modules/NgcCookieConsentModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":707,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":693,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":589,"title":{},"body":{"index.html":{}}}],["nocookielaw",{"_index":186,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["nocookielawsourc",{"_index":174,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["nocookielawsubscript",{"_index":690,"title":{},"body":{"index.html":{}}}],["node",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["node_modules/cookieconsent/build/cookieconsent.min.css",{"_index":614,"title":{},"body":{"index.html":{}}}],["node_modules/cookieconsent/build/cookieconsent.min.j",{"_index":613,"title":{},"body":{"index.html":{}}}],["node_modules/ngx",{"_index":625,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":843,"title":{},"body":{"license.html":{}}}],["note",{"_index":604,"title":{},"body":{"index.html":{}}}],["note:if",{"_index":616,"title":{},"body":{"index.html":{}}}],["notic",{"_index":645,"title":{},"body":{"index.html":{},"license.html":{}}}],["notifi",{"_index":176,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["now",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":601,"title":{},"body":{"index.html":{}}}],["null",{"_index":213,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["number",{"_index":350,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["object",{"_index":102,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"injectables/WindowService.html":{}}}],["objet",{"_index":160,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["observ",{"_index":126,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["obtain",{"_index":814,"title":{},"body":{"license.html":{}}}],["on",{"_index":414,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["onc",{"_index":633,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":674,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":673,"title":{},"body":{"index.html":{}}}],["oninitialis",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["onnocookielaw",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["onto",{"_index":437,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["open",{"_index":142,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{}}}],["opt",{"_index":657,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["option",{"_index":30,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"changelog.html":{},"index.html":{}}}],["options.t",{"_index":64,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["options.ts:10",{"_index":93,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["options.ts:11",{"_index":354,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:12",{"_index":82,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["options.ts:14",{"_index":77,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["options.ts:15",{"_index":355,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:16",{"_index":81,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:18",{"_index":89,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:19",{"_index":349,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:20",{"_index":86,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:21",{"_index":431,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["options.ts:22",{"_index":79,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:23",{"_index":352,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:24",{"_index":94,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:26",{"_index":96,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{}}}],["options.ts:27",{"_index":421,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["options.ts:6",{"_index":398,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["options.ts:8",{"_index":84,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["opton",{"_index":396,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["order",{"_index":416,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["othercompon",{"_index":665,"title":{},"body":{"index.html":{}}}],["othermodul",{"_index":666,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":344,"title":{},"body":{"classes/NgcCookieOptions.html":{},"license.html":{}}}],["out",{"_index":658,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["overrid",{"_index":752,"title":{},"body":{"index.html":{}}}],["overview",{"_index":858,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":576,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["palett",{"_index":29,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["param",{"_index":220,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["paramet",{"_index":116,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["part",{"_index":636,"title":{},"body":{"index.html":{}}}],["particular",{"_index":401,"title":{},"body":{"classes/NgcLawOptions.html":{},"index.html":{},"license.html":{}}}],["pass",{"_index":418,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["path",{"_index":347,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["peerdepend",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":809,"title":{},"body":{"license.html":{}}}],["permit",{"_index":830,"title":{},"body":{"license.html":{}}}],["person",{"_index":813,"title":{},"body":{"license.html":{}}}],["point",{"_index":618,"title":{},"body":{"index.html":{}}}],["polici",{"_index":72,"title":{},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{},"index.html":{}}}],["popup",{"_index":112,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["popupclos",{"_index":178,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupclosesourc",{"_index":170,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupclosesubscript",{"_index":686,"title":{},"body":{"index.html":{}}}],["popupinst",{"_index":168,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupopen",{"_index":177,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupopensourc",{"_index":169,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupopensubscript",{"_index":685,"title":{},"body":{"index.html":{}}}],["portion",{"_index":835,"title":{},"body":{"license.html":{}}}],["posit",{"_index":872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["possibl",{"_index":871,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prevent",{"_index":708,"title":{},"body":{"index.html":{}}}],["previou",{"_index":768,"title":{},"body":{"index.html":{}}}],["prioriti",{"_index":427,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["privaci",{"_index":793,"title":{},"body":{"index.html":{}}}],["privacypolicyhref",{"_index":794,"title":{},"body":{"index.html":{}}}],["privacypolicylink",{"_index":786,"title":{},"body":{"index.html":{}}}],["privat",{"_index":165,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["properli",{"_index":607,"title":{},"body":{"index.html":{}}}],["properti",{"_index":67,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["provid",{"_index":218,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["publish",{"_index":825,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":842,"title":{},"body":{"license.html":{}}}],["react",{"_index":446,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["read",{"_index":363,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["recommend",{"_index":340,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLocationOptions.html":{},"index.html":{}}}],["ref",{"_index":682,"title":{},"body":{"index.html":{}}}],["refer",{"_index":19,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["referenc",{"_index":781,"title":{},"body":{"index.html":{}}}],["regionallaw",{"_index":397,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["relax",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":635,"title":{},"body":{"index.html":{}}}],["render",{"_index":14,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["replac",{"_index":777,"title":{},"body":{"index.html":{}}}],["repres",{"_index":52,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["requir",{"_index":593,"title":{},"body":{"index.html":{}}}],["reset",{"_index":861,"title":{},"body":{"overview.html":{}}}],["resourc",{"_index":450,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["restrict",{"_index":819,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":108,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["revok",{"_index":182,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["revokechoic",{"_index":183,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["revokechoicesourc",{"_index":173,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["revokechoicesubscript",{"_index":689,"title":{},"body":{"index.html":{}}}],["right",{"_index":822,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["root",{"_index":640,"title":{},"body":{"index.html":{}}}],["rule",{"_index":405,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["rxj",{"_index":127,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["rxjs/subscript",{"_index":676,"title":{},"body":{"index.html":{}}}],["save",{"_index":602,"title":{},"body":{"index.html":{}}}],["scope",{"_index":162,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["script",{"_index":448,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["secur",{"_index":348,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["see",{"_index":651,"title":{},"body":{"index.html":{}}}],["selector",{"_index":677,"title":{},"body":{"index.html":{}}}],["sell",{"_index":829,"title":{},"body":{"license.html":{}}}],["server",{"_index":342,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["servic",{"_index":154,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{}}}],["service/index",{"_index":287,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["servicedefinit",{"_index":419,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["set",{"_index":228,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"index.html":{}}}],["setstatu",{"_index":289,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["setstatus(statu",{"_index":140,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["shall",{"_index":833,"title":{},"body":{"license.html":{}}}],["show",{"_index":304,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["showrevok",{"_index":293,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["similar",{"_index":644,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":664,"title":{},"body":{"index.html":{}}}],["site",{"_index":788,"title":{},"body":{"index.html":{}}}],["slightli",{"_index":638,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":816,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{}}}],["specif",{"_index":404,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["specifi",{"_index":368,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["sponsorship",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["src/.../common",{"_index":865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../window.service.t",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/asset",{"_index":727,"title":{},"body":{"index.html":{}}}],["src/cookieconsent.module.t",{"_index":278,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["src/cookieconsent.module.ts:15",{"_index":282,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["src/event/initialize.event.t",{"_index":391,"title":{},"body":{"interfaces/NgcInitializeEvent.html":{}}}],["src/event/no",{"_index":456,"title":{},"body":{"interfaces/NgcNoCookieLawEvent.html":{}}}],["src/event/statu",{"_index":467,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["src/model/common",{"_index":5,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"miscellaneous/typealiases.html":{}}}],["src/model/cont",{"_index":63,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["src/model/cooki",{"_index":339,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["src/model/html",{"_index":379,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["src/model/law",{"_index":395,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["src/model/loc",{"_index":408,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["src/model/palett",{"_index":460,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["src/service/cookieconsent.service.t",{"_index":99,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["src/service/cookieconsent.service.ts:122",{"_index":308,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:132",{"_index":319,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:169",{"_index":314,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:176",{"_index":315,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:18",{"_index":107,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["src/service/cookieconsent.service.ts:183",{"_index":316,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:19",{"_index":115,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["src/service/cookieconsent.service.ts:190",{"_index":309,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:195",{"_index":321,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:200",{"_index":310,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:205",{"_index":311,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:210",{"_index":312,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:215",{"_index":313,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:220",{"_index":320,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:225",{"_index":322,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:230",{"_index":317,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:235",{"_index":318,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:27",{"_index":302,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:28",{"_index":297,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:29",{"_index":291,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:30",{"_index":301,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:31",{"_index":292,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:32",{"_index":294,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:33",{"_index":295,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:34",{"_index":296,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:35",{"_index":300,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:36",{"_index":303,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:37",{"_index":298,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:38",{"_index":299,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:58",{"_index":324,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:61",{"_index":330,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:64",{"_index":337,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:66",{"_index":323,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:69",{"_index":332,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:70",{"_index":329,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:71",{"_index":326,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:72",{"_index":336,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:73",{"_index":334,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:74",{"_index":327,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:79",{"_index":331,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:83",{"_index":328,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:87",{"_index":325,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:91",{"_index":335,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:95",{"_index":333,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:99",{"_index":307,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/window.service.t",{"_index":471,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["src/service/window.service.ts:9",{"_index":475,"title":{},"body":{"injectables/WindowService.html":{}}}],["start",{"_index":480,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":279,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["statu",{"_index":55,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["statuschang",{"_index":181,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["statuschangesourc",{"_index":172,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["statuschangesubscript",{"_index":688,"title":{},"body":{"index.html":{}}}],["step",{"_index":724,"title":{},"body":{"index.html":{}}}],["straight",{"_index":423,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["stream",{"_index":195,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["strict",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"miscellaneous/typealiases.html":{}}}],["stuff",{"_index":671,"title":{},"body":{"index.html":{}}}],["style",{"_index":609,"title":{},"body":{"index.html":{}}}],["stylesheet",{"_index":33,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["styleurl",{"_index":680,"title":{},"body":{"index.html":{}}}],["subject",{"_index":125,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"license.html":{}}}],["sublicens",{"_index":827,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":175,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["subscribe(data",{"_index":750,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":675,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":834,"title":{},"body":{"license.html":{}}}],["succe",{"_index":441,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["such",{"_index":612,"title":{},"body":{"index.html":{}}}],["suit",{"_index":774,"title":{},"body":{"index.html":{}}}],["suport",{"_index":224,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["support",{"_index":251,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["sure",{"_index":606,"title":{},"body":{"index.html":{}}}],["system",{"_index":622,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":615,"title":{},"body":{"index.html":{}}}],["tag",{"_index":449,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["target",{"_index":73,"title":{},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{}}}],["tell",{"_index":47,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["templateurl",{"_index":678,"title":{},"body":{"index.html":{}}}],["term",{"_index":796,"title":{},"body":{"index.html":{}}}],["test",{"_index":598,"title":{},"body":{"index.html":{}}}],["text",{"_index":39,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["theme",{"_index":655,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["this.ccservice.destroy();//remov",{"_index":767,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig",{"_index":696,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().cont",{"_index":751,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.allow",{"_index":759,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.deni",{"_index":761,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.dismiss",{"_index":757,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.head",{"_index":753,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.link",{"_index":763,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.messag",{"_index":755,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.polici",{"_index":765,"title":{},"body":{"index.html":{}}}],["this.ccservice.init(this.ccservice.getconfig",{"_index":769,"title":{},"body":{"index.html":{}}}],["this.ccservice.initialize$.subscrib",{"_index":700,"title":{},"body":{"index.html":{}}}],["this.ccservice.nocookielaw$.subscrib",{"_index":706,"title":{},"body":{"index.html":{}}}],["this.ccservice.popupclose$.subscrib",{"_index":698,"title":{},"body":{"index.html":{}}}],["this.ccservice.popupopen$.subscrib",{"_index":695,"title":{},"body":{"index.html":{}}}],["this.ccservice.revokechoice$.subscrib",{"_index":704,"title":{},"body":{"index.html":{}}}],["this.ccservice.statuschange$.subscrib",{"_index":702,"title":{},"body":{"index.html":{}}}],["this.checkpopupinstantiated('clearstatu",{"_index":256,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('clos",{"_index":260,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('destroy",{"_index":262,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('fadein",{"_index":264,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('fadeout",{"_index":266,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('hasansw",{"_index":272,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('hascons",{"_index":274,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('isopen",{"_index":268,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('open",{"_index":258,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('togglerevokebutton",{"_index":270,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config",{"_index":227,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.oninitialis",{"_index":234,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onnocookielaw",{"_index":241,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onpopupclos",{"_index":232,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onpopupopen",{"_index":230,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onrevokechoic",{"_index":239,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onstatuschang",{"_index":236,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookiecons",{"_index":225,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookieconsent.hastransit",{"_index":254,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookieconsent.initialise(this.config",{"_index":246,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookieconsent.statu",{"_index":249,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.init(config",{"_index":210,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initi",{"_index":200,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesourc",{"_index":191,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesource.asobserv",{"_index":201,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesource.next",{"_index":235,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesubscript",{"_index":699,"title":{},"body":{"index.html":{}}}],["this.initializesubscription.unsubscrib",{"_index":713,"title":{},"body":{"index.html":{}}}],["this.nocookielaw",{"_index":206,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsourc",{"_index":194,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsource.asobserv",{"_index":207,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsource.next",{"_index":244,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsubscript",{"_index":705,"title":{},"body":{"index.html":{}}}],["this.nocookielawsubscription.unsubscrib",{"_index":716,"title":{},"body":{"index.html":{}}}],["this.popupclos",{"_index":198,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesourc",{"_index":190,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesource.asobserv",{"_index":199,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesource.next",{"_index":233,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesubscript",{"_index":697,"title":{},"body":{"index.html":{}}}],["this.popupclosesubscription.unsubscrib",{"_index":712,"title":{},"body":{"index.html":{}}}],["this.popupinst",{"_index":212,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.clearstatu",{"_index":257,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.close(showrevok",{"_index":261,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.destroy",{"_index":263,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.fadein",{"_index":265,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.fadeout",{"_index":267,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.hasansw",{"_index":273,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.hascons",{"_index":275,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.isopen",{"_index":269,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.open",{"_index":259,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.togglerevokebutton(show",{"_index":271,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopen",{"_index":196,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensourc",{"_index":188,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensource.asobserv",{"_index":197,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensource.next",{"_index":231,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensubscript",{"_index":694,"title":{},"body":{"index.html":{}}}],["this.popupopensubscription.unsubscrib",{"_index":711,"title":{},"body":{"index.html":{}}}],["this.revokechoic",{"_index":204,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesourc",{"_index":193,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesource.asobserv",{"_index":205,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesource.next",{"_index":240,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesubscript",{"_index":703,"title":{},"body":{"index.html":{}}}],["this.revokechoicesubscription.unsubscrib",{"_index":715,"title":{},"body":{"index.html":{}}}],["this.statuschang",{"_index":202,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesourc",{"_index":192,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesource.asobserv",{"_index":203,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesource.next",{"_index":238,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesubscript",{"_index":701,"title":{},"body":{"index.html":{}}}],["this.statuschangesubscription.unsubscrib",{"_index":714,"title":{},"body":{"index.html":{}}}],["this.translateservic",{"_index":742,"title":{},"body":{"index.html":{}}}],["this.translateservice.addlangs(['en",{"_index":735,"title":{},"body":{"index.html":{}}}],["this.translateservice.getbrowserlang",{"_index":739,"title":{},"body":{"index.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":737,"title":{},"body":{"index.html":{}}}],["this.translateservice.use(browserlang.match(/en|fr",{"_index":740,"title":{},"body":{"index.html":{}}}],["this.window",{"_index":208,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.window.cookiecons",{"_index":226,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["throw",{"_index":214,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["timeout",{"_index":420,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["tine",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["togglerevokebutton",{"_index":290,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["togglerevokebutton(show",{"_index":148,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["tool",{"_index":48,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["top",{"_index":641,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tort",{"_index":852,"title":{},"body":{"license.html":{}}}],["toshref",{"_index":797,"title":{},"body":{"index.html":{}}}],["toslink",{"_index":787,"title":{},"body":{"index.html":{}}}],["total",{"_index":772,"title":{},"body":{"index.html":{}}}],["track",{"_index":358,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["translat",{"_index":252,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["translate/cor",{"_index":733,"title":{},"body":{"index.html":{}}}],["translateservic",{"_index":732,"title":{},"body":{"index.html":{}}}],["translateservice:translateservic",{"_index":734,"title":{},"body":{"index.html":{}}}],["transmit",{"_index":375,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["transpar",{"_index":462,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["tri",{"_index":454,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["true",{"_index":372,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["truli",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["ts2411",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":46,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{}}}],["type",{"_index":74,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":862,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":479,"title":{},"body":{"injectables/WindowService.html":{}}}],["types.t",{"_index":866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typic",{"_index":152,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["typo",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":718,"title":{},"body":{"index.html":{}}}],["umd",{"_index":619,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":97,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcHTMLElements.html":{},"injectables/WindowService.html":{}}}],["under",{"_index":807,"title":{},"body":{"index.html":{}}}],["understand",{"_index":790,"title":{},"body":{"index.html":{}}}],["univers",{"_index":223,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["unsubscrib",{"_index":683,"title":{},"body":{"index.html":{}}}],["up",{"_index":643,"title":{},"body":{"index.html":{}}}],["updat",{"_index":526,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["upon",{"_index":800,"title":{},"body":{"index.html":{}}}],["url",{"_index":361,"title":{},"body":{"classes/NgcCookieOptions.html":{},"changelog.html":{}}}],["us",{"_index":17,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":667,"title":{},"body":{"index.html":{}}}],["user",{"_index":359,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["usevalu",{"_index":288,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["v1.1.0",{"_index":594,"title":{},"body":{"index.html":{}}}],["v3.1.0",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["v8",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":76,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["version",{"_index":543,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":376,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLocationOptions.html":{},"index.html":{}}}],["view",{"_index":590,"title":{},"body":{"index.html":{}}}],["void",{"_index":114,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["want",{"_index":432,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["warranti",{"_index":836,"title":{},"body":{"license.html":{}}}],["websit",{"_index":83,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["whether",{"_index":850,"title":{},"body":{"license.html":{}}}],["window",{"_index":66,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["window.servic",{"_index":138,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["windowservic",{"_index":137,"title":{"injectables/WindowService.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["windowservice.nativewindow",{"_index":209,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["without",{"_index":439,"title":{},"body":{"classes/NgcLocationOptions.html":{},"license.html":{}}}],["word",{"_index":44,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["work",{"_index":345,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["wrong",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["x274c",{"_index":78,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["ye",{"_index":120,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["your",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["your.domain.com",{"_index":650,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":860,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/NgcCompliance.html":{"url":"interfaces/NgcCompliance.html","title":"interface - NgcCompliance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCompliance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Compliance.\nEach compliance level contains the HTML needed to render that level of compliance.\nThe 'cc-compliance' class is used in the CSS to reference the group of buttons.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/model/common-interfaces.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcContentOptions.html":{"url":"classes/NgcContentOptions.html","title":"class - NgcContentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcContentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/content-options.ts\n        \n\n            \n                Description\n            \n            \n                Content Options.\nText strings used for cookie consent window elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allow\n                            \n                            \n                                    Optional\n                                close\n                            \n                            \n                                    Optional\n                                deny\n                            \n                            \n                                    Optional\n                                dismiss\n                            \n                            \n                                    Optional\n                                header\n                            \n                            \n                                    Optional\n                                href\n                            \n                            \n                                    Optional\n                                link\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                policy\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allow:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Allow cookies'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        close:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '&#x274c;'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deny\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deny:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Decline'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismiss:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Got it!'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cookies used on the website!'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            href\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        href:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://cookiesandyou.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Learn more'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'This website uses cookies to ensure you get the best experience on our website.'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            policy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        policy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cookie Policy'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '_blank'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | undefined\n\n                    \n                \n                        \n                            \n                                Defined in src/model/content-options.ts:26\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class NgcContentOptions {\n\n  header ? = 'Cookies used on the website!';\n\n  message ? = 'This website uses cookies to ensure you get the best experience on our website.';\n\n  dismiss ? = 'Got it!';\n\n  allow ? = 'Allow cookies';\n\n  deny ? = 'Decline';\n\n  link ? = 'Learn more';\n\n  href ? = 'https://cookiesandyou.com';\n\n  close ? = '&#x274c;';\n\n  policy ? = 'Cookie Policy';\n\n  target ? = '_blank';\n\n  [key: string]: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCookieConsent.html":{"url":"interfaces/NgcCookieConsent.html","title":"interface - NgcCookieConsent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCookieConsent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Basic interface to represent cookieconsent object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasTransition\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getStatus\n                                \n                                \n                                    initialise\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentStatus\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialise\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialise(config: NgcCookieConsentConfig, callback?: (popup?: NgcCookieConsentPopup) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasTransition\n                                    \n                                \n                                \n                                    \n                                        hasTransition:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     NgcCookieConsentStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NgcCookieConsentStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgcCookieConsentModule.html":{"url":"modules/NgcCookieConsentModule.html","title":"module - NgcCookieConsentModule","body":"\n                   \n\n\n\n\n    Modules\n    NgcCookieConsentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cookieconsent.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Main module of the library\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config: NgcCookieConsentConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/cookieconsent.module.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WindowService, NgcCookieConsentConfig, NgcCookieConsentService } from './service/index';\n\n/**\n * Main module of the library\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgcCookieConsentModule {\n\n  static forRoot(config: NgcCookieConsentConfig): ModuleWithProviders {\n    return {\n      ngModule: NgcCookieConsentModule,\n      providers: [WindowService, { provide: NgcCookieConsentConfig, useValue: config }, NgcCookieConsentService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCookieConsentPopup.html":{"url":"interfaces/NgcCookieConsentPopup.html","title":"interface - NgcCookieConsentPopup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCookieConsentPopup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Basic interface to represent cookieconsent.Popup object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clearStatus\n                                \n                                \n                                    close\n                                \n                                \n                                    destroy\n                                \n                                \n                                    fadeIn\n                                \n                                \n                                    fadeOut\n                                \n                                \n                                    getStatus\n                                \n                                \n                                    hasAnswered\n                                \n                                \n                                    hasConsented\n                                \n                                \n                                    isOpen\n                                \n                                \n                                    open\n                                \n                                \n                                    setStatus\n                                \n                                \n                                    toggleRevokeButton\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose(showRevoke: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        showRevoke\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentStatus\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAnswered()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasConsented\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasConsented()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStatus(status: NgcCookieConsentStatus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    NgcCookieConsentStatus\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleRevokeButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleRevokeButton(show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgcCookieConsentService.html":{"url":"injectables/NgcCookieConsentService.html","title":"injectable - NgcCookieConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgcCookieConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to interact with Cookie Consent API.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                cookieconsent\n                            \n                            \n                                initialize$\n                            \n                            \n                                    Private\n                                initializeSource\n                            \n                            \n                                noCookieLaw$\n                            \n                            \n                                    Private\n                                noCookieLawSource\n                            \n                            \n                                popupClose$\n                            \n                            \n                                    Private\n                                popupCloseSource\n                            \n                            \n                                    Private\n                                popupInstance\n                            \n                            \n                                popupOpen$\n                            \n                            \n                                    Private\n                                popupOpenSource\n                            \n                            \n                                revokeChoice$\n                            \n                            \n                                    Private\n                                revokeChoiceSource\n                            \n                            \n                                statusChange$\n                            \n                            \n                                    Private\n                                statusChangeSource\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkPopupInstantiated\n                            \n                            \n                                clearStatus\n                            \n                            \n                                close\n                            \n                            \n                                destroy\n                            \n                            \n                                fadeIn\n                            \n                            \n                                fadeOut\n                            \n                            \n                                getConfig\n                            \n                            \n                                getStatus\n                            \n                            \n                                getTransition\n                            \n                            \n                                hasAnswered\n                            \n                            \n                                hasConsented\n                            \n                            \n                                init\n                            \n                            \n                                isOpen\n                            \n                            \n                                open\n                            \n                            \n                                toggleRevokeButton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowService: WindowService, config: NgcCookieConsentConfig)\n                    \n                \n                        \n                            \n                                Defined in src/service/cookieconsent.service.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    WindowService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkPopupInstantiated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkPopupInstantiated(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:190\n                            \n                        \n\n\n                \n                    \n                            Clears the current cookie status.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose(showRevoke: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:200\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        showRevoke\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:210\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:215\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:169\n                            \n                        \n\n\n                \n                    \n                            Gets the current configuration  used by the Cookie Consent.\n\n\n                            \n                                Returns :     NgcCookieConsentConfig\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:176\n                            \n                        \n\n\n                \n                    \n                            Gets the current cookie status.\n\n\n                            \n                                Returns :     NgcCookieConsentStatus\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTransition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            Gets the current browser support for translations\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAnswered()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:230\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasConsented\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasConsented()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:235\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: NgcCookieConsentConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            Initializes Cookie Consent with the provided configuration.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the configuration object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:220\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleRevokeButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleRevokeButton(show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:225\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     NgcCookieConsentConfig\n\n                    \n                \n                    \n                        \n                            Type :     NgcCookieConsentConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookieconsent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieconsent:     NgcCookieConsent\n\n                    \n                \n                    \n                        \n                            Type :     NgcCookieConsent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialize$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:87\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent initializes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializeSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initializeSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noCookieLaw$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noCookieLaw$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:99\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when no Cookie Law is applicable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            noCookieLawSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noCookieLawSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupClose$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupClose$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:83\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent popup closes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupCloseSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupCloseSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupInstance:     NgcCookieConsentPopup\n\n                    \n                \n                    \n                        \n                            Type :     NgcCookieConsentPopup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupOpen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupOpen$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:79\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent popup opens.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupOpenSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupOpenSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revokeChoice$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revokeChoice$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:95\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie is revoked.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            revokeChoiceSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revokeChoiceSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusChange$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusChange$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:91\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent status changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusChangeSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusChangeSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:64\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCookieConsentStatus.html":{"url":"interfaces/NgcCookieConsentStatus.html","title":"interface - NgcCookieConsentStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCookieConsentStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the cookie consent status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allow\n                                \n                                \n                                            Optional\n                                        deny\n                                \n                                \n                                            Optional\n                                        dismiss\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allow\n                                    \n                                \n                                \n                                    \n                                        allow:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deny\n                                    \n                                \n                                \n                                    \n                                        deny:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismiss\n                                    \n                                \n                                \n                                    \n                                        dismiss:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcCookieOptions.html":{"url":"classes/NgcCookieOptions.html","title":"class - NgcCookieOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcCookieOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/cookie-options.ts\n        \n\n            \n                Description\n            \n            \n                Cookie Options.\nIt is recommended to set these values to correspond with your server.\nYou MUST set the ‘domain’ option, otherwise your cookies may not work.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                domain\n                            \n                            \n                                    Optional\n                                expiryDays\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                secure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        domain:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            expiryDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expiryDays:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 365\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cookieconsent_status'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        path:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            secure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        secure:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcCookieOptions {\n\n  // Name of the cookie that keeps track of users choice\n  // Default: 'cookieconsent_status'\n  name ? = 'cookieconsent_status';\n\n  // URL path that the cookie 'name' belongs to. The cookie can only be read at this location\n  // Default: '/'\n  path ? = '/';\n\n  // The domain that the cookie 'name' belongs to. The cookie can only be read on this domain. Guide to cookie domains\n  // Default: \n  domain: string;\n\n  // The cookies expire date, specified in days (specify -1 for no expiry)\n  // Default: 365\n  expiryDays ? = 365;\n\n  // If true the cookie will be created with the secure flag. Secure cookies will only be transmitted via HTTPS.\n  secure ? = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcHTMLElements.html":{"url":"classes/NgcHTMLElements.html","title":"class - NgcHTMLElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcHTMLElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/html-elements.ts\n        \n\n            \n                Description\n            \n            \n                HTML Elements\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allow\n                            \n                            \n                                    Optional\n                                close\n                            \n                            \n                                    Optional\n                                deny\n                            \n                            \n                                    Optional\n                                dismiss\n                            \n                            \n                                    Optional\n                                header\n                            \n                            \n                                    Optional\n                                link\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                messagelink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allow:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{allow}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        close:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{close}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deny\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deny:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{deny}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismiss:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{dismiss}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{header}}&nbsp;'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{link}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{message}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            messagelink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messagelink:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{message}} {{link}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | undefined\n\n                    \n                \n                        \n                            \n                                Defined in src/model/html-elements.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class NgcHTMLElements {\n\n  header ? = '{{header}}&nbsp;';\n\n  message ? = '{{message}}';\n\n  messagelink ? = '{{message}} {{link}}';\n\n  dismiss ? = '{{dismiss}}';\n\n  allow ? = '{{allow}}';\n\n  deny ? = '{{deny}}';\n\n  link ? = '{{link}}';\n\n  close ? = '{{close}}';\n\n  [key: string]: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcHasCookieConsent.html":{"url":"interfaces/NgcHasCookieConsent.html","title":"interface - NgcHasCookieConsent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcHasCookieConsent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Marker interface to indicate that an object (typically window) has cookieconsent property.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cookieconsent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cookieconsent\n                                    \n                                \n                                \n                                    \n                                        cookieconsent:     NgcCookieConsent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NgcCookieConsent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcInitializeEvent.html":{"url":"interfaces/NgcInitializeEvent.html","title":"interface - NgcInitializeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcInitializeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/initialize.event.ts\n        \n\n            \n                Description\n            \n            \n                Event fired when Cookie Consent initializes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"allow\" | \"deny\" | \"dismiss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"allow\" | \"deny\" | \"dismiss\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of cookie consent\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NgcInitializeEvent {\n  /**\n   * The status of cookie consent\n   */\n  status: 'allow' | 'deny' | 'dismiss';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcLawOptions.html":{"url":"classes/NgcLawOptions.html","title":"class - NgcLawOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcLawOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/law-options.ts\n        \n\n            \n                Description\n            \n            \n                Law Optons.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                regionalLaw\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countryCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        countryCode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/law-options.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regionalLaw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regionalLaw:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/model/law-options.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcLawOptions {\n  // Rather than getting the country code from the location services, you can hard code a particular country into the tool.\n  countryCode: string;\n\n  // If false, then we only enable the popup if the country has the cookie law. We ignore all other country specific rules.\n  // Default: true\n  regionalLaw = true;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcLayouts.html":{"url":"interfaces/NgcLayouts.html","title":"interface - NgcLayouts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcLayouts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Layouts\nJust like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\nThe word between these two markers tell the tool what each element is called.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/model/common-interfaces.ts:30\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcLocationOptions.html":{"url":"classes/NgcLocationOptions.html","title":"class - NgcLocationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcLocationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/location-options.ts\n        \n\n            \n                Description\n            \n            \n                Location Options\nThe location services are disabled by default. You are encouraged to implement a handler to your own service, rather than using the free ones provided.\nTo enable the basic location services, set 'location' to 'true'. To add you own services or configure the order or execution, pass an object with configuration properties.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                serviceDefinitions\n                            \n                            \n                                services\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceDefinitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceDefinitions:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/location-options.ts:27\n                            \n                        \n\n                \n                    \n                        This can be used to define new services via a key, but new services they can also go straight into the 'services' array in an ad-hoc fashion.\n  It is recommended that you define services in 'serviceDefinitions' and use 'services' to configure priority between services\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        services:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['freegeoip', 'ipinfo', 'maxmind']\n                        \n                    \n                        \n                            \n                                    Defined in src/model/location-options.ts:21\n                            \n                        \n\n                \n                    \n                        This array defines the services that you want to use. We attempt to get the country code from the first service, and only if the service fails do we move onto the next service.\nIf all services fail, the popup is opened without modification.\nIf a service succeeds, then the two letter country code is passed to the 'Law' module, with changes your popup options depending on the cookie laws in the country code.\nDefault: ['freegeoip', 'ipinfo', 'maxmind']\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in src/model/location-options.ts:14\n                            \n                        \n\n                \n                    \n                        We can't react to errors from script tag resources, so we set a timeout. If we don't have the answer after 5000ms, try the next service.\nDefault: 5000 (milliseconds)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcLocationOptions {\n\n  /**\n   * We can't react to errors from script tag resources, so we set a timeout. If we don't have the answer after 5000ms, try the next service.\n   * Default: 5000 (milliseconds)\n   */\n  timeout = 5000;\n  /**\n   * This array defines the services that you want to use. We attempt to get the country code from the first service, and only if the service fails do we move onto the next service.\n   * If all services fail, the popup is opened without modification.\n   * If a service succeeds, then the two letter country code is passed to the 'Law' module, with changes your popup options depending on the cookie laws in the country code.\n   * Default: ['freegeoip', 'ipinfo', 'maxmind']\n   */\n  services = ['freegeoip', 'ipinfo', 'maxmind'];\n\n  /**\n   * This can be used to define new services via a key, but new services they can also go straight into the 'services' array in an ad-hoc fashion.\n   *  It is recommended that you define services in 'serviceDefinitions' and use 'services' to configure priority between services\n   */\n  serviceDefinitions: any;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcNoCookieLawEvent.html":{"url":"interfaces/NgcNoCookieLawEvent.html","title":"interface - NgcNoCookieLawEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcNoCookieLawEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/no-cookie-law.event.ts\n        \n\n            \n                Description\n            \n            \n                Event fired when there is no cookie law for a given country.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        countryCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The country\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The country code\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NgcNoCookieLawEvent {\n    /**\n     * The country code\n     */\n    countryCode: string;\n    /**\n     * The country\n     */\n    country: string;\n  }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcPalette.html":{"url":"interfaces/NgcPalette.html","title":"interface - NgcPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Palette Options\nColours can be defined in additional stylesheets or using attributes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        background\n                                \n                                \n                                            Optional\n                                        border\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                    \n                                \n                                \n                                    \n                                        background:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                    \n                                \n                                \n                                    \n                                        border:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcPaletteOptions.html":{"url":"classes/NgcPaletteOptions.html","title":"class - NgcPaletteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcPaletteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/palette-options.ts\n        \n\n            \n                Description\n            \n            \n                Palette Options\nColours can be defined in additional stylesheets or using attributes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                button\n                            \n                            \n                                    Optional\n                                highlight\n                            \n                            \n                                    Optional\n                                popup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        button:     NgcPalette\n\n                    \n                \n                    \n                        \n                            Type :     NgcPalette\n\n                        \n                    \n                    \n                        \n                            Default value : { background: 'transparent', border: '#f8e71c', text: '#f8e71c' }\n                        \n                    \n                        \n                            \n                                    Defined in src/model/palette-options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            highlight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        highlight:     NgcPalette\n\n                    \n                \n                    \n                        \n                            Type :     NgcPalette\n\n                        \n                    \n                    \n                        \n                            Default value : { background: '#f8e71c', border: '#f8e71c', text: '#000000' }\n                        \n                    \n                        \n                            \n                                    Defined in src/model/palette-options.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            popup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popup:     NgcPalette\n\n                    \n                \n                    \n                        \n                            Type :     NgcPalette\n\n                        \n                    \n                    \n                        \n                            Default value : { background: '#000000', text: '#fff', link: '#fff' }\n                        \n                    \n                        \n                            \n                                    Defined in src/model/palette-options.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgcPalette } from './common-interfaces';\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\nexport class NgcPaletteOptions {\n  popup?: NgcPalette = { background: '#000000', text: '#fff', link: '#fff' };\n\n  button?: NgcPalette = { background: 'transparent', border: '#f8e71c', text: '#f8e71c' };\n\n  highlight?: NgcPalette = { background: '#f8e71c', border: '#f8e71c', text: '#000000' };\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcStatusChangeEvent.html":{"url":"interfaces/NgcStatusChangeEvent.html","title":"interface - NgcStatusChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcStatusChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/status-change.event.ts\n        \n\n            \n                Description\n            \n            \n                Event fired when cookie status changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chosenBefore\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chosenBefore\n                                    \n                                \n                                \n                                    \n                                        chosenBefore:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag indicating if the new status was chosen before\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"allow\" | \"deny\" | \"dismiss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"allow\" | \"deny\" | \"dismiss\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The new status of cookie consent\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NgcStatusChangeEvent {\n  /**\n   * The new status of cookie consent\n   */\n  status: 'allow' | 'deny' | 'dismiss';\n  /**\n   * Flag indicating if the new status was chosen before\n   */\n  chosenBefore: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowService.html":{"url":"injectables/WindowService.html","title":"injectable - WindowService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/window.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to interact with the window object.\n\n            \n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in src/service/window.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to interact with the window object.\n */\n@Injectable()\nexport class WindowService {\n\n  get nativeWindow(): any {\n    return _window();\n  }\n}\n\nfunction _window(): any {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.2.2 (2019-05-28)\nBug Fixes\n\nNgcCookieOptions: add missing export (971b65e), closes #53\nsponsorship: fix github sponsorship of yours truly (d3a7b3d)\n\n2.2.1 (2019-05-14)\nBug Fixes\n\ntypings: correct ERROR TS2411 when compiling with strict mode on (4fb02eb), closes #49\n\n2.2.0 (2019-03-28)\nFeatures\n\ncustomLayout: allow customizing the cookie bar layout and content (4b32ce0)\n\n2.1.1 (2019-02-06)\nBug Fixes\n\ntypings: fix lint isssue due to bad typings in NgcCookieConsentStatus (27ebb55), closes #11\n\n2.1.0 (2018-10-25)\nFeatures\n\ncore: update to cookieconsent v3.1.0 and its features (d674b93)\noptions: add policy and target options to NgcContentOptions (a0849f2), closes #23\n\n2.0.0 (2018-07-19)\nFeatures\n\nng6: add support for angular 6 (2ab9341), closes #17 #18\nonNoCookieLaw: add support for onNoCookieLaw callback (2d960c8)\n\nBREAKING CHANGES\n\nng6: - Minimum version of Angular is now v6+\nMinimum version of Node is v8+\n\n1.1.1 (2018-07-18)\nBug Fixes\n\ninitialize$: callback was never called due to typo (onInitialise) (6cd260f), closes #19\n\n1.1.0 (2018-07-03)\nBug Fixes\n\ndemo: fix wrong assets url on deployed demo app (fedcbd9)\n\nFeatures\n\nclose: add close method to allow fully closing the 'Coookie Policy' bar (02ada28), closes #15\ndemo: add support for translated cookie consent messages + update docs (e1bf9bf), closes #14\n\n1.0.1 (2017-11-22)\nFeatures\n\ncore: make cookie.domainoption mandatory in configuration service and update doc (9835145)\ndemo: update demo app to Angular CLI 1.4.7 (37371b6)\npackaging: relax peerDependencies versions (02496e8), closes #8\n\n1.0.0 (2017-09-07)\nFeatures\n\nall: initial commit (5f8a340)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/core : 6.0.0\n        \n            @angular/common : 6.0.0\n        \n            cookieconsent : 3.1.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _window   (src/.../window.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/service/window.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _window\n                            \n                            \n                        \n                    \n                \n                \n                    \n_window()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nngx-cookieconsent - Cookie Consent module for Angular.\n\n\n\n\n\n\nDemo\nView the module in action at https://tinesoft.github.io/ngx-cookieconsent\nDependencies\n\nAngular (requires Angular 6+, v1.1.0 is the latest version for Angular \nCookie Consent (requires Cookie Consent 3 or higher, tested with 3.1.0)\n\nInstallation\nInstall above dependencies via npm. In particular for Cookie Consent:\nnpm install --save cookieconsentNow install ngx-cookieconsent via:\nnpm install --save ngx-cookieconsent\nAngular-CLI\n\nNote: If you are using angular-cli to build your app, make sure that cookieconsent is properly listed as a global library, and as global style.\n\nTo do so, edit your angular-cli.json as such:\n      \"scripts\": [\n        \"../node_modules/cookieconsent/build/cookieconsent.min.js\"\n      ],\n\n      \"styles\": [\n        \"../node_modules/cookieconsent/build/cookieconsent.min.css\"\n      ],\nSystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for ngx-cookieconsent:\nmap: {\n  'ngx-cookieconsent': 'node_modules/ngx-cookieconsent/bundles/ngx-cookieconsent.umd.js',\n}In your systemjs config file, meta needs to tell the System loader how to load cookieconsent:\n    meta: {\n    './node_modules/cookieconsent/build/cookieconsent.min.js': {\n            format: 'amd'\n        }\n    }In your index.html file, add script and link tags to load  cookieconsent globally:\n    \n    \n    \n    \n    \n\nOnce installed you need to import the main module:\nimport {NgcCookieConsentModule} from 'ngx-cookieconsent';The only remaining part is to list the imported module in your application module. The exact method will be slightly\ndifferent for the root (top-level) module for which you should end up with the code similar to (notice NgcCookieConsentModule.forRoot()):\nimport {NgcCookieConsentModule, NgcCookieConsentConfig} from 'ngx-cookieconsent';\n\nconst cookieConfig:NgcCookieConsentConfig = {\n  cookie: {\n    domain: 'localhost' // or 'your.domain.com' // it is mandatory to set a domain, for cookies to work properly (see https://goo.gl/S2Hy2A)\n  },\n  palette: {\n    popup: {\n      background: '#000'\n    },\n    button: {\n      background: '#f1d600'\n    }\n  },\n  theme: 'edgeless',\n  type: 'opt-out'\n};\n\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgcCookieConsentModule.forRoot(cookieConfig), ...],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Other modules in your application can simply import NgcCookieConsentModule:\nimport {NgcCookieConsentModule} from 'ngx-cookieconsent';\n\n@NgModule({\n  declarations: [OtherComponent, ...],\n  imports: [NgcCookieConsentModule, ...], \n})\nexport class OtherModule {\n}Usage\nOnce the module is imported, you can use the NgcCookieContentService in your component (i.e. AppComponent) to subscribe to main events fired by Cookie Consent and do stuff like disabling cookies or other.\nHere is how it works:\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgcCookieConsentService } from 'ngx-cookieconsent';\nimport { Subscription }   from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  //keep refs to subscriptions to be able to unsubscribe later\n  private popupOpenSubscription: Subscription;\n  private popupCloseSubscription: Subscription;\n  private initializeSubscription: Subscription;\n  private statusChangeSubscription: Subscription;\n  private revokeChoiceSubscription: Subscription;\n  private noCookieLawSubscription: Subscription;\n\n  constructor(private ccService: NgcCookieConsentService){}\n\n  ngOnInit() {\n    // subscribe to cookieconsent observables to react to main events\n    this.popupOpenSubscription = this.ccService.popupOpen$.subscribe(\n      () => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.popupCloseSubscription = this.ccService.popupClose$.subscribe(\n      () => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.initializeSubscription = this.ccService.initialize$.subscribe(\n      (event: NgcInitializeEvent) => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.statusChangeSubscription = this.ccService.statusChange$.subscribe(\n      (event: NgcStatusChangeEvent) => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.revokeChoiceSubscription = this.ccService.revokeChoice$.subscribe(\n      () => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n      this.noCookieLawSubscription = this.ccService.noCookieLaw$.subscribe(\n      (event: NgcNoCookieLawEvent) => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to cookieconsent observables to prevent memory leaks\n    this.popupOpenSubscription.unsubscribe();\n    this.popupCloseSubscription.unsubscribe();\n    this.initializeSubscription.unsubscribe();\n    this.statusChangeSubscription.unsubscribe();\n    this.revokeChoiceSubscription.unsubscribe();\n    this.noCookieLawSubscription.unsubscribe();\n  }\n}\nSee Cookie Consent Documentation to see more about how to customize the UI or interact with user interactions.\nI18n Support\nMessages displayed in the Cookie Consent Bar can easily be translated, using libraries like ngx-translate.\nBasically this involved the following steps (using ngx-translate + Anglar CLI):\n\nInstall and configure ngx-translate\n\nProvide the translation JSON files in src/assets/, for e.g: en.json, fr.json, ...\n\n\n{\n    \"cookie\": {\n        \"header\": \"Cookies used on the website!\",\n        \"message\": \"This website uses cookies to ensure you get the best experience on our website.\",\n        \"dismiss\": \"Got it!\",\n        \"allow\": \"Allow cookies\",\n        \"deny\": \"Decline\",\n        \"link\": \"Learn more\",\n        \"policy\": \"Cookie Policy\"\n    }\n}\nNote: see content-options.ts for complete list of messages that can be translated.\n\n\nConfigure your main component AppComponent\n\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(private ccService: NgcCookieConsentService, private translateService:TranslateService) {\n  }\n\n  ngOnInit() {\n    // Support for translated cookies messages\n    this.translateService.addLangs(['en', 'fr']);\n    this.translateService.setDefaultLang('en');\n\n    const browserLang = this.translateService.getBrowserLang();\n    this.translateService.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n\n    this.translateService//\n      .get(['cookie.header', 'cookie.message', 'cookie.dismiss', 'cookie.allow', 'cookie.deny', 'cookie.link', 'cookie.policy'])\n      .subscribe(data => {\n\n        this.ccService.getConfig().content = this.ccService.getConfig().content || {} ;\n        // Override default messages with the translated ones\n        this.ccService.getConfig().content.header = data['cookie.header'];\n        this.ccService.getConfig().content.message = data['cookie.message'];\n        this.ccService.getConfig().content.dismiss = data['cookie.dismiss'];\n        this.ccService.getConfig().content.allow = data['cookie.allow'];\n        this.ccService.getConfig().content.deny = data['cookie.deny'];\n        this.ccService.getConfig().content.link = data['cookie.link'];\n        this.ccService.getConfig().content.policy = data['cookie.policy'];\n\n        this.ccService.destroy();//remove previous cookie bar (with default messages)\n        this.ccService.init(this.ccService.getConfig()); // update config with translated messages\n      });\n  }Custom Layout Support\nCookie Consent supports custom layouts, and so does ngx-cookieconsent.\nSo if your are not happy with the default appearance of the cookie bar, you can totally customize it to better suit your needs. This involves overriding a few options:\n\nNgcCookieConsentConfig.layout: to define the name of your custom layout to use. For e.g my-custom-layout\nNgcCookieConsentConfig.layouts: to define your custom layout HTML. Elements between {{ and }} will be replaced by their content (see in [NgcCookieConsentConfig.content below)\nNgcCookieConsentConfig.elements : html elements referenced in the custom layout (between {{ and }})\nNgcCookieConsentConfig.content : content of elements referenced in the custom elements above (between {{ and }})\n\nHere is a example of a custom layout, that is inspired from the default 'basic' layout , but simply changes the message and links that are displayed in the bar.\n\n  \n\n\nimport {NgcCookieConsentModule, NgcCookieConsentConfig} from 'ngx-cookieconsent';\n\nconst cookieConfig:NgcCookieConsentConfig = {\n  cookie: {\n    domain: 'localhost'// it is recommended to set your domain, for cookies to work properly\n  },\n  palette: {\n    popup: {\n      background: '#000'\n    },\n    button: {\n      background: '#f1d600'\n    }\n  },\n  theme: 'edgeless',\n  type: 'opt-out',\n  layout: 'my-custom-layout',\n  layouts: {\n    \"my-custom-layout\": '{{messagelink}}{{compliance}}'\n  },\n  elements:{\n    messagelink: `\n    {{message}} \n      {{cookiePolicyLink}}, \n      {{privacyPolicyLink}} and our \n      {{tosLink}}\n    \n    `,\n  },\n  content:{\n    message: 'By using our site, you acknowledge that you have read and understand our ',\n\n    cookiePolicyLink: 'Cookie Policy',\n    cookiePolicyHref: 'https://cookie.com',\n\n    privacyPolicyLink: 'Privacy Policy',\n    privacyPolicyHref: 'https://privacy.com',\n\n    tosLink: 'Terms of Service',\n    tosHref: 'https://tos.com',\n  }\n};\n\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgcCookieConsentModule.forRoot(cookieConfig), ...],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Credits\nngx-cookieconsent is built upon Cookie Consent, created by Insites\nLicense\nCopyright (c) 2019 Tine Kondo. Licensed under the MIT License (MIT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Tine Kondo\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgcCookieConsentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgcCookieCompliance   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookieLayout   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookiePosition   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookieTheme   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookieType   (src/.../common-types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/model/common-types.ts\n    \n        \n            \n                \n                    \n                        \n                        NgcCookieCompliance\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar compliances\n\n                        \n                    \n                \n                    \n                        NgcCookieCompliance:     \"info\" | \"opt-in\" | \"opt-out\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookieLayout\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar layouts\n\n                        \n                    \n                \n                    \n                        NgcCookieLayout:     \"basic\" | \"basic-close\" | \"basic-header\" | string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookiePosition\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar positions\n\n                        \n                    \n                \n                    \n                        NgcCookiePosition:     \"top\" | \"bottom\" | \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookieTheme\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar themes\n\n                        \n                    \n                \n                    \n                        NgcCookieTheme:     \"block\" | \"edgeless\" | \"classic\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookieType\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar types\n\n                        \n                    \n                \n                    \n                        NgcCookieType:     \"info\" | \"opt-in\" | \"opt-out\"\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
