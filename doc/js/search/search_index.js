var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/NgcCompliance.html",[0,0.183,1,1.697]],["body/interfaces/NgcCompliance.html",[0,0.341,1,2.572,2,0.384,3,0.446,4,0.326,5,2.572,6,2.254,7,0.446,8,3.095,9,2.889,10,3.818,11,3.609,12,2.564,13,2.979,14,3.609,15,3.609,16,0.326,17,1.272,18,3.609,19,3.609,20,3.609,21,2.308,22,0.326,23,2.297,24,1.206,25,0.836,26,3.609,27,0.402,28,0.038,29,1.801,30,0.652,31,2.007,32,2.007,33,2.007,34,2.007,35,1.801,36,1.801,37,2.007,38,0.994,39,1.801,40,2.082,41,2.572,42,1.884,43,1.801,44,2.254,45,1.801,46,2.007,47,2.007,48,2.007,49,1.624,50,2.007,51,2.007,52,1.47,53,0.511,54,0.899,55,1.209,56,1.209,57,1.04,58,1.153,59,1.153,60,0.028,61,0.028]],["title/classes/NgcContentOptions.html",[16,0.275,62,2.168]],["body/classes/NgcContentOptions.html",[2,0.296,3,0.343,4,0.251,7,0.343,16,0.35,17,1.27,22,0.35,23,1.747,24,1.236,25,1.039,27,0.208,28,0.039,30,1.095,38,1.334,39,1.386,49,1.25,53,0.795,54,0.692,57,1.187,58,1.207,59,1.207,60,0.024,61,0.024,62,2.757,63,5.801,64,1.386,65,1.973,66,1.386,67,0.784,68,1.972,69,3.025,70,4.843,71,3.025,72,3.751,73,3.997,74,0.806,75,2.56,76,2.839,77,2.292,78,3.88,79,2.777,80,3.203,81,2.777,82,2.292,83,4.357,84,2.292,85,3.88,86,2.777,87,3.203,88,3.203,89,2.777,90,3.203,91,3.203,92,3.203,93,1.973,94,2.777,95,3.88,96,3.203,97,2.757]],["title/interfaces/NgcCookieConsent.html",[0,0.183,98,1.697]],["body/interfaces/NgcCookieConsent.html",[0,0.295,2,0.182,3,0.415,4,0.155,7,0.212,16,0.155,17,0.427,22,0.155,24,0.678,25,0.489,27,0.285,28,0.039,30,0.309,38,0.472,42,0.698,52,1.366,53,0.752,54,1.193,55,1.78,56,1.651,57,0.608,58,0.674,59,0.674,60,0.017,61,0.017,66,2.07,67,0.678,68,0.698,74,0.475,98,2.119,99,1.07,100,1.509,101,2.079,102,2.201,103,2.38,104,1.509,105,2.755,106,2.705,107,1.712,108,2.568,109,1.69,110,2.389,111,2.119,112,1.95,113,2.74,114,3.43,115,1.712,116,1.07,117,0.854,118,2.079,119,1.07,120,1.712,121,3.024,122,1.95,123,1.366,124,0.698,125,2.953,126,3.054,127,1.07,128,1.07,129,0.771,130,1.07,131,1.07,132,0.771,133,1.07,134,1.07,135,0.771,136,1.07,137,1.218,138,1.07,139,1.07,140,1.07,141,1.69,142,1.865,143,1.69,144,1.69,145,1.69,146,1.69,147,1.69,148,1.69,149,1.69,150,1.69,151,0.952,152,1.07,153,1.504,154,0.632,155,0.854,156,1.07,157,0.771,158,1.07,159,1.07,160,1.07,161,0.952,162,1.07,163,1.07,164,1.35,165,2.862,166,2.591,167,1.07,168,1.07,169,1.07,170,1.07,171,1.07,172,1.07,173,1.07,174,1.07,175,2.452,176,2.755,177,1.07,178,1.07,179,1.673,180,0.698,181,1.07,182,1.07,183,1.07,184,0.771,185,0.952,186,1.07,187,1.07,188,1.07,189,2.304,190,1.07,191,1.07,192,1.07,193,1.07,194,1.07,195,1.07,196,1.07,197,1.07,198,1.07,199,1.07,200,1.07,201,1.07,202,1.07,203,1.07,204,1.07,205,1.07,206,1.07,207,1.07,208,1.69,209,1.07,210,1.07,211,1.07,212,1.69,213,1.07,214,1.07,215,1.07,216,1.07,217,1.07,218,0.632,219,1.509,220,1.07,221,1.07,222,0.854,223,1.07,224,1.07,225,1.07,226,1.07,227,1.69,228,0.771,229,1.07,230,1.07,231,1.07,232,1.07,233,1.07,234,1.07,235,1.07,236,1.07,237,1.865,238,1.07,239,1.07,240,1.07,241,1.07,242,1.673,243,1.509,244,1.07,245,1.07,246,1.07,247,1.366,248,1.07,249,1.07,250,0.952,251,0.854,252,0.854,253,1.07,254,1.07,255,1.07,256,1.07,257,1.07,258,1.07,259,1.07,260,1.07,261,1.07,262,1.07,263,1.07,264,1.07,265,1.07,266,1.07,267,1.07,268,1.07,269,1.07,270,1.07,271,1.07,272,1.07,273,1.07,274,1.07,275,1.07]],["title/modules/NgcCookieConsentModule.html",[276,1.373,277,1.906]],["body/modules/NgcCookieConsentModule.html",[2,0.419,3,0.486,4,0.355,7,0.486,16,0.355,25,0.71,27,0.294,28,0.039,30,0.71,43,2.436,60,0.03,61,0.03,74,0.557,104,1.769,108,2.436,110,2.849,116,2.455,117,1.961,118,2.197,122,2.262,124,1.601,137,2.197,157,2.197,164,2.436,218,1.803,276,2.39,277,3.316,278,3.93,279,4.881,280,3.93,281,4.881,282,3.93,283,5.309,284,4.383,285,4.881,286,3.244,287,3.93,288,3.93]],["title/interfaces/NgcCookieConsentPopup.html",[0,0.183,113,1.697]],["body/interfaces/NgcCookieConsentPopup.html",[0,0.288,2,0.17,3,0.396,4,0.144,7,0.197,16,0.144,17,0.398,22,0.144,24,0.647,25,0.928,27,0.273,28,0.039,30,0.578,38,0.44,42,0.65,52,1.303,53,0.739,54,1.163,55,1.691,56,1.613,57,0.575,58,0.637,59,0.637,60,0.016,61,0.016,66,1.999,67,0.322,68,1.303,74,0.453,98,1.779,99,0.996,100,1.44,101,1.924,102,2.133,103,0.996,104,1.44,105,2.67,108,2.807,109,0.996,110,2.133,111,1.422,112,1.829,113,2.806,114,3.492,116,1.999,117,1.597,118,1.924,121,3.108,122,1.901,123,1.303,124,0.65,125,2.902,126,3.009,127,0.996,128,0.996,129,0.718,130,0.996,131,0.996,132,0.718,133,0.996,134,0.996,135,0.718,136,0.996,137,1.151,138,0.996,139,1.597,140,1.597,141,2.502,142,2.377,143,1.999,144,2.502,145,2.502,146,2.502,147,2.502,148,1.999,149,2.502,150,2.502,151,0.887,152,0.996,153,1.422,154,0.589,155,0.796,156,0.996,157,0.718,158,0.996,159,0.996,160,0.996,161,0.887,162,0.996,163,0.996,164,1.276,165,2.806,166,2.502,167,0.996,168,0.996,169,0.996,170,0.996,171,0.996,172,0.996,173,0.996,174,0.996,175,2.377,176,2.67,177,0.996,178,0.996,179,1.597,180,0.65,181,0.996,182,0.996,183,0.996,184,0.718,185,0.887,186,0.996,187,0.996,188,0.996,189,2.241,190,0.996,191,0.996,192,0.996,193,0.996,194,0.996,195,0.996,196,0.996,197,0.996,198,0.996,199,0.996,200,0.996,201,0.996,202,0.996,203,0.996,204,0.996,205,0.996,206,0.996,207,0.996,208,1.597,209,0.996,210,0.996,211,0.996,212,1.597,213,0.996,214,0.996,215,0.996,216,0.996,217,0.996,218,0.589,219,1.44,220,0.996,221,0.996,222,0.796,223,0.996,224,0.996,225,0.996,226,0.996,227,1.597,228,0.718,229,0.996,230,0.996,231,0.996,232,0.996,233,0.996,234,0.996,235,0.996,236,0.996,237,1.779,238,0.996,239,0.996,240,0.996,241,0.996,242,1.597,243,1.44,244,0.996,245,0.996,246,0.996,247,1.303,248,0.996,249,0.996,250,0.887,251,0.796,252,0.796,253,0.996,254,0.996,255,0.996,256,0.996,257,0.996,258,0.996,259,0.996,260,0.996,261,0.996,262,0.996,263,0.996,264,0.996,265,0.996,266,0.996,267,0.996,268,0.996,269,0.996,270,0.996,271,0.996,272,0.996,273,0.996,274,0.996,275,0.996,289,2.557,290,2.111,291,1.595,292,1.595,293,1.317,294,1.595,295,1.595,296,1.595,297,1.595,298,1.595,299,1.595,300,1.595,301,1.595,302,1.595,303,1.595,304,1.317]],["title/injectables/NgcCookieConsentService.html",[123,1.243,157,1.373]],["body/injectables/NgcCookieConsentService.html",[0,0.243,2,0.134,3,0.336,4,0.114,7,0.261,16,0.114,17,0.526,22,0.114,24,0.715,25,1.031,27,0.238,28,0.039,30,0.639,38,0.348,42,0.514,52,0.86,53,0.779,54,1.26,55,1.64,56,1.361,57,0.475,58,0.526,59,0.526,60,0.013,61,0.013,66,2.124,67,0.55,68,1.295,74,0.757,98,1.967,99,0.788,100,0.95,101,1.991,102,1.908,103,0.788,104,1.431,105,2.389,108,2.744,109,0.788,110,2.442,111,1.174,112,1.802,113,2.668,114,3.365,116,2.209,117,1.765,118,2.16,121,2.995,122,1.734,123,1.295,124,0.514,125,3.076,126,3.195,127,0.788,128,0.788,129,0.568,130,0.788,131,0.788,132,0.568,133,0.788,134,0.788,135,0.568,136,0.788,137,1.592,138,0.788,139,0.788,140,0.788,141,2.209,142,2.258,143,1.699,144,2.209,145,2.209,146,2.209,147,2.209,148,1.699,149,2.209,150,2.209,151,0.702,152,0.788,153,1.174,154,0.779,155,1.053,156,1.318,157,0.95,158,0.788,159,0.788,160,0.788,161,0.702,162,0.788,163,0.788,164,1.053,165,3.185,166,2.763,167,0.788,168,1.986,169,1.986,170,1.986,171,1.986,172,1.986,173,1.986,174,1.986,175,2.668,176,2.997,177,1.986,178,1.986,179,2.124,180,0.86,181,1.986,182,1.318,183,1.986,184,0.95,185,1.174,186,1.986,187,1.318,188,0.788,189,2.026,190,0.788,191,0.788,192,0.788,193,0.788,194,0.788,195,0.788,196,0.788,197,0.788,198,0.788,199,0.788,200,0.788,201,0.788,202,0.788,203,0.788,204,0.788,205,0.788,206,0.788,207,0.788,208,1.318,209,0.788,210,0.788,211,1.318,212,1.318,213,0.788,214,0.788,215,0.788,216,0.788,217,0.788,218,0.779,219,1.721,220,0.788,221,1.318,222,0.63,223,0.788,224,0.788,225,0.788,226,0.788,227,1.318,228,0.568,229,0.788,230,0.788,231,0.788,232,0.788,233,0.788,234,0.788,235,0.788,236,0.788,237,1.513,238,0.788,239,0.788,240,0.788,241,0.788,242,1.357,243,1.224,244,0.788,245,1.699,246,0.788,247,1.558,248,1.986,249,0.788,250,1.174,251,1.053,252,1.053,253,1.986,254,0.788,255,1.318,256,0.788,257,0.788,258,0.788,259,0.788,260,0.788,261,0.788,262,0.788,263,0.788,264,0.788,265,0.788,266,0.788,267,0.788,268,0.788,269,0.788,270,0.788,271,0.788,272,0.788,273,0.788,274,0.788,275,0.788,290,1.742,293,1.042,304,1.042,305,2.111,306,1.262,307,2.111,308,1.262,309,1.262,310,1.262,311,1.262,312,1.262,313,1.262,314,1.262,315,1.262,316,1.262,317,1.262,318,1.262,319,1.262,320,1.262,321,1.262,322,1.262,323,1.262,324,1.262,325,1.262,326,1.262,327,1.262,328,1.262,329,1.262,330,1.262,331,1.262,332,1.262,333,1.262,334,1.262,335,1.262,336,1.262,337,1.262]],["title/interfaces/NgcCookieConsentStatus.html",[0,0.183,56,1.023]],["body/interfaces/NgcCookieConsentStatus.html",[0,0.347,1,2.015,2,0.386,3,0.448,4,0.327,5,2.015,6,2.264,7,0.448,8,2.015,9,2.264,17,1.156,21,1.808,22,0.327,23,2.087,24,1.186,25,0.655,27,0.403,28,0.038,29,1.808,30,1.047,31,2.015,32,2.015,33,2.015,34,2.015,35,1.808,36,1.808,37,2.015,38,0.999,39,1.808,40,2.087,41,2.579,42,1.889,43,1.808,44,2.264,45,1.808,46,2.015,47,2.015,48,2.015,49,1.631,50,2.015,51,2.015,52,1.889,53,0.657,54,1.156,55,1.554,56,1.554,57,1.253,58,1.389,59,1.389,60,0.029,61,0.029,67,0.937]],["title/classes/NgcCookieOptions.html",[16,0.275,338,2.168]],["body/classes/NgcCookieOptions.html",[2,0.344,3,0.399,4,0.291,7,0.399,16,0.388,22,0.291,24,1.139,25,0.97,27,0.241,28,0.038,30,1.058,53,0.836,60,0.026,61,0.026,64,1.61,67,0.869,74,0.73,75,2.577,76,2.679,96,2.663,117,2.813,228,1.935,338,3.054,339,5.522,340,2.292,341,3.226,342,3.226,343,4.727,344,2.663,345,2.663,346,5.155,347,5.37,348,5.522,349,3.226,350,3.548,351,4.834,352,3.226,353,4.834,354,3.226,355,3.226,356,3.548,357,2.663,358,3.226,359,2.663,360,3.226,361,2.663,362,4.299,363,3.548,364,2.015,365,3.226,366,3.226,367,3.226,368,4.299,369,3.226,370,2.663,371,3.226,372,2.292,373,2.663,374,2.663,375,3.226,376,2.292,377,3.226]],["title/classes/NgcHTMLElements.html",[16,0.275,378,2.519]],["body/classes/NgcHTMLElements.html",[2,0.332,3,0.385,4,0.281,7,0.385,12,2.211,16,0.379,22,0.379,23,1.889,24,1.235,25,1.04,27,0.233,28,0.039,30,1.091,38,1.565,49,1.401,57,1.229,58,1.362,59,1.362,60,0.026,61,0.026,67,0.848,68,2.226,69,3.174,71,3.548,74,0.804,75,2.557,76,2.834,97,2.982,378,3.464,379,5.817,380,3.112,381,4.194,382,3.112,383,4.196,384,3.112,385,3.112,386,4.196,387,3.112,388,3.112,389,3.112,390,3.112]],["title/interfaces/NgcHasCookieConsent.html",[0,0.183,153,1.697]],["body/interfaces/NgcHasCookieConsent.html",[0,0.299,2,0.19,3,0.425,4,0.161,7,0.22,16,0.161,17,0.444,22,0.161,24,0.695,27,0.291,28,0.039,38,0.491,42,1.137,52,1.137,53,0.759,54,1.21,55,1.711,56,1.503,57,0.628,58,0.696,59,0.696,60,0.017,61,0.017,66,2.238,67,0.787,68,0.726,74,0.252,98,2.351,99,1.113,100,1.256,101,2.298,102,2.238,103,1.113,104,0.802,105,2.149,108,2.49,109,1.113,110,2.238,111,1.552,112,1.91,113,2.699,114,3.389,118,2.019,121,2.981,122,1.977,123,1.402,124,0.726,125,2.981,126,3.078,127,1.113,128,1.113,129,0.802,130,1.113,131,1.113,132,0.802,133,1.113,134,1.113,135,0.802,136,1.113,137,1.256,138,1.113,139,1.113,140,1.113,141,1.743,142,1.913,143,1.743,144,1.743,145,1.743,146,1.743,147,1.743,148,1.743,149,1.743,150,1.743,151,1.552,152,1.743,153,1.913,154,0.658,155,0.889,156,1.113,157,0.802,158,1.113,159,1.113,160,1.113,161,0.991,162,1.113,163,1.113,164,1.393,165,2.893,166,2.641,167,1.113,168,1.113,169,1.113,170,1.113,171,1.113,172,1.113,173,1.113,174,1.113,175,2.494,176,2.801,177,1.113,178,1.113,179,1.717,180,0.726,181,1.113,182,1.113,183,1.113,184,0.802,185,0.991,186,1.113,187,1.113,188,1.113,189,2.339,190,1.113,191,1.113,192,1.113,193,1.113,194,1.113,195,1.113,196,1.113,197,1.113,198,1.113,199,1.113,200,1.113,201,1.113,202,1.113,203,1.113,204,1.113,205,1.113,206,1.113,207,1.113,208,1.743,209,1.113,210,1.113,211,1.113,212,1.743,213,1.113,214,1.113,215,1.113,216,1.113,217,1.113,218,0.658,219,1.549,220,1.113,221,1.113,222,0.889,223,1.113,224,1.113,225,1.113,226,1.113,227,1.743,228,0.802,229,1.113,230,1.113,231,1.113,232,1.113,233,1.113,234,1.113,235,1.113,236,1.113,237,1.913,238,1.113,239,1.113,240,1.113,241,1.113,242,1.717,243,1.549,244,1.113,245,1.113,246,1.113,247,1.402,248,1.113,249,1.113,250,0.991,251,0.889,252,0.889,253,1.113,254,1.113,255,1.113,256,1.113,257,1.113,258,1.113,259,1.113,260,1.113,261,1.113,262,1.113,263,1.113,264,1.113,265,1.113,266,1.113,267,1.113,268,1.113,269,1.113,270,1.113,271,1.113,272,1.113,273,1.113,274,1.113,275,1.113]],["title/interfaces/NgcInitializeEvent.html",[0,0.183,135,1.373]],["body/interfaces/NgcInitializeEvent.html",[0,0.306,2,0.453,3,0.525,4,0.384,7,0.525,22,0.384,27,0.318,28,0.038,53,0.778,54,1.37,55,1.987,57,1.236,58,1.37,59,1.37,60,0.032,61,0.032,67,1.034,74,0.602,135,2.304,179,2.12,391,4.249,392,2.363,393,2.654]],["title/classes/NgcLawOptions.html",[16,0.275,394,2.168]],["body/classes/NgcLawOptions.html",[2,0.431,3,0.5,4,0.365,7,0.5,16,0.448,22,0.365,24,1.087,25,0.898,27,0.302,28,0.037,30,0.898,48,2.249,53,0.573,60,0.031,61,0.031,64,2.018,67,1.004,74,0.573,75,2.236,76,2.018,93,2.873,112,1.647,154,1.494,184,2.236,242,2.799,243,2.524,247,1.647,356,3.338,364,2.526,372,3.821,394,3.53,395,5.377,396,4.044,397,5.609,398,4.044,399,3.103,400,4.044,401,2.873,402,3.338,403,4.044,404,4.044,405,4.044]],["title/interfaces/NgcLayouts.html",[0,0.183,51,1.697]],["body/interfaces/NgcLayouts.html",[0,0.341,1,1.998,2,0.383,3,0.444,4,0.324,5,2.565,6,2.244,7,0.444,8,2.565,9,2.881,17,1.27,21,2.301,22,0.324,23,2.293,24,1.206,25,0.833,27,0.402,28,0.039,29,1.793,30,0.649,31,1.998,32,1.998,33,1.998,34,1.998,35,1.793,36,1.793,37,1.998,38,0.99,39,1.793,40,2.419,41,2.989,42,2.189,43,2.301,44,2.881,45,2.301,46,2.565,47,2.565,48,2.565,49,2.076,50,2.565,51,2.565,52,1.464,53,0.509,54,0.896,55,1.204,56,1.204,57,1.037,58,1.15,59,1.15,60,0.028,61,0.028,406,3.593]],["title/classes/NgcLocationOptions.html",[16,0.275,407,2.168]],["body/classes/NgcLocationOptions.html",[2,0.28,3,0.325,4,0.237,7,0.325,16,0.337,17,1.33,22,0.237,23,1.954,24,0.531,25,1.002,27,0.196,28,0.038,30,1.016,45,1.863,46,2.076,53,0.529,60,0.023,61,0.023,64,1.312,67,0.877,74,0.707,75,2.401,76,1.863,77,2.17,100,1.183,102,1.312,112,1.925,142,2.076,154,2.281,161,2.076,180,1.521,184,2.127,189,2.358,218,0.971,219,2.127,228,1.954,243,2.334,276,1.68,340,2.653,350,3.082,364,2.952,372,1.868,376,2.653,399,3.239,402,2.17,407,2.653,408,4.726,409,2.17,410,2.629,411,2.17,412,2.629,413,2.17,414,2.17,415,1.868,416,2.629,417,2.629,418,4.341,419,5.186,420,5.186,421,3.733,422,2.629,423,3.733,424,3.733,425,4.726,426,3.733,427,3.733,428,3.733,429,4.726,430,4.726,431,4.726,432,2.629,433,3.733,434,3.733,435,3.733,436,4.726,437,3.733,438,3.733,439,4.726,440,3.082,441,3.733,442,3.733,443,3.733,444,2.076,445,4.726,446,3.733,447,3.082,448,3.082,449,3.082,450,3.082,451,3.733,452,3.733,453,3.733,454,3.733,455,3.733,456,3.733]],["title/interfaces/NgcNoCookieLawEvent.html",[0,0.183,132,1.373]],["body/interfaces/NgcNoCookieLawEvent.html",[0,0.305,2,0.449,3,0.521,4,0.381,7,0.521,22,0.381,24,1.196,27,0.315,28,0.038,53,0.722,60,0.031,61,0.031,67,1.03,74,0.722,132,2.294,184,1.898,242,2.839,243,2.738,392,2.345,393,2.634,399,3.183,457,4.217,458,4.217,459,4.217]],["title/interfaces/NgcPalette.html",[0,0.183,35,1.523]],["body/interfaces/NgcPalette.html",[0,0.337,1,1.916,2,0.367,3,0.426,4,0.311,5,1.916,6,2.152,7,0.426,8,1.916,9,2.152,17,1.244,21,1.719,22,0.311,23,2.02,24,1.234,25,0.811,27,0.395,28,0.039,29,2.24,30,1.07,31,2.496,32,2.496,33,2.496,34,2.496,35,2.24,36,2.64,37,2.941,38,1.458,39,2.64,40,2.02,41,2.496,42,1.828,43,1.719,44,2.152,45,1.719,46,1.916,47,1.916,48,1.916,49,1.551,50,1.916,51,1.916,52,1.403,53,0.488,54,0.859,55,1.155,56,1.155,57,1.009,58,1.119,59,1.119,60,0.028,61,0.028,67,0.907,74,0.749]],["title/classes/NgcPaletteOptions.html",[16,0.275,460,2.519]],["body/classes/NgcPaletteOptions.html",[0,0.205,2,0.365,3,0.423,4,0.309,7,0.423,16,0.404,17,1.114,21,2.633,22,0.309,25,0.989,27,0.256,28,0.039,29,2.231,30,1.048,31,2.486,32,2.486,33,2.486,34,2.486,35,2.953,36,2.802,37,2.935,38,1.232,39,2.802,60,0.028,61,0.028,64,1.709,67,0.903,74,0.705,75,2.241,76,2.484,82,2.827,84,2.827,93,2.433,112,2.15,122,1.395,460,3.69,461,5.277,462,5.277,463,4.471,464,5.8,465,5.277,466,5.277,467,3.424]],["title/interfaces/NgcStatusChangeEvent.html",[0,0.183,129,1.373]],["body/interfaces/NgcStatusChangeEvent.html",[0,0.294,2,0.424,3,0.492,4,0.359,7,0.492,22,0.359,27,0.297,28,0.038,53,0.756,54,1.226,55,2.019,57,1.2,58,1.33,59,1.33,60,0.03,61,0.03,67,0.993,74,0.696,121,2.968,129,2.213,151,2.734,180,1.62,189,2.782,237,3.101,374,4.059,392,2.211,393,2.484,468,3.977,469,3.977,470,4.917,471,4.917]],["title/injectables/WindowService.html",[123,1.243,137,1.373]],["body/injectables/WindowService.html",[2,0.439,3,0.51,4,0.372,7,0.51,16,0.372,22,0.372,25,0.745,27,0.308,28,0.038,60,0.031,61,0.031,66,2.889,97,3.572,102,2.706,108,2.706,119,2.576,122,1.68,123,2.209,124,1.68,137,2.263,154,1.857,155,2.509,250,2.293,472,3.404,473,5.028,474,5.424,475,4.124,476,4.124,477,4.15,478,3.404,479,4.124,480,4.124]],["title/changelog.html",[247,1.043,481,1.819,482,2.56]],["body/changelog.html",[27,0.218,28,0.028,30,0.725,40,1.311,50,1.619,53,0.568,54,0.726,56,0.976,57,1.031,60,0.025,61,0.025,62,2.069,65,2.069,68,2.399,71,1.819,72,2.849,73,2.404,74,0.7,101,1.311,104,1.311,111,2.23,118,1.311,154,1.481,179,2.001,180,1.186,219,1.311,222,2.289,251,2.289,252,1.453,338,2.069,361,2.404,364,2.505,394,2.069,407,2.069,415,3.807,448,2.404,483,2.912,484,4.279,485,4.011,486,4.587,487,5.592,488,2.912,489,2.912,490,2.912,491,2.912,492,2.912,493,4.011,494,4.011,495,5.183,496,5.592,497,2.912,498,2.912,499,2.912,500,4.011,501,2.912,502,2.912,503,2.912,504,2.912,505,2.912,506,2.912,507,2.912,508,2.912,509,2.912,510,2.912,511,2.912,512,2.912,513,2.912,514,4.011,515,2.912,516,2.404,517,2.849,518,2.912,519,2.912,520,2.912,521,2.912,522,2.912,523,4.011,524,2.912,525,2.912,526,4.011,527,2.912,528,4.08,529,2.404,530,2.912,531,4.011,532,4.08,533,2.912,534,2.912,535,2.912,536,2.912,537,2.912,538,4.943,539,4.011,540,4.011,541,2.069,542,2.912,543,2.912,544,4.011,545,4.011,546,2.912,547,2.912,548,4.011,549,3.787,550,2.912,551,2.912,552,2.912,553,2.912,554,2.912,555,2.912,556,2.912,557,2.912,558,2.912,559,2.912,560,4.279,561,2.912,562,2.912,563,2.912,564,3.311,565,2.912,566,2.912,567,2.912,568,2.912,569,2.912,570,4.011,571,2.912,572,2.912,573,4.011,574,2.912,575,2.404,576,2.912,577,2.404,578,2.912,579,2.404,580,2.912,581,2.912,582,2.404,583,2.912,584,2.912,585,2.912,586,2.912,587,2.912,588,2.912,589,2.912,590,2.912]],["title/dependencies.html",[444,2.037,582,2.113]],["body/dependencies.html",[28,0.037,60,0.034,61,0.034,101,2.129,124,1.926,286,3.904,444,2.63,591,5.453,592,3.904]],["title/miscellaneous/functions.html",[119,2.288,593,1.599]],["body/miscellaneous/functions.html",[22,0.429,28,0.034,60,0.034,61,0.034,119,2.971,472,3.926,477,4.754,593,2.971,594,4.756]],["title/index.html",[22,0.231,247,1.043,481,1.819]],["body/index.html",[4,0.312,10,1.194,12,1.678,13,2.853,16,0.344,17,1.305,21,1.179,25,0.427,27,0.285,28,0.039,29,1.179,30,0.261,36,1.725,38,0.825,40,2.251,41,0.804,43,1.725,45,1.494,47,1.313,49,1.714,53,0.793,54,1.16,57,0.531,58,0.361,59,0.361,60,0.015,61,0.015,64,0.722,65,2.456,69,0.903,71,2.99,72,2.456,74,0.334,75,1.556,80,1.194,83,2.471,87,1.194,88,1.95,90,1.194,91,1.194,92,1.194,100,1.063,101,2.409,104,0.651,110,1.179,112,0.962,117,0.722,118,1.348,122,2.157,124,0.962,126,1.313,129,0.651,132,0.651,135,0.651,154,0.534,155,1.179,157,1.348,164,1.179,165,2.398,175,1.313,180,0.589,185,1.313,218,0.534,219,1.348,222,2.152,228,1.063,251,1.725,252,2.322,276,2.025,277,2.553,284,2.471,340,1.028,343,2.853,345,2.471,357,1.194,359,1.194,363,1.194,373,1.194,376,1.678,381,1.194,392,2.118,393,0.903,399,0.903,401,1.028,409,1.194,411,1.194,414,1.194,415,1.028,444,1.313,447,1.194,449,1.95,450,1.194,478,2.471,484,1.194,516,4.128,517,2.456,532,1.194,541,1.028,549,1.194,560,1.194,564,2.471,575,1.194,577,1.194,579,2.471,592,1.194,595,5.296,596,1.446,597,1.194,598,1.446,599,2.362,600,1.446,601,1.446,602,1.194,603,1.446,604,1.446,605,4.312,606,1.95,607,2.994,608,2.362,609,1.446,610,2.362,611,1.446,612,1.446,613,2.994,614,2.994,615,2.362,616,1.446,617,1.446,618,1.446,619,2.362,620,1.446,621,3.456,622,1.446,623,1.446,624,1.446,625,1.446,626,1.446,627,2.362,628,2.362,629,2.362,630,1.446,631,1.446,632,1.446,633,1.446,634,2.362,635,2.362,636,1.446,637,1.446,638,1.446,639,2.362,640,1.446,641,1.446,642,1.446,643,1.446,644,1.446,645,1.446,646,2.994,647,1.194,648,1.446,649,1.446,650,1.446,651,1.194,652,1.446,653,2.994,654,2.362,655,2.362,656,1.446,657,3.809,658,1.446,659,2.362,660,2.362,661,1.95,662,1.95,663,1.95,664,1.475,665,2.471,666,4.498,667,2.362,668,1.95,669,2.362,670,2.362,671,1.446,672,1.446,673,1.446,674,1.446,675,4.087,676,1.446,677,4.312,678,2.362,679,2.994,680,2.362,681,4.498,682,1.446,683,2.362,684,2.362,685,2.362,686,2.362,687,2.362,688,1.446,689,2.362,690,1.446,691,1.446,692,1.446,693,1.446,694,1.446,695,1.446,696,1.446,697,2.362,698,2.362,699,2.362,700,1.446,701,1.446,702,4.087,703,1.446,704,1.446,705,1.446,706,1.446,707,1.446,708,1.446,709,1.446,710,1.446,711,1.446,712,1.446,713,1.446,714,1.446,715,1.446,716,1.446,717,1.446,718,1.446,719,1.446,720,1.446,721,1.446,722,1.446,723,1.194,724,1.446,725,1.446,726,2.362,727,1.446,728,2.362,729,1.194,730,1.446,731,1.446,732,1.446,733,1.446,734,2.362,735,1.446,736,1.446,737,1.446,738,1.446,739,1.446,740,1.446,741,1.446,742,1.446,743,1.446,744,2.362,745,1.446,746,1.446,747,1.446,748,1.446,749,1.446,750,1.446,751,1.446,752,1.446,753,1.446,754,1.446,755,1.446,756,1.446,757,2.362,758,2.362,759,1.446,760,1.446,761,1.446,762,1.446,763,1.446,764,1.446,765,1.446,766,1.446,767,1.446,768,1.446,769,1.446,770,1.446,771,1.446,772,1.446,773,1.446,774,1.446,775,1.446,776,1.446,777,1.446,778,1.446,779,1.446,780,1.446,781,1.446,782,2.362,783,1.446,784,2.362,785,1.446,786,1.446,787,2.362,788,1.446,789,1.446,790,1.446,791,2.362,792,2.362,793,2.362,794,1.446,795,1.446,796,1.446,797,1.446,798,1.446,799,1.446,800,1.446,801,1.446,802,1.446,803,1.446,804,1.446,805,1.446,806,1.446,807,1.446,808,2.127,809,1.194,810,1.194,811,1.194,812,1.194,813,1.446,814,1.95]],["title/license.html",[247,1.043,481,1.819,808,1.819]],["body/license.html",[4,0.345,17,1.196,28,0.03,60,0.03,61,0.03,125,2.126,218,1.412,344,3.155,392,2.126,401,2.716,413,3.155,440,4.328,528,3.155,597,3.155,606,3.155,651,3.96,664,2.388,723,3.155,729,3.155,808,2.716,809,4.328,810,3.155,811,3.155,812,3.155,814,3.96,815,4.797,816,3.823,817,3.823,818,3.823,819,4.797,820,3.823,821,5.498,822,5.984,823,3.823,824,4.797,825,3.823,826,5.243,827,4.797,828,3.155,829,3.823,830,3.823,831,3.823,832,3.823,833,3.823,834,3.823,835,3.823,836,3.823,837,3.823,838,3.823,839,4.797,840,3.823,841,3.823,842,4.797,843,3.823,844,3.823,845,3.823,846,3.823,847,3.823,848,3.823,849,3.823,850,3.823,851,3.823,852,3.823,853,3.823,854,3.823,855,3.823,856,3.823,857,3.823,858,3.823,859,3.823,860,3.823]],["title/modules.html",[276,1.864]],["body/modules.html",[28,0.034,60,0.034,61,0.034,276,2.159,277,2.996,861,4.797,862,4.797,863,4.797]],["title/overview.html",[864,3.418]],["body/overview.html",[0,0.275,16,0.415,27,0.344,28,0.033,60,0.033,61,0.033,123,1.873,218,1.699,276,2.415,370,3.797,444,2.558,529,3.797,541,3.268,602,3.797,664,2.873,665,3.797,668,3.797,864,3.797,865,4.599,866,5.366,867,4.599]],["title/miscellaneous/typealiases.html",[593,1.599,868,3.664]],["body/miscellaneous/typealiases.html",[2,0.509,5,2.111,8,2.111,22,0.343,24,0.767,28,0.038,40,1.709,53,0.8,60,0.029,61,0.029,68,1.546,69,2.372,74,0.829,100,2.352,517,4.016,593,2.372,647,4.314,661,3.134,662,3.134,663,4.527,664,2.984,828,3.943,869,3.797,870,5.226,871,5.652,872,5.77,873,5.226,874,5.226,875,5.226,876,5.226,877,5.652,878,3.797,879,5.226,880,4.777,881,3.797,882,3.797]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["000",{"_index":659,"title":{},"body":{"index.html":{}}}],["000000",{"_index":465,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["02",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["02496e8",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["02ada28",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":370,"title":{},"body":{"classes/NgcCookieOptions.html":{},"overview.html":{}}}],["1.0.0",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["1.4.7",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":529,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["2.2.1",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["2.2.2",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["2.2.3",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":528,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":484,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["22",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["27ebb55",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["2ab9341",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["2d960c8",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":602,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.1.0",{"_index":592,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["306fe18",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":351,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["37371b6",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["4b32ce0",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["4fb02eb",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["5000",{"_index":445,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["5000m",{"_index":454,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["53",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["5f8a340",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":541,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["6cd260f",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["971b65e",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["9835145",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["_blank",{"_index":95,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["_window",{"_index":477,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["a0849f2",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":606,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":473,"title":{},"body":{"injectables/WindowService.html":{}}}],["acknowledg",{"_index":795,"title":{},"body":{"index.html":{}}}],["action",{"_index":597,"title":{},"body":{"index.html":{},"license.html":{}}}],["activ",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["ad",{"_index":161,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{}}}],["add",{"_index":415,"title":{},"body":{"classes/NgcLocationOptions.html":{},"changelog.html":{},"index.html":{}}}],["addit",{"_index":32,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["adjust",{"_index":623,"title":{},"body":{"index.html":{}}}],["alias",{"_index":869,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":57,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{}}}],["amd",{"_index":637,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":834,"title":{},"body":{"license.html":{}}}],["anglar",{"_index":731,"title":{},"body":{"index.html":{}}}],["angular",{"_index":222,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":286,"title":{},"body":{"modules/NgcCookieConsentModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":124,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{},"dependencies.html":{},"index.html":{}}}],["answer",{"_index":453,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["api",{"_index":156,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["app",{"_index":564,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":685,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":687,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":666,"title":{},"body":{"index.html":{}}}],["appear",{"_index":777,"title":{},"body":{"index.html":{}}}],["applic",{"_index":185,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["appmodul",{"_index":669,"title":{},"body":{"index.html":{}}}],["aris",{"_index":859,"title":{},"body":{"license.html":{}}}],["array",{"_index":425,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["asset",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":823,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":434,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["attribut",{"_index":34,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["author",{"_index":850,"title":{},"body":{"license.html":{}}}],["avail",{"_index":862,"title":{},"body":{"modules.html":{}}}],["background",{"_index":36,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["bad",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["bar",{"_index":517,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["basic",{"_index":100,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["befor",{"_index":471,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["belong",{"_index":362,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["below",{"_index":785,"title":{},"body":{"index.html":{}}}],["best",{"_index":91,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["better",{"_index":779,"title":{},"body":{"index.html":{}}}],["between",{"_index":45,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["block",{"_index":881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":121,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["bootstrap",{"_index":668,"title":{},"body":{"index.html":{},"overview.html":{}}}],["border",{"_index":37,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["bottom",{"_index":879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["break",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":863,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":250,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["browserlang",{"_index":744,"title":{},"body":{"index.html":{}}}],["bug",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":611,"title":{},"body":{"index.html":{}}}],["built",{"_index":41,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["bundl",{"_index":626,"title":{},"body":{"index.html":{}}}],["button",{"_index":21,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["c",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["call",{"_index":50,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"changelog.html":{}}}],["callback",{"_index":111,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{}}}],["can't",{"_index":446,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["cc",{"_index":15,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["ccservic",{"_index":698,"title":{},"body":{"index.html":{}}}],["chang",{"_index":180,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{}}}],["change.ev",{"_index":131,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["change.event.t",{"_index":469,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["changelog",{"_index":482,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":818,"title":{},"body":{"license.html":{}}}],["checkpopupinstanti",{"_index":305,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["checkpopupinstantiated(method",{"_index":211,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["choic",{"_index":360,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["chosen",{"_index":470,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["chosenbefor",{"_index":237,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["claim",{"_index":853,"title":{},"body":{"license.html":{}}}],["class",{"_index":16,"title":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{}},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"injectables/WindowService.html":{},"index.html":{},"overview.html":{}}}],["classic",{"_index":882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["clear",{"_index":255,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["clearstatu",{"_index":141,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["cli",{"_index":579,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cli.json",{"_index":617,"title":{},"body":{"index.html":{}}}],["close",{"_index":68,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["close(showrevok",{"_index":143,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["code",{"_index":399,"title":{},"body":{"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"index.html":{}}}],["colour",{"_index":31,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["commit",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":467,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["commonmodul",{"_index":285,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["compil",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":737,"title":{},"body":{"index.html":{}}}],["complianc",{"_index":8,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"miscellaneous/typealiases.html":{}}}],["compon",{"_index":675,"title":{},"body":{"index.html":{}}}],["condit",{"_index":838,"title":{},"body":{"license.html":{}}}],["config",{"_index":118,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["configur",{"_index":219,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":860,"title":{},"body":{"license.html":{}}}],["consent",{"_index":54,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{}}}],["const",{"_index":653,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":306,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["constructor(priv",{"_index":697,"title":{},"body":{"index.html":{}}}],["constructor(windowservic",{"_index":187,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["contain",{"_index":11,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["content",{"_index":65,"title":{},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{},"index.html":{}}}],["contract",{"_index":857,"title":{},"body":{"license.html":{}}}],["cooki",{"_index":53,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cookie.allow",{"_index":752,"title":{},"body":{"index.html":{}}}],["cookie.deni",{"_index":753,"title":{},"body":{"index.html":{}}}],["cookie.dismiss",{"_index":751,"title":{},"body":{"index.html":{}}}],["cookie.domainopt",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["cookie.link",{"_index":754,"title":{},"body":{"index.html":{}}}],["cookie.messag",{"_index":750,"title":{},"body":{"index.html":{}}}],["cookie.polici",{"_index":755,"title":{},"body":{"index.html":{}}}],["cookieconfig:ngccookieconsentconfig",{"_index":654,"title":{},"body":{"index.html":{}}}],["cookiecons",{"_index":101,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["cookieconsent';th",{"_index":640,"title":{},"body":{"index.html":{}}}],["cookieconsent.j",{"_index":163,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["cookieconsent.popup",{"_index":139,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["cookieconsent.umd.j",{"_index":633,"title":{},"body":{"index.html":{}}}],["cookieconsent/bundles/ngx",{"_index":632,"title":{},"body":{"index.html":{}}}],["cookieconsent_statu",{"_index":353,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["cookieconsentnow",{"_index":609,"title":{},"body":{"index.html":{}}}],["cookiepolicyhref",{"_index":797,"title":{},"body":{"index.html":{}}}],["cookiepolicylink",{"_index":791,"title":{},"body":{"index.html":{}}}],["coooki",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["copi",{"_index":821,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":809,"title":{},"body":{"index.html":{},"license.html":{}}}],["core",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":341,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["countri",{"_index":243,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{}}}],["countrycod",{"_index":242,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{}}}],["creat",{"_index":373,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["credit",{"_index":805,"title":{},"body":{"index.html":{}}}],["css",{"_index":18,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["current",{"_index":166,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["custom",{"_index":516,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customlayout",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["d3a7b3d",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["d674b93",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":854,"title":{},"body":{"license.html":{}}}],["data['cookie.allow",{"_index":766,"title":{},"body":{"index.html":{}}}],["data['cookie.deni",{"_index":768,"title":{},"body":{"index.html":{}}}],["data['cookie.dismiss",{"_index":764,"title":{},"body":{"index.html":{}}}],["data['cookie.head",{"_index":760,"title":{},"body":{"index.html":{}}}],["data['cookie.link",{"_index":770,"title":{},"body":{"index.html":{}}}],["data['cookie.messag",{"_index":762,"title":{},"body":{"index.html":{}}}],["data['cookie.polici",{"_index":772,"title":{},"body":{"index.html":{}}}],["date",{"_index":367,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["day",{"_index":369,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["deal",{"_index":824,"title":{},"body":{"license.html":{}}}],["declar",{"_index":665,"title":{},"body":{"index.html":{},"overview.html":{}}}],["declin",{"_index":80,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["default",{"_index":75,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["defin",{"_index":25,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["demo",{"_index":560,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deni",{"_index":58,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["depend",{"_index":444,"title":{"dependencies.html":{}},"body":{"classes/NgcLocationOptions.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["descript",{"_index":7,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{}}}],["destroy",{"_index":144,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["differ",{"_index":645,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":409,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["dismiss",{"_index":59,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["display",{"_index":726,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":832,"title":{},"body":{"license.html":{}}}],["doc",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":723,"title":{},"body":{"index.html":{},"license.html":{}}}],["domain",{"_index":343,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["don't",{"_index":452,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["due",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["e.g",{"_index":734,"title":{},"body":{"index.html":{}}}],["e1bf9bf",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":9,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["easili",{"_index":727,"title":{},"body":{"index.html":{}}}],["edgeless",{"_index":662,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["edit",{"_index":616,"title":{},"body":{"index.html":{}}}],["element",{"_index":49,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["elements.t",{"_index":380,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:11",{"_index":390,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:13",{"_index":385,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:15",{"_index":382,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:17",{"_index":384,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:19",{"_index":388,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:21",{"_index":383,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:7",{"_index":387,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["elements.ts:9",{"_index":389,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["en",{"_index":747,"title":{},"body":{"index.html":{}}}],["en.json",{"_index":735,"title":{},"body":{"index.html":{}}}],["enabl",{"_index":402,"title":{},"body":{"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["encourag",{"_index":410,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["end",{"_index":648,"title":{},"body":{"index.html":{}}}],["ensur",{"_index":90,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["error",{"_index":448,"title":{},"body":{"classes/NgcLocationOptions.html":{},"changelog.html":{}}}],["error(`cooki",{"_index":215,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["event",{"_index":392,"title":{},"body":{"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{},"license.html":{}}}],["event/initialize.ev",{"_index":136,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["event/no",{"_index":133,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["event/statu",{"_index":130,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["exact",{"_index":643,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":788,"title":{},"body":{"index.html":{}}}],["execut",{"_index":417,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["experi",{"_index":92,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["expir",{"_index":366,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["expiri",{"_index":371,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["expiryday",{"_index":346,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":844,"title":{},"body":{"license.html":{}}}],["f1d600",{"_index":660,"title":{},"body":{"index.html":{}}}],["f8e71c",{"_index":464,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["fadein",{"_index":145,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["fadeout",{"_index":146,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["fail",{"_index":436,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["fals",{"_index":356,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{}}}],["fashion",{"_index":427,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["featur",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["fedcbd9",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":781,"title":{},"body":{"index.html":{}}}],["fff",{"_index":466,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"index.html":{},"license.html":{}}}],["fire",{"_index":393,"title":{},"body":{"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["first",{"_index":435,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["fit",{"_index":847,"title":{},"body":{"license.html":{}}}],["fix",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":374,"title":{},"body":{"classes/NgcCookieOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["follow",{"_index":729,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":636,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":280,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["forroot(config",{"_index":281,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["fr",{"_index":742,"title":{},"body":{"index.html":{}}}],["fr.json",{"_index":736,"title":{},"body":{"index.html":{}}}],["free",{"_index":413,"title":{},"body":{"classes/NgcLocationOptions.html":{},"license.html":{}}}],["freegeoip",{"_index":429,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["fulli",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":119,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":837,"title":{},"body":{"license.html":{}}}],["get",{"_index":247,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{}}}],["get(['cookie.head",{"_index":749,"title":{},"body":{"index.html":{}}}],["getconfig",{"_index":248,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["getnativewindow",{"_index":475,"title":{},"body":{"injectables/WindowService.html":{}}}],["getstatu",{"_index":105,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["gettransit",{"_index":253,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["github",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":459,"title":{},"body":{"interfaces/NgcNoCookieLawEvent.html":{}}}],["global",{"_index":478,"title":{},"body":{"injectables/WindowService.html":{},"index.html":{}}}],["go",{"_index":423,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["grant",{"_index":817,"title":{},"body":{"license.html":{}}}],["graph",{"_index":861,"title":{},"body":{"modules.html":{}}}],["group",{"_index":20,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["guid",{"_index":365,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["handler",{"_index":412,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["happi",{"_index":776,"title":{},"body":{"index.html":{}}}],["hard",{"_index":400,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["hasansw",{"_index":149,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["hascons",{"_index":150,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["hastransit",{"_index":103,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["header",{"_index":69,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcHTMLElements.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["header}}&nbsp",{"_index":386,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["here",{"_index":678,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":816,"title":{},"body":{"license.html":{}}}],["higher",{"_index":603,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":462,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["hoc",{"_index":426,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["holder",{"_index":851,"title":{},"body":{"license.html":{}}}],["hook",{"_index":229,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["href",{"_index":70,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["html",{"_index":12,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcHTMLElements.html":{},"index.html":{}}}],["http",{"_index":377,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["https://cookie.com",{"_index":798,"title":{},"body":{"index.html":{}}}],["https://cookiesandyou.com",{"_index":85,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["https://goo.gl/s2hy2a",{"_index":658,"title":{},"body":{"index.html":{}}}],["https://privacy.com",{"_index":801,"title":{},"body":{"index.html":{}}}],["https://tinesoft.github.io/ngx",{"_index":598,"title":{},"body":{"index.html":{}}}],["https://tos.com",{"_index":804,"title":{},"body":{"index.html":{}}}],["i.",{"_index":676,"title":{},"body":{"index.html":{}}}],["i18n",{"_index":725,"title":{},"body":{"index.html":{}}}],["ignor",{"_index":403,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["implement",{"_index":411,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["impli",{"_index":845,"title":{},"body":{"license.html":{}}}],["import",{"_index":122,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcPaletteOptions.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["improv",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":826,"title":{},"body":{"license.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["index.html",{"_index":638,"title":{},"body":{"index.html":{}}}],["indic",{"_index":151,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"miscellaneous/typealiases.html":{}}}],["init",{"_index":245,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["init(config",{"_index":221,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["initi",{"_index":179,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"changelog.html":{}}}],["initialis",{"_index":106,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["initialise(config",{"_index":109,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["initializesourc",{"_index":171,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["initializesubscript",{"_index":693,"title":{},"body":{"index.html":{}}}],["inject",{"_index":123,"title":{"injectables/NgcCookieConsentService.html":{},"injectables/WindowService.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{},"overview.html":{}}}],["insit",{"_index":807,"title":{},"body":{"index.html":{}}}],["inspir",{"_index":789,"title":{},"body":{"index.html":{}}}],["instal",{"_index":605,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":167,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["instanti",{"_index":216,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["interact",{"_index":155,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"overview.html":{}}}],["interfaces.t",{"_index":6,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["interfaces.ts:30",{"_index":406,"title":{},"body":{"interfaces/NgcLayouts.html":{}}}],["interfaces.ts:7",{"_index":26,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["invok",{"_index":217,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["involv",{"_index":728,"title":{},"body":{"index.html":{}}}],["ipinfo",{"_index":430,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["isopen",{"_index":147,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["isssu",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":732,"title":{},"body":{"index.html":{}}}],["keep",{"_index":357,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["key",{"_index":23,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{}}}],["kind",{"_index":843,"title":{},"body":{"license.html":{}}}],["kondo",{"_index":812,"title":{},"body":{"index.html":{},"license.html":{}}}],["later",{"_index":690,"title":{},"body":{"index.html":{}}}],["latest",{"_index":601,"title":{},"body":{"index.html":{}}}],["law",{"_index":184,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{}}}],["law.ev",{"_index":134,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["law.event.t",{"_index":458,"title":{},"body":{"interfaces/NgcNoCookieLawEvent.html":{}}}],["layout",{"_index":40,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["leak",{"_index":716,"title":{},"body":{"index.html":{}}}],["learn",{"_index":87,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["left",{"_index":880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["legend",{"_index":865,"title":{},"body":{"overview.html":{}}}],["letter",{"_index":443,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["level",{"_index":10,"title":{},"body":{"interfaces/NgcCompliance.html":{},"index.html":{}}}],["liabil",{"_index":855,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":852,"title":{},"body":{"license.html":{}}}],["librari",{"_index":164,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["licens",{"_index":808,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":827,"title":{},"body":{"license.html":{}}}],["link",{"_index":38,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["lint",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":614,"title":{},"body":{"index.html":{}}}],["liter",{"_index":421,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["load",{"_index":635,"title":{},"body":{"index.html":{}}}],["loader",{"_index":629,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":655,"title":{},"body":{"index.html":{}}}],["locat",{"_index":364,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"changelog.html":{}}}],["look",{"_index":630,"title":{},"body":{"index.html":{}}}],["magic",{"_index":158,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["main",{"_index":43,"title":{},"body":{"interfaces/NgcCompliance.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["make",{"_index":575,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maker",{"_index":159,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["mandatori",{"_index":577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":627,"title":{},"body":{"index.html":{}}}],["marker",{"_index":42,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["match",{"_index":61,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["maxmind",{"_index":431,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["memori",{"_index":715,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":846,"title":{},"body":{"license.html":{}}}],["merg",{"_index":830,"title":{},"body":{"license.html":{}}}],["messag",{"_index":71,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcHTMLElements.html":{},"changelog.html":{},"index.html":{}}}],["messagelink",{"_index":381,"title":{},"body":{"classes/NgcHTMLElements.html":{},"index.html":{}}}],["messagelink}}{{compli",{"_index":790,"title":{},"body":{"index.html":{}}}],["meta",{"_index":634,"title":{},"body":{"index.html":{}}}],["method",{"_index":104,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["millisecond",{"_index":456,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["minimum",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["miscellan",{"_index":593,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":814,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["model/common",{"_index":128,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["modif",{"_index":441,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["modifi",{"_index":829,"title":{},"body":{"license.html":{}}}],["modul",{"_index":276,"title":{"modules/NgcCookieConsentModule.html":{},"modules.html":{}},"body":{"modules/NgcCookieConsentModule.html":{},"classes/NgcLocationOptions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":283,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["more",{"_index":88,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["move",{"_index":437,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["name",{"_index":117,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"index.html":{}}}],["nativ",{"_index":479,"title":{},"body":{"injectables/WindowService.html":{}}}],["nativewindow",{"_index":474,"title":{},"body":{"injectables/WindowService.html":{}}}],["need",{"_index":13,"title":{},"body":{"interfaces/NgcCompliance.html":{},"index.html":{}}}],["never",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":189,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["next",{"_index":439,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["ng6",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["ngccomplianc",{"_index":1,"title":{"interfaces/NgcCompliance.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["ngccontentopt",{"_index":62,"title":{"classes/NgcContentOptions.html":{}},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{}}}],["ngccookiecompli",{"_index":870,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookiecons",{"_index":98,"title":{"interfaces/NgcCookieConsent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["ngccookieconsentconfig",{"_index":110,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["ngccookieconsentconfig.cont",{"_index":784,"title":{},"body":{"index.html":{}}}],["ngccookieconsentconfig.el",{"_index":786,"title":{},"body":{"index.html":{}}}],["ngccookieconsentconfig.layout",{"_index":782,"title":{},"body":{"index.html":{}}}],["ngccookieconsentmodul",{"_index":277,"title":{"modules/NgcCookieConsentModule.html":{}},"body":{"modules/NgcCookieConsentModule.html":{},"index.html":{},"modules.html":{}}}],["ngccookieconsentmodule.forroot",{"_index":652,"title":{},"body":{"index.html":{}}}],["ngccookieconsentmodule.forroot(cookieconfig",{"_index":667,"title":{},"body":{"index.html":{}}}],["ngccookieconsentpopup",{"_index":113,"title":{"interfaces/NgcCookieConsentPopup.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["ngccookieconsentservic",{"_index":157,"title":{"injectables/NgcCookieConsentService.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["ngccookieconsentstatu",{"_index":56,"title":{"interfaces/NgcCookieConsentStatus.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"changelog.html":{}}}],["ngccookiecontentservic",{"_index":674,"title":{},"body":{"index.html":{}}}],["ngccookielayout",{"_index":873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookieopt",{"_index":338,"title":{"classes/NgcCookieOptions.html":{}},"body":{"classes/NgcCookieOptions.html":{},"changelog.html":{}}}],["ngccookieposit",{"_index":874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookiethem",{"_index":875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngccookietyp",{"_index":876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngchascookiecons",{"_index":153,"title":{"interfaces/NgcHasCookieConsent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["ngchtmlelement",{"_index":378,"title":{"classes/NgcHTMLElements.html":{}},"body":{"classes/NgcHTMLElements.html":{}}}],["ngcinitializeev",{"_index":135,"title":{"interfaces/NgcInitializeEvent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"index.html":{}}}],["ngclawopt",{"_index":394,"title":{"classes/NgcLawOptions.html":{}},"body":{"classes/NgcLawOptions.html":{},"changelog.html":{}}}],["ngclayout",{"_index":51,"title":{"interfaces/NgcLayouts.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["ngclocationopt",{"_index":407,"title":{"classes/NgcLocationOptions.html":{}},"body":{"classes/NgcLocationOptions.html":{},"changelog.html":{}}}],["ngcnocookielawev",{"_index":132,"title":{"interfaces/NgcNoCookieLawEvent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"index.html":{}}}],["ngcpalett",{"_index":35,"title":{"interfaces/NgcPalette.html":{}},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["ngcpaletteopt",{"_index":460,"title":{"classes/NgcPaletteOptions.html":{}},"body":{"classes/NgcPaletteOptions.html":{}}}],["ngcstatuschangeev",{"_index":129,"title":{"interfaces/NgcStatusChangeEvent.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcStatusChangeEvent.html":{},"index.html":{}}}],["ngmodul",{"_index":284,"title":{},"body":{"modules/NgcCookieConsentModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":713,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":699,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":595,"title":{},"body":{"index.html":{}}}],["nocookielaw",{"_index":186,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["nocookielawsourc",{"_index":174,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["nocookielawsubscript",{"_index":696,"title":{},"body":{"index.html":{}}}],["node",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["node_modules/cookieconsent/build/cookieconsent.min.css",{"_index":620,"title":{},"body":{"index.html":{}}}],["node_modules/cookieconsent/build/cookieconsent.min.j",{"_index":619,"title":{},"body":{"index.html":{}}}],["node_modules/ngx",{"_index":631,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":849,"title":{},"body":{"license.html":{}}}],["note",{"_index":610,"title":{},"body":{"index.html":{}}}],["note:if",{"_index":622,"title":{},"body":{"index.html":{}}}],["notic",{"_index":651,"title":{},"body":{"index.html":{},"license.html":{}}}],["notifi",{"_index":176,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["now",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":607,"title":{},"body":{"index.html":{}}}],["null",{"_index":213,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["number",{"_index":350,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["object",{"_index":102,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"injectables/WindowService.html":{}}}],["objet",{"_index":160,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["observ",{"_index":126,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["obtain",{"_index":820,"title":{},"body":{"license.html":{}}}],["on",{"_index":414,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["onc",{"_index":639,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":680,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":679,"title":{},"body":{"index.html":{}}}],["oninitialis",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["onnocookielaw",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["onto",{"_index":438,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["open",{"_index":142,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{}}}],["opt",{"_index":663,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["option",{"_index":30,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"changelog.html":{},"index.html":{}}}],["options.t",{"_index":64,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["options.ts:10",{"_index":93,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["options.ts:11",{"_index":354,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:12",{"_index":82,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["options.ts:14",{"_index":77,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["options.ts:15",{"_index":355,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:16",{"_index":81,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:18",{"_index":89,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:19",{"_index":349,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:20",{"_index":86,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:21",{"_index":432,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["options.ts:22",{"_index":79,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:23",{"_index":352,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["options.ts:24",{"_index":94,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["options.ts:26",{"_index":96,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{}}}],["options.ts:27",{"_index":422,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["options.ts:6",{"_index":398,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["options.ts:8",{"_index":84,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["opton",{"_index":396,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["order",{"_index":416,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["othercompon",{"_index":671,"title":{},"body":{"index.html":{}}}],["othermodul",{"_index":672,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":344,"title":{},"body":{"classes/NgcCookieOptions.html":{},"license.html":{}}}],["out",{"_index":664,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["overrid",{"_index":758,"title":{},"body":{"index.html":{}}}],["overview",{"_index":864,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":582,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["palett",{"_index":29,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["param",{"_index":220,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["paramet",{"_index":116,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["part",{"_index":642,"title":{},"body":{"index.html":{}}}],["particular",{"_index":401,"title":{},"body":{"classes/NgcLawOptions.html":{},"index.html":{},"license.html":{}}}],["pass",{"_index":418,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["path",{"_index":347,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["peerdepend",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":815,"title":{},"body":{"license.html":{}}}],["permit",{"_index":836,"title":{},"body":{"license.html":{}}}],["person",{"_index":819,"title":{},"body":{"license.html":{}}}],["point",{"_index":624,"title":{},"body":{"index.html":{}}}],["polici",{"_index":72,"title":{},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{},"index.html":{}}}],["popup",{"_index":112,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{}}}],["popupclos",{"_index":178,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupclosesourc",{"_index":170,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupclosesubscript",{"_index":692,"title":{},"body":{"index.html":{}}}],["popupinst",{"_index":168,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupopen",{"_index":177,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupopensourc",{"_index":169,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["popupopensubscript",{"_index":691,"title":{},"body":{"index.html":{}}}],["portion",{"_index":841,"title":{},"body":{"license.html":{}}}],["posit",{"_index":878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["possibl",{"_index":877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prevent",{"_index":714,"title":{},"body":{"index.html":{}}}],["previou",{"_index":774,"title":{},"body":{"index.html":{}}}],["prioriti",{"_index":428,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["privaci",{"_index":799,"title":{},"body":{"index.html":{}}}],["privacypolicyhref",{"_index":800,"title":{},"body":{"index.html":{}}}],["privacypolicylink",{"_index":792,"title":{},"body":{"index.html":{}}}],["privat",{"_index":165,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["properli",{"_index":613,"title":{},"body":{"index.html":{}}}],["properti",{"_index":67,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["provid",{"_index":218,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["publish",{"_index":831,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":848,"title":{},"body":{"license.html":{}}}],["react",{"_index":447,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["read",{"_index":363,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["recommend",{"_index":340,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLocationOptions.html":{},"index.html":{}}}],["ref",{"_index":688,"title":{},"body":{"index.html":{}}}],["refer",{"_index":19,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["referenc",{"_index":787,"title":{},"body":{"index.html":{}}}],["regionallaw",{"_index":397,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["relax",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":641,"title":{},"body":{"index.html":{}}}],["render",{"_index":14,"title":{},"body":{"interfaces/NgcCompliance.html":{}}}],["replac",{"_index":783,"title":{},"body":{"index.html":{}}}],["repres",{"_index":52,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["requir",{"_index":599,"title":{},"body":{"index.html":{}}}],["reset",{"_index":867,"title":{},"body":{"overview.html":{}}}],["resourc",{"_index":451,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["restrict",{"_index":825,"title":{},"body":{"license.html":{}}}],["result",{"_index":60,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":108,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["revok",{"_index":182,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["revokechoic",{"_index":183,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["revokechoicesourc",{"_index":173,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["revokechoicesubscript",{"_index":695,"title":{},"body":{"index.html":{}}}],["right",{"_index":828,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["root",{"_index":646,"title":{},"body":{"index.html":{}}}],["rule",{"_index":405,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["rxj",{"_index":127,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["rxjs/subscript",{"_index":682,"title":{},"body":{"index.html":{}}}],["save",{"_index":608,"title":{},"body":{"index.html":{}}}],["scope",{"_index":162,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["script",{"_index":449,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["secur",{"_index":348,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["see",{"_index":657,"title":{},"body":{"index.html":{}}}],["selector",{"_index":683,"title":{},"body":{"index.html":{}}}],["sell",{"_index":835,"title":{},"body":{"license.html":{}}}],["server",{"_index":342,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["servic",{"_index":154,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{}}}],["service/index",{"_index":287,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["servicedefinit",{"_index":419,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["set",{"_index":228,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLocationOptions.html":{},"index.html":{}}}],["setstatu",{"_index":289,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["setstatus(statu",{"_index":140,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["shall",{"_index":839,"title":{},"body":{"license.html":{}}}],["show",{"_index":304,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["showrevok",{"_index":293,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["similar",{"_index":650,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":670,"title":{},"body":{"index.html":{}}}],["site",{"_index":794,"title":{},"body":{"index.html":{}}}],["slightli",{"_index":644,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":822,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"injectables/WindowService.html":{}}}],["specif",{"_index":404,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["specifi",{"_index":368,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["sponsorship",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["src/.../common",{"_index":871,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../window.service.t",{"_index":594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/asset",{"_index":733,"title":{},"body":{"index.html":{}}}],["src/cookieconsent.module.t",{"_index":278,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["src/cookieconsent.module.ts:15",{"_index":282,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["src/event/initialize.event.t",{"_index":391,"title":{},"body":{"interfaces/NgcInitializeEvent.html":{}}}],["src/event/no",{"_index":457,"title":{},"body":{"interfaces/NgcNoCookieLawEvent.html":{}}}],["src/event/statu",{"_index":468,"title":{},"body":{"interfaces/NgcStatusChangeEvent.html":{}}}],["src/model/common",{"_index":5,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"miscellaneous/typealiases.html":{}}}],["src/model/cont",{"_index":63,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["src/model/cooki",{"_index":339,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["src/model/html",{"_index":379,"title":{},"body":{"classes/NgcHTMLElements.html":{}}}],["src/model/law",{"_index":395,"title":{},"body":{"classes/NgcLawOptions.html":{}}}],["src/model/loc",{"_index":408,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["src/model/palett",{"_index":461,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["src/service/cookieconsent.service.t",{"_index":99,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["src/service/cookieconsent.service.ts:122",{"_index":308,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:132",{"_index":319,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:169",{"_index":314,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:176",{"_index":315,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:18",{"_index":107,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["src/service/cookieconsent.service.ts:183",{"_index":316,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:19",{"_index":115,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["src/service/cookieconsent.service.ts:190",{"_index":309,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:195",{"_index":321,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:200",{"_index":310,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:205",{"_index":311,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:210",{"_index":312,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:215",{"_index":313,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:220",{"_index":320,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:225",{"_index":322,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:230",{"_index":317,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:235",{"_index":318,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:27",{"_index":302,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:28",{"_index":297,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:29",{"_index":291,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:30",{"_index":301,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:31",{"_index":292,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:32",{"_index":294,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:33",{"_index":295,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:34",{"_index":296,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:35",{"_index":300,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:36",{"_index":303,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:37",{"_index":298,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:38",{"_index":299,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{}}}],["src/service/cookieconsent.service.ts:58",{"_index":324,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:61",{"_index":330,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:64",{"_index":337,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:66",{"_index":323,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:69",{"_index":332,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:70",{"_index":329,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:71",{"_index":326,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:72",{"_index":336,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:73",{"_index":334,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:74",{"_index":327,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:79",{"_index":331,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:83",{"_index":328,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:87",{"_index":325,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:91",{"_index":335,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:95",{"_index":333,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/cookieconsent.service.ts:99",{"_index":307,"title":{},"body":{"injectables/NgcCookieConsentService.html":{}}}],["src/service/window.service.t",{"_index":472,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["src/service/window.service.ts:9",{"_index":476,"title":{},"body":{"injectables/WindowService.html":{}}}],["start",{"_index":481,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":279,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["statu",{"_index":55,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"interfaces/NgcStatusChangeEvent.html":{}}}],["statuschang",{"_index":181,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["statuschangesourc",{"_index":172,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["statuschangesubscript",{"_index":694,"title":{},"body":{"index.html":{}}}],["step",{"_index":730,"title":{},"body":{"index.html":{}}}],["straight",{"_index":424,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["stream",{"_index":195,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["strict",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"miscellaneous/typealiases.html":{}}}],["stuff",{"_index":677,"title":{},"body":{"index.html":{}}}],["style",{"_index":615,"title":{},"body":{"index.html":{}}}],["stylesheet",{"_index":33,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["styleurl",{"_index":686,"title":{},"body":{"index.html":{}}}],["subject",{"_index":125,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"license.html":{}}}],["sublicens",{"_index":833,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":175,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"index.html":{}}}],["subscribe(data",{"_index":756,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":681,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":840,"title":{},"body":{"license.html":{}}}],["succe",{"_index":442,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["such",{"_index":618,"title":{},"body":{"index.html":{}}}],["suit",{"_index":780,"title":{},"body":{"index.html":{}}}],["suport",{"_index":224,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["support",{"_index":251,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["sure",{"_index":612,"title":{},"body":{"index.html":{}}}],["system",{"_index":628,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":621,"title":{},"body":{"index.html":{}}}],["tag",{"_index":450,"title":{},"body":{"classes/NgcLocationOptions.html":{},"index.html":{}}}],["target",{"_index":73,"title":{},"body":{"classes/NgcContentOptions.html":{},"changelog.html":{}}}],["tell",{"_index":47,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"index.html":{}}}],["templateurl",{"_index":684,"title":{},"body":{"index.html":{}}}],["term",{"_index":802,"title":{},"body":{"index.html":{}}}],["test",{"_index":604,"title":{},"body":{"index.html":{}}}],["text",{"_index":39,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{}}}],["theme",{"_index":661,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["this.ccservice.destroy();//remov",{"_index":773,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig",{"_index":702,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().cont",{"_index":757,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.allow",{"_index":765,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.deni",{"_index":767,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.dismiss",{"_index":763,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.head",{"_index":759,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.link",{"_index":769,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.messag",{"_index":761,"title":{},"body":{"index.html":{}}}],["this.ccservice.getconfig().content.polici",{"_index":771,"title":{},"body":{"index.html":{}}}],["this.ccservice.init(this.ccservice.getconfig",{"_index":775,"title":{},"body":{"index.html":{}}}],["this.ccservice.initialize$.subscrib",{"_index":706,"title":{},"body":{"index.html":{}}}],["this.ccservice.nocookielaw$.subscrib",{"_index":712,"title":{},"body":{"index.html":{}}}],["this.ccservice.popupclose$.subscrib",{"_index":704,"title":{},"body":{"index.html":{}}}],["this.ccservice.popupopen$.subscrib",{"_index":701,"title":{},"body":{"index.html":{}}}],["this.ccservice.revokechoice$.subscrib",{"_index":710,"title":{},"body":{"index.html":{}}}],["this.ccservice.statuschange$.subscrib",{"_index":708,"title":{},"body":{"index.html":{}}}],["this.checkpopupinstantiated('clearstatu",{"_index":256,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('clos",{"_index":260,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('destroy",{"_index":262,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('fadein",{"_index":264,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('fadeout",{"_index":266,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('hasansw",{"_index":272,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('hascons",{"_index":274,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('isopen",{"_index":268,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('open",{"_index":258,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.checkpopupinstantiated('togglerevokebutton",{"_index":270,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config",{"_index":227,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.oninitialis",{"_index":234,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onnocookielaw",{"_index":241,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onpopupclos",{"_index":232,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onpopupopen",{"_index":230,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onrevokechoic",{"_index":239,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.config.onstatuschang",{"_index":236,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookiecons",{"_index":225,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookieconsent.hastransit",{"_index":254,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookieconsent.initialise(this.config",{"_index":246,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.cookieconsent.statu",{"_index":249,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.init(config",{"_index":210,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initi",{"_index":200,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesourc",{"_index":191,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesource.asobserv",{"_index":201,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesource.next",{"_index":235,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.initializesubscript",{"_index":705,"title":{},"body":{"index.html":{}}}],["this.initializesubscription.unsubscrib",{"_index":719,"title":{},"body":{"index.html":{}}}],["this.nocookielaw",{"_index":206,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsourc",{"_index":194,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsource.asobserv",{"_index":207,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsource.next",{"_index":244,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.nocookielawsubscript",{"_index":711,"title":{},"body":{"index.html":{}}}],["this.nocookielawsubscription.unsubscrib",{"_index":722,"title":{},"body":{"index.html":{}}}],["this.popupclos",{"_index":198,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesourc",{"_index":190,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesource.asobserv",{"_index":199,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesource.next",{"_index":233,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupclosesubscript",{"_index":703,"title":{},"body":{"index.html":{}}}],["this.popupclosesubscription.unsubscrib",{"_index":718,"title":{},"body":{"index.html":{}}}],["this.popupinst",{"_index":212,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.clearstatu",{"_index":257,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.close(showrevok",{"_index":261,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.destroy",{"_index":263,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.fadein",{"_index":265,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.fadeout",{"_index":267,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.hasansw",{"_index":273,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.hascons",{"_index":275,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.isopen",{"_index":269,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.open",{"_index":259,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupinstance.togglerevokebutton(show",{"_index":271,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopen",{"_index":196,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensourc",{"_index":188,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensource.asobserv",{"_index":197,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensource.next",{"_index":231,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.popupopensubscript",{"_index":700,"title":{},"body":{"index.html":{}}}],["this.popupopensubscription.unsubscrib",{"_index":717,"title":{},"body":{"index.html":{}}}],["this.revokechoic",{"_index":204,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesourc",{"_index":193,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesource.asobserv",{"_index":205,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesource.next",{"_index":240,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.revokechoicesubscript",{"_index":709,"title":{},"body":{"index.html":{}}}],["this.revokechoicesubscription.unsubscrib",{"_index":721,"title":{},"body":{"index.html":{}}}],["this.statuschang",{"_index":202,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesourc",{"_index":192,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesource.asobserv",{"_index":203,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesource.next",{"_index":238,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.statuschangesubscript",{"_index":707,"title":{},"body":{"index.html":{}}}],["this.statuschangesubscription.unsubscrib",{"_index":720,"title":{},"body":{"index.html":{}}}],["this.translateservic",{"_index":748,"title":{},"body":{"index.html":{}}}],["this.translateservice.addlangs(['en",{"_index":741,"title":{},"body":{"index.html":{}}}],["this.translateservice.getbrowserlang",{"_index":745,"title":{},"body":{"index.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":743,"title":{},"body":{"index.html":{}}}],["this.translateservice.use(browserlang.match(/en|fr",{"_index":746,"title":{},"body":{"index.html":{}}}],["this.window",{"_index":208,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["this.window.cookiecons",{"_index":226,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["throw",{"_index":214,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["timeout",{"_index":420,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["tine",{"_index":811,"title":{},"body":{"index.html":{},"license.html":{}}}],["togglerevokebutton",{"_index":290,"title":{},"body":{"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{}}}],["togglerevokebutton(show",{"_index":148,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["tool",{"_index":48,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"classes/NgcLawOptions.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["top",{"_index":647,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["tort",{"_index":858,"title":{},"body":{"license.html":{}}}],["toshref",{"_index":803,"title":{},"body":{"index.html":{}}}],["toslink",{"_index":793,"title":{},"body":{"index.html":{}}}],["total",{"_index":778,"title":{},"body":{"index.html":{}}}],["track",{"_index":358,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["translat",{"_index":252,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"changelog.html":{},"index.html":{}}}],["translate/cor",{"_index":739,"title":{},"body":{"index.html":{}}}],["translateservic",{"_index":738,"title":{},"body":{"index.html":{}}}],["translateservice:translateservic",{"_index":740,"title":{},"body":{"index.html":{}}}],["transmit",{"_index":375,"title":{},"body":{"classes/NgcCookieOptions.html":{}}}],["transpar",{"_index":463,"title":{},"body":{"classes/NgcPaletteOptions.html":{}}}],["tri",{"_index":455,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["true",{"_index":372,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{}}}],["truli",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["ts2411",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":46,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{}}}],["type",{"_index":74,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcInitializeEvent.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcNoCookieLawEvent.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"interfaces/NgcStatusChangeEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":868,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":480,"title":{},"body":{"injectables/WindowService.html":{}}}],["types.t",{"_index":872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typic",{"_index":152,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["typo",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":724,"title":{},"body":{"index.html":{}}}],["umd",{"_index":625,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":97,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcHTMLElements.html":{},"injectables/WindowService.html":{}}}],["under",{"_index":813,"title":{},"body":{"index.html":{}}}],["understand",{"_index":796,"title":{},"body":{"index.html":{}}}],["univers",{"_index":223,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["unsubscrib",{"_index":689,"title":{},"body":{"index.html":{}}}],["up",{"_index":649,"title":{},"body":{"index.html":{}}}],["updat",{"_index":532,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["upon",{"_index":806,"title":{},"body":{"index.html":{}}}],["url",{"_index":361,"title":{},"body":{"classes/NgcCookieOptions.html":{},"changelog.html":{}}}],["us",{"_index":17,"title":{},"body":{"interfaces/NgcCompliance.html":{},"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcHasCookieConsent.html":{},"interfaces/NgcLayouts.html":{},"classes/NgcLocationOptions.html":{},"interfaces/NgcPalette.html":{},"classes/NgcPaletteOptions.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":673,"title":{},"body":{"index.html":{}}}],["user",{"_index":359,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["usevalu",{"_index":288,"title":{},"body":{"modules/NgcCookieConsentModule.html":{}}}],["v1.1.0",{"_index":600,"title":{},"body":{"index.html":{}}}],["v3.1.0",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["v8",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["valu",{"_index":76,"title":{},"body":{"classes/NgcContentOptions.html":{},"classes/NgcCookieOptions.html":{},"classes/NgcHTMLElements.html":{},"classes/NgcLawOptions.html":{},"classes/NgcLocationOptions.html":{},"classes/NgcPaletteOptions.html":{}}}],["version",{"_index":549,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":376,"title":{},"body":{"classes/NgcCookieOptions.html":{},"classes/NgcLocationOptions.html":{},"index.html":{}}}],["view",{"_index":596,"title":{},"body":{"index.html":{}}}],["void",{"_index":114,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["want",{"_index":433,"title":{},"body":{"classes/NgcLocationOptions.html":{}}}],["warranti",{"_index":842,"title":{},"body":{"license.html":{}}}],["websit",{"_index":83,"title":{},"body":{"classes/NgcContentOptions.html":{},"index.html":{}}}],["whether",{"_index":856,"title":{},"body":{"license.html":{}}}],["window",{"_index":66,"title":{},"body":{"classes/NgcContentOptions.html":{},"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["window.servic",{"_index":138,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["windowservic",{"_index":137,"title":{"injectables/WindowService.html":{}},"body":{"interfaces/NgcCookieConsent.html":{},"modules/NgcCookieConsentModule.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{},"injectables/WindowService.html":{}}}],["windowservice.nativewindow",{"_index":209,"title":{},"body":{"interfaces/NgcCookieConsent.html":{},"interfaces/NgcCookieConsentPopup.html":{},"injectables/NgcCookieConsentService.html":{},"interfaces/NgcHasCookieConsent.html":{}}}],["without",{"_index":440,"title":{},"body":{"classes/NgcLocationOptions.html":{},"license.html":{}}}],["word",{"_index":44,"title":{},"body":{"interfaces/NgcCompliance.html":{},"interfaces/NgcCookieConsentStatus.html":{},"interfaces/NgcLayouts.html":{},"interfaces/NgcPalette.html":{}}}],["work",{"_index":345,"title":{},"body":{"classes/NgcCookieOptions.html":{},"index.html":{}}}],["wrong",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["x274c",{"_index":78,"title":{},"body":{"classes/NgcContentOptions.html":{}}}],["ye",{"_index":120,"title":{},"body":{"interfaces/NgcCookieConsent.html":{}}}],["your",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["your.domain.com",{"_index":656,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":866,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/NgcCompliance.html":{"url":"interfaces/NgcCompliance.html","title":"interface - NgcCompliance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCompliance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Compliance.\nEach compliance level contains the HTML needed to render that level of compliance.\nThe 'cc-compliance' class is used in the CSS to reference the group of buttons.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/model/common-interfaces.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcContentOptions.html":{"url":"classes/NgcContentOptions.html","title":"class - NgcContentOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcContentOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/content-options.ts\n        \n\n            \n                Description\n            \n            \n                Content Options.\nText strings used for cookie consent window elements.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allow\n                            \n                            \n                                    Optional\n                                close\n                            \n                            \n                                    Optional\n                                deny\n                            \n                            \n                                    Optional\n                                dismiss\n                            \n                            \n                                    Optional\n                                header\n                            \n                            \n                                    Optional\n                                href\n                            \n                            \n                                    Optional\n                                link\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                policy\n                            \n                            \n                                    Optional\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allow:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Allow cookies'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        close:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '&#x274c;'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deny\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deny:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Decline'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismiss:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Got it!'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cookies used on the website!'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            href\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        href:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://cookiesandyou.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Learn more'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'This website uses cookies to ensure you get the best experience on our website.'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            policy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        policy:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cookie Policy'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '_blank'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/content-options.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | undefined\n\n                    \n                \n                        \n                            \n                                Defined in src/model/content-options.ts:26\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class NgcContentOptions {\n\n  header ? = 'Cookies used on the website!';\n\n  message ? = 'This website uses cookies to ensure you get the best experience on our website.';\n\n  dismiss ? = 'Got it!';\n\n  allow ? = 'Allow cookies';\n\n  deny ? = 'Decline';\n\n  link ? = 'Learn more';\n\n  href ? = 'https://cookiesandyou.com';\n\n  close ? = '&#x274c;';\n\n  policy ? = 'Cookie Policy';\n\n  target ? = '_blank';\n\n  [key: string]: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCookieConsent.html":{"url":"interfaces/NgcCookieConsent.html","title":"interface - NgcCookieConsent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCookieConsent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Basic interface to represent cookieconsent object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hasTransition\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getStatus\n                                \n                                \n                                    initialise\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentStatus\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialise\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialise(config: NgcCookieConsentConfig, callback?: (popup?: NgcCookieConsentPopup) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasTransition\n                                    \n                                \n                                \n                                    \n                                        hasTransition:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     NgcCookieConsentStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NgcCookieConsentStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgcCookieConsentModule.html":{"url":"modules/NgcCookieConsentModule.html","title":"module - NgcCookieConsentModule","body":"\n                   \n\n\n\n\n    Modules\n    NgcCookieConsentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cookieconsent.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Main module of the library\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config: NgcCookieConsentConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/cookieconsent.module.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WindowService, NgcCookieConsentConfig, NgcCookieConsentService } from './service/index';\n\n/**\n * Main module of the library\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgcCookieConsentModule {\n\n  static forRoot(config: NgcCookieConsentConfig): ModuleWithProviders {\n    return {\n      ngModule: NgcCookieConsentModule,\n      providers: [WindowService, { provide: NgcCookieConsentConfig, useValue: config }, NgcCookieConsentService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCookieConsentPopup.html":{"url":"interfaces/NgcCookieConsentPopup.html","title":"interface - NgcCookieConsentPopup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCookieConsentPopup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Basic interface to represent cookieconsent.Popup object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clearStatus\n                                \n                                \n                                    close\n                                \n                                \n                                    destroy\n                                \n                                \n                                    fadeIn\n                                \n                                \n                                    fadeOut\n                                \n                                \n                                    getStatus\n                                \n                                \n                                    hasAnswered\n                                \n                                \n                                    hasConsented\n                                \n                                \n                                    isOpen\n                                \n                                \n                                    open\n                                \n                                \n                                    setStatus\n                                \n                                \n                                    toggleRevokeButton\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose(showRevoke: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        showRevoke\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentStatus\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAnswered()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasConsented\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasConsented()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStatus(status: NgcCookieConsentStatus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    NgcCookieConsentStatus\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleRevokeButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleRevokeButton(show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgcCookieConsentService.html":{"url":"injectables/NgcCookieConsentService.html","title":"injectable - NgcCookieConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgcCookieConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to interact with Cookie Consent API.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                cookieconsent\n                            \n                            \n                                initialize$\n                            \n                            \n                                    Private\n                                initializeSource\n                            \n                            \n                                noCookieLaw$\n                            \n                            \n                                    Private\n                                noCookieLawSource\n                            \n                            \n                                popupClose$\n                            \n                            \n                                    Private\n                                popupCloseSource\n                            \n                            \n                                    Private\n                                popupInstance\n                            \n                            \n                                popupOpen$\n                            \n                            \n                                    Private\n                                popupOpenSource\n                            \n                            \n                                revokeChoice$\n                            \n                            \n                                    Private\n                                revokeChoiceSource\n                            \n                            \n                                statusChange$\n                            \n                            \n                                    Private\n                                statusChangeSource\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkPopupInstantiated\n                            \n                            \n                                clearStatus\n                            \n                            \n                                close\n                            \n                            \n                                destroy\n                            \n                            \n                                fadeIn\n                            \n                            \n                                fadeOut\n                            \n                            \n                                getConfig\n                            \n                            \n                                getStatus\n                            \n                            \n                                getTransition\n                            \n                            \n                                hasAnswered\n                            \n                            \n                                hasConsented\n                            \n                            \n                                init\n                            \n                            \n                                isOpen\n                            \n                            \n                                open\n                            \n                            \n                                toggleRevokeButton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowService: WindowService, config: NgcCookieConsentConfig)\n                    \n                \n                        \n                            \n                                Defined in src/service/cookieconsent.service.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    WindowService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkPopupInstantiated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkPopupInstantiated(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:190\n                            \n                        \n\n\n                \n                    \n                            Clears the current cookie status.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose(showRevoke: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:200\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        showRevoke\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:210\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fadeOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nfadeOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:215\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:169\n                            \n                        \n\n\n                \n                    \n                            Gets the current configuration  used by the Cookie Consent.\n\n\n                            \n                                Returns :     NgcCookieConsentConfig\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStatus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:176\n                            \n                        \n\n\n                \n                    \n                            Gets the current cookie status.\n\n\n                            \n                                Returns :     NgcCookieConsentStatus\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTransition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            Gets the current browser support for translations\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAnswered()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:230\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasConsented\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasConsented()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:235\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: NgcCookieConsentConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            Initializes Cookie Consent with the provided configuration.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgcCookieConsentConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the configuration object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOpen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:220\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NgcCookieConsentPopup\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleRevokeButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleRevokeButton(show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:225\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     NgcCookieConsentConfig\n\n                    \n                \n                    \n                        \n                            Type :     NgcCookieConsentConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookieconsent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieconsent:     NgcCookieConsent\n\n                    \n                \n                    \n                        \n                            Type :     NgcCookieConsent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialize$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:87\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent initializes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializeSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initializeSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noCookieLaw$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noCookieLaw$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:99\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when no Cookie Law is applicable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            noCookieLawSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noCookieLawSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupClose$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupClose$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:83\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent popup closes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupCloseSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupCloseSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupInstance:     NgcCookieConsentPopup\n\n                    \n                \n                    \n                        \n                            Type :     NgcCookieConsentPopup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupOpen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupOpen$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:79\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent popup opens.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            popupOpenSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popupOpenSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revokeChoice$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revokeChoice$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:95\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie is revoked.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            revokeChoiceSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revokeChoiceSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusChange$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusChange$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:91\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified when Cookie Consent status changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            statusChangeSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusChangeSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/service/cookieconsent.service.ts:64\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcCookieConsentStatus.html":{"url":"interfaces/NgcCookieConsentStatus.html","title":"interface - NgcCookieConsentStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcCookieConsentStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Interface representing the cookie consent status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allow\n                                \n                                \n                                            Optional\n                                        deny\n                                \n                                \n                                            Optional\n                                        dismiss\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allow\n                                    \n                                \n                                \n                                    \n                                        allow:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deny\n                                    \n                                \n                                \n                                    \n                                        deny:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismiss\n                                    \n                                \n                                \n                                    \n                                        dismiss:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcCookieOptions.html":{"url":"classes/NgcCookieOptions.html","title":"class - NgcCookieOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcCookieOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/cookie-options.ts\n        \n\n            \n                Description\n            \n            \n                Cookie Options.\nIt is recommended to set these values to correspond with your server.\nYou MUST set the ‘domain’ option, otherwise your cookies may not work.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                domain\n                            \n                            \n                                    Optional\n                                expiryDays\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                secure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        domain:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            expiryDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expiryDays:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 365\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cookieconsent_status'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        path:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            secure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        secure:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/model/cookie-options.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcCookieOptions {\n\n  // Name of the cookie that keeps track of users choice\n  // Default: 'cookieconsent_status'\n  name ? = 'cookieconsent_status';\n\n  // URL path that the cookie 'name' belongs to. The cookie can only be read at this location\n  // Default: '/'\n  path ? = '/';\n\n  // The domain that the cookie 'name' belongs to. The cookie can only be read on this domain. Guide to cookie domains\n  // Default: \n  domain: string;\n\n  // The cookies expire date, specified in days (specify -1 for no expiry)\n  // Default: 365\n  expiryDays ? = 365;\n\n  // If true the cookie will be created with the secure flag. Secure cookies will only be transmitted via HTTPS.\n  secure ? = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcHTMLElements.html":{"url":"classes/NgcHTMLElements.html","title":"class - NgcHTMLElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcHTMLElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/html-elements.ts\n        \n\n            \n                Description\n            \n            \n                HTML Elements\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allow\n                            \n                            \n                                    Optional\n                                close\n                            \n                            \n                                    Optional\n                                deny\n                            \n                            \n                                    Optional\n                                dismiss\n                            \n                            \n                                    Optional\n                                header\n                            \n                            \n                                    Optional\n                                link\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                messagelink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allow:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{allow}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        close:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{close}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deny\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deny:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{deny}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dismiss:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{dismiss}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{header}}&nbsp;'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            link\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        link:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{link}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{message}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            messagelink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messagelink:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '{{message}} {{link}}'\n                        \n                    \n                        \n                            \n                                    Defined in src/model/html-elements.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | undefined\n\n                    \n                \n                        \n                            \n                                Defined in src/model/html-elements.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class NgcHTMLElements {\n\n  header ? = '{{header}}&nbsp;';\n\n  message ? = '{{message}}';\n\n  messagelink ? = '{{message}} {{link}}';\n\n  dismiss ? = '{{dismiss}}';\n\n  allow ? = '{{allow}}';\n\n  deny ? = '{{deny}}';\n\n  link ? = '{{link}}';\n\n  close ? = '{{close}}';\n\n  [key: string]: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcHasCookieConsent.html":{"url":"interfaces/NgcHasCookieConsent.html","title":"interface - NgcHasCookieConsent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcHasCookieConsent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cookieconsent.service.ts\n        \n\n            \n                Description\n            \n            \n                Marker interface to indicate that an object (typically window) has cookieconsent property.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cookieconsent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cookieconsent\n                                    \n                                \n                                \n                                    \n                                        cookieconsent:     NgcCookieConsent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NgcCookieConsent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { NgcCookieConsentStatus } from '../model/common-interfaces';\nimport { NgcStatusChangeEvent } from '../event/status-change.event';\nimport { NgcNoCookieLawEvent } from '../event/no-cookie-law.event';\nimport { NgcInitializeEvent } from '../event/initialize.event';\nimport { NgcCookieConsentConfig } from './cookieconsent-config';\nimport { WindowService } from './window.service';\n\n\n/**\n * Basic interface to represent `cookieconsent` object.\n */\nexport interface NgcCookieConsent {\n  hasTransition: boolean;\n  status: NgcCookieConsentStatus;\n  getStatus(): NgcCookieConsentStatus;\n  initialise(config: NgcCookieConsentConfig, callback?: (popup: NgcCookieConsentPopup) => void): void;\n\n}\n\n/**\n * Basic interface to represent `cookieconsent.Popup` object.\n */\nexport interface NgcCookieConsentPopup {\n  setStatus(status: NgcCookieConsentStatus): void;\n  getStatus(): NgcCookieConsentStatus;\n  clearStatus(): void;\n  open(): NgcCookieConsentPopup;\n  close(showRevoke: boolean): NgcCookieConsentPopup;\n  destroy(): void;\n  fadeIn(): void;\n  fadeOut(): void;\n  isOpen(): boolean;\n  toggleRevokeButton(show: boolean): void;\n  hasAnswered(): boolean;\n  hasConsented(): boolean;\n}\n\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `cookieconsent` property.\n */\nexport interface NgcHasCookieConsent {\n  cookieconsent: NgcCookieConsent;\n}\n\n\n/**\n * Service to interact with Cookie Consent API.\n */\n@Injectable()\nexport class NgcCookieConsentService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the cookieconsent.js library\n  private cookieconsent: NgcCookieConsent;\n\n  // the current instance of the cookie consent popup\n  private popupInstance: NgcCookieConsentPopup;\n\n  // Window Object\n  private window: Window & NgcHasCookieConsent;\n\n  private config: NgcCookieConsentConfig;\n\n  // Observable  sources\n  private popupOpenSource: Subject;\n  private popupCloseSource: Subject;\n  private initializeSource: Subject;\n  private statusChangeSource: Subject;\n  private revokeChoiceSource: Subject;\n  private noCookieLawSource: Subject;\n\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup opens.\n   */\n  popupOpen$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent popup closes.\n   */\n  popupClose$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie Consent initializes.\n   */\n  initialize$: Observable;\n  /**\n  * Observable to subscribe to and get notified when Cookie Consent status changes.\n  */\n  statusChange$: Observable;\n  /**\n   * Observable to subscribe to and get notified when Cookie is revoked.\n   */\n  revokeChoice$: Observable;\n  /**\n  * Observable to subscribe to and get notified when no Cookie Law is applicable.\n  */\n  noCookieLaw$: Observable;\n\n  constructor(windowService: WindowService, config: NgcCookieConsentConfig) {\n    // Observable  sources\n    this.popupOpenSource = new Subject();\n    this.popupCloseSource = new Subject();\n    this.initializeSource = new Subject();\n    this.statusChangeSource = new Subject();\n    this.revokeChoiceSource = new Subject();\n    this.noCookieLawSource = new Subject();\n\n    // Observable  streams\n    this.popupOpen$ = this.popupOpenSource.asObservable();\n    this.popupClose$ = this.popupCloseSource.asObservable();\n    this.initialize$ = this.initializeSource.asObservable();\n    this.statusChange$ = this.statusChangeSource.asObservable();\n    this.revokeChoice$ = this.revokeChoiceSource.asObservable();\n    this.noCookieLaw$ = this.noCookieLawSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  private checkPopupInstantiated(method: string) {\n    if (this.popupInstance == null) {\n      throw new Error(`Cookie popup has not yet been instantiated. Cannot invoke ${method}()`);\n    }\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgcCookieConsentConfig): void {\n\n    if (this.window) { // For Angular Universal suport\n      this.cookieconsent = this.window.cookieconsent;\n\n      this.config = config;\n      // Set callbacks hooks:\n      this.config.onPopupOpen =\n        () => this.popupOpenSource.next();\n\n      this.config.onPopupClose =\n        () => this.popupCloseSource.next();\n\n      this.config.onInitialise =\n        (status: 'allow' | 'deny' | 'dismiss') => this.initializeSource.next({ status: status });\n\n      this.config.onStatusChange =\n        (status: 'allow' | 'deny' | 'dismiss', chosenBefore: boolean) => {\n          this.statusChangeSource.next({ status: status, chosenBefore: chosenBefore });\n        };\n\n      this.config.onRevokeChoice =\n        () => this.revokeChoiceSource.next();\n\n      this.config.onNoCookieLaw =\n        (countryCode: string, country: string) => {\n          this.noCookieLawSource.next({ countryCode: countryCode, country: country });\n        };\n\n      // Init the cookieconsent library with injected config\n      this.cookieconsent.initialise(this.config, (popup: NgcCookieConsentPopup) => this.popupInstance = popup);\n    }\n  }\n\n  /**\n   * Gets the current configuration  used by the Cookie Consent.\n   */\n  getConfig(): NgcCookieConsentConfig {\n    return this.config;\n  }\n\n  /**\n   * Gets the current cookie status.\n   */\n  getStatus(): NgcCookieConsentStatus {\n    return this.cookieconsent.status;\n  }\n\n  /**\n   * Gets the current browser support for translations\n   */\n  getTransition(): boolean {\n    return this.cookieconsent.hasTransition;\n  }\n\n  /**\n   * Clears the current cookie status.\n   */\n  clearStatus(): void {\n    this.checkPopupInstantiated('clearStatus');\n    return this.popupInstance.clearStatus();\n  }\n\n  open(): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('open');\n    return this.popupInstance.open();\n  }\n\n  close(showRevoke: boolean): NgcCookieConsentPopup {\n    this.checkPopupInstantiated('close');\n    return this.popupInstance.close(showRevoke);\n  }\n\n  destroy(): void {\n    this.checkPopupInstantiated('destroy');\n    this.popupInstance.destroy();\n  }\n\n  fadeIn(): void {\n    this.checkPopupInstantiated('fadeIn');\n    this.popupInstance.fadeIn();\n  }\n\n  fadeOut(): void {\n    this.checkPopupInstantiated('fadeOut');\n    this.popupInstance.fadeOut();\n  }\n\n  isOpen(): boolean {\n    this.checkPopupInstantiated('isOpen');\n    return this.popupInstance.isOpen();\n  }\n\n  toggleRevokeButton(show: boolean): void {\n    this.checkPopupInstantiated('toggleRevokeButton');\n    this.popupInstance.toggleRevokeButton(show);\n  }\n\n  hasAnswered(): boolean {\n    this.checkPopupInstantiated('hasAnswered');\n    return this.popupInstance.hasAnswered();\n  }\n\n  hasConsented(): boolean {\n    this.checkPopupInstantiated('hasConsented');\n    return this.popupInstance.hasConsented();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcInitializeEvent.html":{"url":"interfaces/NgcInitializeEvent.html","title":"interface - NgcInitializeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcInitializeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/initialize.event.ts\n        \n\n            \n                Description\n            \n            \n                Event fired when Cookie Consent initializes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"allow\" | \"deny\" | \"dismiss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"allow\" | \"deny\" | \"dismiss\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of cookie consent\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NgcInitializeEvent {\n  /**\n   * The status of cookie consent\n   */\n  status: 'allow' | 'deny' | 'dismiss';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcLawOptions.html":{"url":"classes/NgcLawOptions.html","title":"class - NgcLawOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcLawOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/law-options.ts\n        \n\n            \n                Description\n            \n            \n                Law Optons.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                    Optional\n                                regionalLaw\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countryCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        countryCode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/law-options.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            regionalLaw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regionalLaw:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/model/law-options.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcLawOptions {\n  // Rather than getting the country code from the location services, you can hard code a particular country into the tool.\n  countryCode: string;\n\n  // If false, then we only enable the popup if the country has the cookie law. We ignore all other country specific rules.\n  // Default: true\n  regionalLaw ?= true;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcLayouts.html":{"url":"interfaces/NgcLayouts.html","title":"interface - NgcLayouts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcLayouts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Layouts\nJust like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\nThe word between these two markers tell the tool what each element is called.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/model/common-interfaces.ts:30\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcLocationOptions.html":{"url":"classes/NgcLocationOptions.html","title":"class - NgcLocationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcLocationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/location-options.ts\n        \n\n            \n                Description\n            \n            \n                Location Options\nThe location services are disabled by default. You are encouraged to implement a handler to your own service, rather than using the free ones provided.\nTo enable the basic location services, set 'location' to 'true'. To add you own services or configure the order or execution, pass an object with configuration properties.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                serviceDefinitions\n                            \n                            \n                                    Optional\n                                services\n                            \n                            \n                                    Optional\n                                timeout\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            serviceDefinitions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceDefinitions:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/location-options.ts:27\n                            \n                        \n\n                \n                    \n                        This can be used to define new services via a key, but new services they can also go straight into the 'services' array in an ad-hoc fashion.\n  It is recommended that you define services in 'serviceDefinitions' and use 'services' to configure priority between services\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            services\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        services:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['freegeoip', 'ipinfo', 'maxmind']\n                        \n                    \n                        \n                            \n                                    Defined in src/model/location-options.ts:21\n                            \n                        \n\n                \n                    \n                        This array defines the services that you want to use. We attempt to get the country code from the first service, and only if the service fails do we move onto the next service.\nIf all services fail, the popup is opened without modification.\nIf a service succeeds, then the two letter country code is passed to the 'Law' module, with changes your popup options depending on the cookie laws in the country code.\nDefault: ['freegeoip', 'ipinfo', 'maxmind']\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in src/model/location-options.ts:14\n                            \n                        \n\n                \n                    \n                        We can't react to errors from script tag resources, so we set a timeout. If we don't have the answer after 5000ms, try the next service.\nDefault: 5000 (milliseconds)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgcLocationOptions {\n\n  /**\n   * We can't react to errors from script tag resources, so we set a timeout. If we don't have the answer after 5000ms, try the next service.\n   * Default: 5000 (milliseconds)\n   */\n  timeout ?= 5000;\n  /**\n   * This array defines the services that you want to use. We attempt to get the country code from the first service, and only if the service fails do we move onto the next service.\n   * If all services fail, the popup is opened without modification.\n   * If a service succeeds, then the two letter country code is passed to the 'Law' module, with changes your popup options depending on the cookie laws in the country code.\n   * Default: ['freegeoip', 'ipinfo', 'maxmind']\n   */\n  services ?: any[] = ['freegeoip', 'ipinfo', 'maxmind'];\n\n  /**\n   * This can be used to define new services via a key, but new services they can also go straight into the 'services' array in an ad-hoc fashion.\n   *  It is recommended that you define services in 'serviceDefinitions' and use 'services' to configure priority between services\n   */\n  serviceDefinitions ?: { [key: string]: (...options: any[]) => any };\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcNoCookieLawEvent.html":{"url":"interfaces/NgcNoCookieLawEvent.html","title":"interface - NgcNoCookieLawEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcNoCookieLawEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/no-cookie-law.event.ts\n        \n\n            \n                Description\n            \n            \n                Event fired when there is no cookie law for a given country.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        countryCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The country\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The country code\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NgcNoCookieLawEvent {\n    /**\n     * The country code\n     */\n    countryCode: string;\n    /**\n     * The country\n     */\n    country: string;\n  }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcPalette.html":{"url":"interfaces/NgcPalette.html","title":"interface - NgcPalette","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcPalette\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/common-interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Palette Options\nColours can be defined in additional stylesheets or using attributes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        background\n                                \n                                \n                                            Optional\n                                        border\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                    \n                                \n                                \n                                    \n                                        background:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        border\n                                    \n                                \n                                \n                                    \n                                        border:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NgcCompliance {\n  [key: string]: string;\n}\n\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\n\nexport interface NgcPalette {\n  background?: string;\n  border?: string;\n  link?: string;\n  text?: string;\n}\n\n/**\n * Layouts\n *\n * Just like the 'compliance' buttons are built using the '{{' and '}}' markers, the main layout can be built too like this too.\n * The word between these two markers tell the tool what each element is called.\n */\nexport interface NgcLayouts {\n  [key: string]: string;\n}\n\n\n/**\n * Interface representing the cookie consent status.\n */\nexport interface NgcCookieConsentStatus {\n  allow?: 'allow';\n  deny?: 'deny';\n  dismiss?: 'dismiss';\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgcPaletteOptions.html":{"url":"classes/NgcPaletteOptions.html","title":"class - NgcPaletteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgcPaletteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/palette-options.ts\n        \n\n            \n                Description\n            \n            \n                Palette Options\nColours can be defined in additional stylesheets or using attributes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                button\n                            \n                            \n                                    Optional\n                                highlight\n                            \n                            \n                                    Optional\n                                popup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            button\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        button:     NgcPalette\n\n                    \n                \n                    \n                        \n                            Type :     NgcPalette\n\n                        \n                    \n                    \n                        \n                            Default value : { background: 'transparent', border: '#f8e71c', text: '#f8e71c' }\n                        \n                    \n                        \n                            \n                                    Defined in src/model/palette-options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            highlight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        highlight:     NgcPalette\n\n                    \n                \n                    \n                        \n                            Type :     NgcPalette\n\n                        \n                    \n                    \n                        \n                            Default value : { background: '#f8e71c', border: '#f8e71c', text: '#000000' }\n                        \n                    \n                        \n                            \n                                    Defined in src/model/palette-options.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            popup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popup:     NgcPalette\n\n                    \n                \n                    \n                        \n                            Type :     NgcPalette\n\n                        \n                    \n                    \n                        \n                            Default value : { background: '#000000', text: '#fff', link: '#fff' }\n                        \n                    \n                        \n                            \n                                    Defined in src/model/palette-options.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgcPalette } from './common-interfaces';\n/**\n * Palette Options\n *\n * Colours can be defined in additional stylesheets or using attributes.\n */\nexport class NgcPaletteOptions {\n  popup?: NgcPalette = { background: '#000000', text: '#fff', link: '#fff' };\n\n  button?: NgcPalette = { background: 'transparent', border: '#f8e71c', text: '#f8e71c' };\n\n  highlight?: NgcPalette = { background: '#f8e71c', border: '#f8e71c', text: '#000000' };\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgcStatusChangeEvent.html":{"url":"interfaces/NgcStatusChangeEvent.html","title":"interface - NgcStatusChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgcStatusChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/status-change.event.ts\n        \n\n            \n                Description\n            \n            \n                Event fired when cookie status changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chosenBefore\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chosenBefore\n                                    \n                                \n                                \n                                    \n                                        chosenBefore:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag indicating if the new status was chosen before\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"allow\" | \"deny\" | \"dismiss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"allow\" | \"deny\" | \"dismiss\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The new status of cookie consent\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NgcStatusChangeEvent {\n  /**\n   * The new status of cookie consent\n   */\n  status: 'allow' | 'deny' | 'dismiss';\n  /**\n   * Flag indicating if the new status was chosen before\n   */\n  chosenBefore: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowService.html":{"url":"injectables/WindowService.html","title":"injectable - WindowService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/window.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to interact with the window object.\n\n            \n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in src/service/window.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to interact with the window object.\n */\n@Injectable()\nexport class WindowService {\n\n  get nativeWindow(): any {\n    return _window();\n  }\n}\n\nfunction _window(): any {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n2.2.3 (2019-06-14)\nFeatures\n\nlocation: allow activating location services in config and improve typings for NgcLawOptions, NgcLocationOptions (306fe18), closes #57\n\n2.2.2 (2019-05-28)\nBug Fixes\n\nNgcCookieOptions: add missing export (971b65e), closes #53\nsponsorship: fix github sponsorship of yours truly (d3a7b3d)\n\n2.2.1 (2019-05-14)\nBug Fixes\n\ntypings: correct ERROR TS2411 when compiling with strict mode on (4fb02eb), closes #49\n\n2.2.0 (2019-03-28)\nFeatures\n\ncustomLayout: allow customizing the cookie bar layout and content (4b32ce0)\n\n2.1.1 (2019-02-06)\nBug Fixes\n\ntypings: fix lint isssue due to bad typings in NgcCookieConsentStatus (27ebb55), closes #11\n\n2.1.0 (2018-10-25)\nFeatures\n\ncore: update to cookieconsent v3.1.0 and its features (d674b93)\noptions: add policy and target options to NgcContentOptions (a0849f2), closes #23\n\n2.0.0 (2018-07-19)\nFeatures\n\nng6: add support for angular 6 (2ab9341), closes #17 #18\nonNoCookieLaw: add support for onNoCookieLaw callback (2d960c8)\n\nBREAKING CHANGES\n\nng6: - Minimum version of Angular is now v6+\nMinimum version of Node is v8+\n\n1.1.1 (2018-07-18)\nBug Fixes\n\ninitialize$: callback was never called due to typo (onInitialise) (6cd260f), closes #19\n\n1.1.0 (2018-07-03)\nBug Fixes\n\ndemo: fix wrong assets url on deployed demo app (fedcbd9)\n\nFeatures\n\nclose: add close method to allow fully closing the 'Coookie Policy' bar (02ada28), closes #15\ndemo: add support for translated cookie consent messages + update docs (e1bf9bf), closes #14\n\n1.0.1 (2017-11-22)\nFeatures\n\ncore: make cookie.domainoption mandatory in configuration service and update doc (9835145)\ndemo: update demo app to Angular CLI 1.4.7 (37371b6)\npackaging: relax peerDependencies versions (02496e8), closes #8\n\n1.0.0 (2017-09-07)\nFeatures\n\nall: initial commit (5f8a340)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/core : 6.0.0\n        \n            @angular/common : 6.0.0\n        \n            cookieconsent : 3.1.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _window   (src/.../window.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/service/window.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _window\n                            \n                            \n                        \n                    \n                \n                \n                    \n_window()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nngx-cookieconsent - Cookie Consent module for Angular.\n\n\n\n\n\n\nDemo\nView the module in action at https://tinesoft.github.io/ngx-cookieconsent\nDependencies\n\nAngular (requires Angular 6+, v1.1.0 is the latest version for Angular \nCookie Consent (requires Cookie Consent 3 or higher, tested with 3.1.0)\n\nInstallation\nInstall above dependencies via npm. In particular for Cookie Consent:\nnpm install --save cookieconsentNow install ngx-cookieconsent via:\nnpm install --save ngx-cookieconsent\nAngular-CLI\n\nNote: If you are using angular-cli to build your app, make sure that cookieconsent is properly listed as a global library, and as global style.\n\nTo do so, edit your angular-cli.json as such:\n      \"scripts\": [\n        \"../node_modules/cookieconsent/build/cookieconsent.min.js\"\n      ],\n\n      \"styles\": [\n        \"../node_modules/cookieconsent/build/cookieconsent.min.css\"\n      ],\nSystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for ngx-cookieconsent:\nmap: {\n  'ngx-cookieconsent': 'node_modules/ngx-cookieconsent/bundles/ngx-cookieconsent.umd.js',\n}In your systemjs config file, meta needs to tell the System loader how to load cookieconsent:\n    meta: {\n    './node_modules/cookieconsent/build/cookieconsent.min.js': {\n            format: 'amd'\n        }\n    }In your index.html file, add script and link tags to load  cookieconsent globally:\n    \n    \n    \n    \n    \n\nOnce installed you need to import the main module:\nimport {NgcCookieConsentModule} from 'ngx-cookieconsent';The only remaining part is to list the imported module in your application module. The exact method will be slightly\ndifferent for the root (top-level) module for which you should end up with the code similar to (notice NgcCookieConsentModule.forRoot()):\nimport {NgcCookieConsentModule, NgcCookieConsentConfig} from 'ngx-cookieconsent';\n\nconst cookieConfig:NgcCookieConsentConfig = {\n  cookie: {\n    domain: 'localhost' // or 'your.domain.com' // it is mandatory to set a domain, for cookies to work properly (see https://goo.gl/S2Hy2A)\n  },\n  palette: {\n    popup: {\n      background: '#000'\n    },\n    button: {\n      background: '#f1d600'\n    }\n  },\n  theme: 'edgeless',\n  type: 'opt-out'\n};\n\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgcCookieConsentModule.forRoot(cookieConfig), ...],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Other modules in your application can simply import NgcCookieConsentModule:\nimport {NgcCookieConsentModule} from 'ngx-cookieconsent';\n\n@NgModule({\n  declarations: [OtherComponent, ...],\n  imports: [NgcCookieConsentModule, ...], \n})\nexport class OtherModule {\n}Usage\nOnce the module is imported, you can use the NgcCookieContentService in your component (i.e. AppComponent) to subscribe to main events fired by Cookie Consent and do stuff like disabling cookies or other.\nHere is how it works:\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgcCookieConsentService } from 'ngx-cookieconsent';\nimport { Subscription }   from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  //keep refs to subscriptions to be able to unsubscribe later\n  private popupOpenSubscription: Subscription;\n  private popupCloseSubscription: Subscription;\n  private initializeSubscription: Subscription;\n  private statusChangeSubscription: Subscription;\n  private revokeChoiceSubscription: Subscription;\n  private noCookieLawSubscription: Subscription;\n\n  constructor(private ccService: NgcCookieConsentService){}\n\n  ngOnInit() {\n    // subscribe to cookieconsent observables to react to main events\n    this.popupOpenSubscription = this.ccService.popupOpen$.subscribe(\n      () => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.popupCloseSubscription = this.ccService.popupClose$.subscribe(\n      () => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.initializeSubscription = this.ccService.initialize$.subscribe(\n      (event: NgcInitializeEvent) => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.statusChangeSubscription = this.ccService.statusChange$.subscribe(\n      (event: NgcStatusChangeEvent) => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n    this.revokeChoiceSubscription = this.ccService.revokeChoice$.subscribe(\n      () => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n\n      this.noCookieLawSubscription = this.ccService.noCookieLaw$.subscribe(\n      (event: NgcNoCookieLawEvent) => {\n        // you can use this.ccService.getConfig() to do stuff...\n      });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to cookieconsent observables to prevent memory leaks\n    this.popupOpenSubscription.unsubscribe();\n    this.popupCloseSubscription.unsubscribe();\n    this.initializeSubscription.unsubscribe();\n    this.statusChangeSubscription.unsubscribe();\n    this.revokeChoiceSubscription.unsubscribe();\n    this.noCookieLawSubscription.unsubscribe();\n  }\n}\nSee Cookie Consent Documentation to see more about how to customize the UI or interact with user interactions.\nI18n Support\nMessages displayed in the Cookie Consent Bar can easily be translated, using libraries like ngx-translate.\nBasically this involved the following steps (using ngx-translate + Anglar CLI):\n\nInstall and configure ngx-translate\n\nProvide the translation JSON files in src/assets/, for e.g: en.json, fr.json, ...\n\n\n{\n    \"cookie\": {\n        \"header\": \"Cookies used on the website!\",\n        \"message\": \"This website uses cookies to ensure you get the best experience on our website.\",\n        \"dismiss\": \"Got it!\",\n        \"allow\": \"Allow cookies\",\n        \"deny\": \"Decline\",\n        \"link\": \"Learn more\",\n        \"policy\": \"Cookie Policy\"\n    }\n}\nNote: see content-options.ts for complete list of messages that can be translated.\n\n\nConfigure your main component AppComponent\n\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(private ccService: NgcCookieConsentService, private translateService:TranslateService) {\n  }\n\n  ngOnInit() {\n    // Support for translated cookies messages\n    this.translateService.addLangs(['en', 'fr']);\n    this.translateService.setDefaultLang('en');\n\n    const browserLang = this.translateService.getBrowserLang();\n    this.translateService.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n\n    this.translateService//\n      .get(['cookie.header', 'cookie.message', 'cookie.dismiss', 'cookie.allow', 'cookie.deny', 'cookie.link', 'cookie.policy'])\n      .subscribe(data => {\n\n        this.ccService.getConfig().content = this.ccService.getConfig().content || {} ;\n        // Override default messages with the translated ones\n        this.ccService.getConfig().content.header = data['cookie.header'];\n        this.ccService.getConfig().content.message = data['cookie.message'];\n        this.ccService.getConfig().content.dismiss = data['cookie.dismiss'];\n        this.ccService.getConfig().content.allow = data['cookie.allow'];\n        this.ccService.getConfig().content.deny = data['cookie.deny'];\n        this.ccService.getConfig().content.link = data['cookie.link'];\n        this.ccService.getConfig().content.policy = data['cookie.policy'];\n\n        this.ccService.destroy();//remove previous cookie bar (with default messages)\n        this.ccService.init(this.ccService.getConfig()); // update config with translated messages\n      });\n  }Custom Layout Support\nCookie Consent supports custom layouts, and so does ngx-cookieconsent.\nSo if your are not happy with the default appearance of the cookie bar, you can totally customize it to better suit your needs. This involves overriding a few options:\n\nNgcCookieConsentConfig.layout: to define the name of your custom layout to use. For e.g my-custom-layout\nNgcCookieConsentConfig.layouts: to define your custom layout HTML. Elements between {{ and }} will be replaced by their content (see in [NgcCookieConsentConfig.content below)\nNgcCookieConsentConfig.elements : html elements referenced in the custom layout (between {{ and }})\nNgcCookieConsentConfig.content : content of elements referenced in the custom elements above (between {{ and }})\n\nHere is a example of a custom layout, that is inspired from the default 'basic' layout , but simply changes the message and links that are displayed in the bar.\n\n  \n\n\nimport {NgcCookieConsentModule, NgcCookieConsentConfig} from 'ngx-cookieconsent';\n\nconst cookieConfig:NgcCookieConsentConfig = {\n  cookie: {\n    domain: 'localhost'// it is recommended to set your domain, for cookies to work properly\n  },\n  palette: {\n    popup: {\n      background: '#000'\n    },\n    button: {\n      background: '#f1d600'\n    }\n  },\n  theme: 'edgeless',\n  type: 'opt-out',\n  layout: 'my-custom-layout',\n  layouts: {\n    \"my-custom-layout\": '{{messagelink}}{{compliance}}'\n  },\n  elements:{\n    messagelink: `\n    {{message}} \n      {{cookiePolicyLink}}, \n      {{privacyPolicyLink}} and our \n      {{tosLink}}\n    \n    `,\n  },\n  content:{\n    message: 'By using our site, you acknowledge that you have read and understand our ',\n\n    cookiePolicyLink: 'Cookie Policy',\n    cookiePolicyHref: 'https://cookie.com',\n\n    privacyPolicyLink: 'Privacy Policy',\n    privacyPolicyHref: 'https://privacy.com',\n\n    tosLink: 'Terms of Service',\n    tosHref: 'https://tos.com',\n  }\n};\n\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgcCookieConsentModule.forRoot(cookieConfig), ...],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Credits\nngx-cookieconsent is built upon Cookie Consent, created by Insites\nLicense\nCopyright (c) 2019 Tine Kondo. Licensed under the MIT License (MIT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Tine Kondo\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgcCookieConsentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgcCookieCompliance   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookieLayout   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookiePosition   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookieTheme   (src/.../common-types.ts)\n                        \n                        \n                            NgcCookieType   (src/.../common-types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/model/common-types.ts\n    \n        \n            \n                \n                    \n                        \n                        NgcCookieCompliance\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar compliances\n\n                        \n                    \n                \n                    \n                        NgcCookieCompliance:     \"info\" | \"opt-in\" | \"opt-out\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookieLayout\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar layouts\n\n                        \n                    \n                \n                    \n                        NgcCookieLayout:     \"basic\" | \"basic-close\" | \"basic-header\" | string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookiePosition\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar positions\n\n                        \n                    \n                \n                    \n                        NgcCookiePosition:     \"top\" | \"bottom\" | \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookieTheme\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar themes\n\n                        \n                    \n                \n                    \n                        NgcCookieTheme:     \"block\" | \"edgeless\" | \"classic\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgcCookieType\n                    \n                \n                    \n                        \n                            Type for possible Cookie Bar types\n\n                        \n                    \n                \n                    \n                        NgcCookieType:     \"info\" | \"opt-in\" | \"opt-out\"\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
